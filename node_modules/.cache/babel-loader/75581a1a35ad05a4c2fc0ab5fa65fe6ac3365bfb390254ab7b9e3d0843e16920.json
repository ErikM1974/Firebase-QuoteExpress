{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport debounce from 'lodash/debounce';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, limit, orderBy } from 'firebase/firestore';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nconst LARGE_SIZES = ['2XL', '3XL', '4XL', '5XL', '6XL'];\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst getPriceForQuantity = (product, totalQuantity) => {\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\n  return parseFloat(product.Price_2_5) || 0;\n};\nexport default function EmbroideryCalculator() {\n  _s();\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [colors, setColors] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [csvData, setCsvData] = useState(null);\n  useEffect(() => {\n    const fetchLatestCsvData = async () => {\n      try {\n        const csvFilesRef = collection(db, 'csv_files');\n        const q = query(csvFilesRef, orderBy('uploadDate', 'desc'), limit(1));\n        const querySnapshot = await getDocs(q);\n        if (!querySnapshot.empty) {\n          const latestCsvFile = querySnapshot.docs[0].data();\n          setCsvData(latestCsvFile);\n          console.log('Latest CSV file:', latestCsvFile);\n        }\n      } catch (error) {\n        console.error('Error fetching latest CSV data:', error);\n      }\n    };\n    fetchLatestCsvData();\n  }, []);\n  const fetchStyles = useCallback(debounce(async (inputValue, callback) => {\n    if (!inputValue) {\n      callback([]);\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const stylesRef = collection(db, 'embroidery_items');\n      const q = query(stylesRef, where('STYLE_No', '>=', inputValue), where('STYLE_No', '<=', inputValue + '\\uf8ff'), limit(50));\n      const querySnapshot = await getDocs(q);\n      const options = querySnapshot.docs.map(doc => ({\n        label: doc.data().STYLE_No,\n        value: doc.data().STYLE_No\n      }));\n      callback(options);\n    } catch (err) {\n      console.error('Error fetching styles:', err);\n      setErrorMessage('Failed to load styles. Please try again.');\n      callback([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, 500), []);\n  const fetchColors = useCallback(async styleNo => {\n    if (!styleNo) return;\n    setIsLoading(true);\n    try {\n      const colorsRef = collection(db, 'embroidery_items');\n      const q = query(colorsRef, where('STYLE_No', '==', styleNo));\n      const querySnapshot = await getDocs(q);\n      const colorSet = new Set();\n      const productDetails = {};\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.COLOR_NAME) colorSet.add(data.COLOR_NAME);\n        if (!productDetails[data.COLOR_NAME]) {\n          productDetails[data.COLOR_NAME] = {\n            PRODUCT_TITLE: data.PRODUCT_TITLE,\n            Price_2_5: data.Price_2_5,\n            Price_6_11: data.Price_6_11,\n            Price_12_23: data.Price_12_23,\n            Price_24_47: data.Price_24_47,\n            Price_48_71: data.Price_48_71,\n            Price_72_plus: data.Price_72_plus,\n            Surcharge: data.Surcharge,\n            sizes: {}\n          };\n        }\n        productDetails[data.COLOR_NAME].sizes[data.SIZE] = {\n          ...data\n        };\n      });\n      setColors(prevColors => ({\n        ...prevColors,\n        [styleNo]: Array.from(colorSet)\n      }));\n      setProductDatabase(prevDatabase => ({\n        ...prevDatabase,\n        [styleNo]: {\n          colors: productDetails\n        }\n      }));\n    } catch (err) {\n      console.error('Error fetching colors:', err);\n      setErrorMessage('Failed to load color options. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const updateOrder = useCallback((index, field, value) => {\n    setOrders(prevOrders => {\n      const newOrders = [...prevOrders];\n      newOrders[index] = {\n        ...newOrders[index],\n        [field]: value,\n        error: null\n      };\n      if (field === 'STYLE_No') {\n        newOrders[index].COLOR_NAME = '';\n        newOrders[index].quantities = {};\n        if (value && !colors[value]) {\n          fetchColors(value);\n        }\n      } else if (field === 'COLOR_NAME') {\n        newOrders[index].quantities = {};\n      }\n      return newOrders;\n    });\n  }, [colors, fetchColors]);\n  const calculateOrderTotals = useCallback(() => {\n    const totalQuantity = orders.reduce((acc, order) => {\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n    }, 0);\n    let totalPrice = 0;\n    orders.forEach(order => {\n      var _productDatabase$orde;\n      const productColors = (_productDatabase$orde = productDatabase[order.STYLE_No]) === null || _productDatabase$orde === void 0 ? void 0 : _productDatabase$orde.colors;\n      const colorDetails = productColors === null || productColors === void 0 ? void 0 : productColors[order.COLOR_NAME];\n      if (!colorDetails) return;\n      const basePrice = getPriceForQuantity(colorDetails, totalQuantity);\n      Object.entries(order.quantities).forEach(([size, qty]) => {\n        if (!qty) return;\n        const sizeDetails = colorDetails.sizes[size];\n        if (!sizeDetails) return;\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\n        totalPrice += (basePrice + surcharge) * qty;\n      });\n    });\n    return {\n      quantity: totalQuantity,\n      price: totalPrice\n    };\n  }, [orders, productDatabase]);\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), csvData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"csv-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Using data from CSV file: \", csvData.fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Uploaded on: \", new Date(csvData.uploadDate.seconds * 1000).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Style No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Other Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Line Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Row Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map((order, index) => {\n          var _productDatabase$orde2, _colors$order$STYLE_N;\n          const productColors = (_productDatabase$orde2 = productDatabase[order.STYLE_No]) === null || _productDatabase$orde2 === void 0 ? void 0 : _productDatabase$orde2.colors;\n          const colorDetails = productColors === null || productColors === void 0 ? void 0 : productColors[order.COLOR_NAME];\n          const productTitle = (colorDetails === null || colorDetails === void 0 ? void 0 : colorDetails.PRODUCT_TITLE) || '';\n          const sizesAvailable = colorDetails ? Object.keys(colorDetails.sizes) : [];\n          const mainSizesAvailable = sizesAvailable.filter(size => MAIN_SIZES.includes(size));\n          const otherSizesAvailable = sizesAvailable.filter(size => !MAIN_SIZES.includes(size));\n          const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n          const lineTotal = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n            if (!qty) return sum;\n            const sizeDetails = colorDetails === null || colorDetails === void 0 ? void 0 : colorDetails.sizes[size];\n            if (!sizeDetails) return sum;\n            const basePrice = getPriceForQuantity(colorDetails, totals.quantity);\n            const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\n            return sum + (basePrice + surcharge) * qty;\n          }, 0);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                cacheOptions: true,\n                loadOptions: fetchStyles,\n                onChange: selectedOption => {\n                  const value = selectedOption ? selectedOption.value : '';\n                  updateOrder(index, 'STYLE_No', value);\n                },\n                value: order.STYLE_No ? {\n                  value: order.STYLE_No,\n                  label: order.STYLE_No\n                } : null,\n                placeholder: \"Enter or select style\",\n                isDisabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: order.COLOR_NAME,\n                onChange: e => updateOrder(index, 'COLOR_NAME', e.target.value),\n                disabled: !order.STYLE_No || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), (_colors$order$STYLE_N = colors[order.STYLE_No]) === null || _colors$order$STYLE_N === void 0 ? void 0 : _colors$order$STYLE_N.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: color,\n                  children: color\n                }, color, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: productTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: LARGE_SIZES.includes(size) ? 'highlight-large-size' : '',\n              children: colorDetails !== null && colorDetails !== void 0 && colorDetails.sizes[size] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: parseInt(e.target.value) || 0\n                  }),\n                  min: \"0\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"price-info\",\n                  children: colorDetails ? `$${(getPriceForQuantity(colorDetails, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0)).toFixed(2)}` : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this) : 'N/A'\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: otherSizesAvailable.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [size, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: parseInt(e.target.value) || 0\n                  }),\n                  min: \"0\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this)]\n              }, size, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: lineQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", lineTotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setOrders(orders.filter((_, i) => i !== index)),\n                disabled: isLoading,\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOrders([...orders, {\n        STYLE_No: '',\n        COLOR_NAME: '',\n        quantities: {},\n        error: null\n      }]),\n      disabled: isLoading,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Submit order:', orders),\n      disabled: isLoading,\n      children: \"Submit Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"A6+OpKWf12siowpdjEvYoDcNgTM=\");\n_c2 = EmbroideryCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","debounce","db","collection","query","where","getDocs","limit","orderBy","jsxDEV","_jsxDEV","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getPriceForQuantity","product","totalQuantity","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","colors","setColors","errorMessage","setErrorMessage","isLoading","setIsLoading","csvData","setCsvData","fetchLatestCsvData","csvFilesRef","q","querySnapshot","empty","latestCsvFile","docs","data","console","log","fetchStyles","inputValue","callback","stylesRef","options","map","doc","label","value","err","fetchColors","styleNo","colorsRef","colorSet","Set","productDetails","forEach","add","PRODUCT_TITLE","Surcharge","sizes","SIZE","prevColors","Array","from","prevDatabase","updateOrder","index","field","prevOrders","newOrders","calculateOrderTotals","reduce","acc","order","Object","values","sum","qty","totalPrice","_productDatabase$orde","productColors","colorDetails","basePrice","entries","size","sizeDetails","surcharge","includes","quantity","price","totals","Date","uploadDate","seconds","toLocaleString","role","_productDatabase$orde2","_colors$order$STYLE_N","productTitle","sizesAvailable","keys","mainSizesAvailable","filter","otherSizesAvailable","lineQuantity","lineTotal","cacheOptions","loadOptions","onChange","selectedOption","placeholder","isDisabled","e","target","disabled","color","type","parseInt","min","toFixed","onClick","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport debounce from 'lodash/debounce';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs, limit, orderBy } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL', '5XL', '6XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLatestCsvData = async () => {\r\n      try {\r\n        const csvFilesRef = collection(db, 'csv_files');\r\n        const q = query(csvFilesRef, orderBy('uploadDate', 'desc'), limit(1));\r\n        const querySnapshot = await getDocs(q);\r\n        \r\n        if (!querySnapshot.empty) {\r\n          const latestCsvFile = querySnapshot.docs[0].data();\r\n          setCsvData(latestCsvFile);\r\n          console.log('Latest CSV file:', latestCsvFile);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching latest CSV data:', error);\r\n      }\r\n    };\r\n\r\n    fetchLatestCsvData();\r\n  }, []);\r\n\r\n  const fetchStyles = useCallback(\r\n    debounce(async (inputValue, callback) => {\r\n      if (!inputValue) {\r\n        callback([]);\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      try {\r\n        const stylesRef = collection(db, 'embroidery_items');\r\n        const q = query(\r\n          stylesRef,\r\n          where('STYLE_No', '>=', inputValue),\r\n          where('STYLE_No', '<=', inputValue + '\\uf8ff'),\r\n          limit(50)\r\n        );\r\n\r\n        const querySnapshot = await getDocs(q);\r\n        const options = querySnapshot.docs.map(doc => ({\r\n          label: doc.data().STYLE_No,\r\n          value: doc.data().STYLE_No\r\n        }));\r\n\r\n        callback(options);\r\n      } catch (err) {\r\n        console.error('Error fetching styles:', err);\r\n        setErrorMessage('Failed to load styles. Please try again.');\r\n        callback([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const fetchColors = useCallback(async (styleNo) => {\r\n    if (!styleNo) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const colorsRef = collection(db, 'embroidery_items');\r\n      const q = query(colorsRef, where('STYLE_No', '==', styleNo));\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      const colorSet = new Set();\r\n      const productDetails = {};\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        if (data.COLOR_NAME) colorSet.add(data.COLOR_NAME);\r\n        if (!productDetails[data.COLOR_NAME]) {\r\n          productDetails[data.COLOR_NAME] = {\r\n            PRODUCT_TITLE: data.PRODUCT_TITLE,\r\n            Price_2_5: data.Price_2_5,\r\n            Price_6_11: data.Price_6_11,\r\n            Price_12_23: data.Price_12_23,\r\n            Price_24_47: data.Price_24_47,\r\n            Price_48_71: data.Price_48_71,\r\n            Price_72_plus: data.Price_72_plus,\r\n            Surcharge: data.Surcharge,\r\n            sizes: {},\r\n          };\r\n        }\r\n        productDetails[data.COLOR_NAME].sizes[data.SIZE] = {\r\n          ...data,\r\n        };\r\n      });\r\n\r\n      setColors((prevColors) => ({\r\n        ...prevColors,\r\n        [styleNo]: Array.from(colorSet),\r\n      }));\r\n\r\n      setProductDatabase((prevDatabase) => ({\r\n        ...prevDatabase,\r\n        [styleNo]: {\r\n          colors: productDetails,\r\n        },\r\n      }));\r\n\r\n    } catch (err) {\r\n      console.error('Error fetching colors:', err);\r\n      setErrorMessage('Failed to load color options. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n          if (value && !colors[value]) {\r\n            fetchColors(value);\r\n          }\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        return newOrders;\r\n      });\r\n    },\r\n    [colors, fetchColors]\r\n  );\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    let totalPrice = 0;\r\n\r\n    orders.forEach((order) => {\r\n      const productColors = productDatabase[order.STYLE_No]?.colors;\r\n      const colorDetails = productColors?.[order.COLOR_NAME];\r\n      if (!colorDetails) return;\r\n\r\n      const basePrice = getPriceForQuantity(colorDetails, totalQuantity);\r\n\r\n      Object.entries(order.quantities).forEach(([size, qty]) => {\r\n        if (!qty) return;\r\n        const sizeDetails = colorDetails.sizes[size];\r\n        if (!sizeDetails) return;\r\n\r\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\r\n        totalPrice += (basePrice + surcharge) * qty;\r\n      });\r\n    });\r\n\r\n    return { quantity: totalQuantity, price: totalPrice };\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {csvData && (\r\n        <div className=\"csv-info\">\r\n          <p>Using data from CSV file: {csvData.fileName}</p>\r\n          <p>Uploaded on: {new Date(csvData.uploadDate.seconds * 1000).toLocaleString()}</p>\r\n        </div>\r\n      )}\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Style No</th>\r\n            <th>Color Name</th>\r\n            <th>Product Title</th>\r\n            {MAIN_SIZES.map((size) => (\r\n              <th key={size}>{size}</th>\r\n            ))}\r\n            <th>Other Sizes</th>\r\n            <th>Line Qty</th>\r\n            <th>Row Total</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order, index) => {\r\n            const productColors = productDatabase[order.STYLE_No]?.colors;\r\n            const colorDetails = productColors?.[order.COLOR_NAME];\r\n            const productTitle = colorDetails?.PRODUCT_TITLE || '';\r\n            const sizesAvailable = colorDetails ? Object.keys(colorDetails.sizes) : [];\r\n            const mainSizesAvailable = sizesAvailable.filter((size) => MAIN_SIZES.includes(size));\r\n            const otherSizesAvailable = sizesAvailable.filter((size) => !MAIN_SIZES.includes(size));\r\n\r\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n\r\n            const lineTotal = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n              if (!qty) return sum;\r\n              const sizeDetails = colorDetails?.sizes[size];\r\n              if (!sizeDetails) return sum;\r\n\r\n              const basePrice = getPriceForQuantity(colorDetails, totals.quantity);\r\n              const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\r\n              return sum + (basePrice + surcharge) * qty;\r\n            }, 0);\r\n\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <AsyncSelect\r\n                    cacheOptions\r\n                    loadOptions={fetchStyles}\r\n                    onChange={(selectedOption) => {\r\n                      const value = selectedOption ? selectedOption.value : '';\r\n                      updateOrder(index, 'STYLE_No', value);\r\n                    }}\r\n                    value={\r\n                      order.STYLE_No\r\n                        ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                        : null\r\n                    }\r\n                    placeholder=\"Enter or select style\"\r\n                    isDisabled={isLoading}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={order.COLOR_NAME}\r\n                    onChange={(e) => updateOrder(index, 'COLOR_NAME', e.target.value)}\r\n                    disabled={!order.STYLE_No || isLoading}\r\n                  >\r\n                    <option value=\"\">Select Color</option>\r\n                    {colors[order.STYLE_No]?.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>{productTitle}</td>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <td key={size} className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}>\r\n                    {colorDetails?.sizes[size] ? (\r\n                      <div>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                        <div className=\"price-info\">\r\n                          {colorDetails ? `$${(getPriceForQuantity(colorDetails, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0)).toFixed(2)}` : ''}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      'N/A'\r\n                    )}\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  {otherSizesAvailable.map((size) => (\r\n                    <div key={size}>\r\n                      <span>{size}: </span>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) =>\r\n                          updateOrder(index, 'quantities', {\r\n                            ...order.quantities,\r\n                            [size]: parseInt(e.target.value) || 0,\r\n                          })\r\n                        }\r\n                        min=\"0\"\r\n                        disabled={isLoading}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n                <td>{lineQuantity}</td>\r\n                <td>${lineTotal.toFixed(2)}</td>\r\n                <td>\r\n                  <button onClick={() => setOrders(orders.filter((_, i) => i !== index))} disabled={isLoading}>\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button\r\n        onClick={() =>\r\n          setOrders([...orders, { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null }])\r\n        }\r\n        disabled={isLoading}\r\n      >\r\n        Add Line\r\n      </button>\r\n      <button onClick={() => console.log('Submit order:', orders)} disabled={isLoading}>\r\n        Submit Order\r\n      </button>\r\n      <div>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}