{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport debounce from 'lodash/debounce';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, limit } from 'firebase/firestore';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nconst LARGE_SIZES = ['2XL', '3XL', '4XL', '5XL', '6XL'];\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst getPriceForQuantity = (product, totalQuantity) => {\n  console.log('Calculating price for quantity:', totalQuantity);\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\n  return parseFloat(product.Price_2_5) || 0;\n};\nexport default function EmbroideryCalculator() {\n  _s();\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [colors, setColors] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchStyles = useCallback(debounce(async (inputValue, callback) => {\n    if (!inputValue) {\n      callback([]);\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const stylesRef = collection(db, 'embroidery_items');\n      const q = query(stylesRef, where('STYLE_No', '>=', inputValue), where('STYLE_No', '<=', inputValue + '\\uf8ff'), limit(50));\n      const querySnapshot = await getDocs(q);\n      const options = querySnapshot.docs.map(doc => ({\n        label: doc.data().STYLE_No,\n        value: doc.data().STYLE_No\n      }));\n      callback(options);\n    } catch (err) {\n      console.error('Error fetching styles:', err);\n      setErrorMessage('Failed to load styles. Please try again.');\n      callback([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, 500), []);\n  const fetchColors = useCallback(async styleNo => {\n    if (!styleNo) return;\n    setIsLoading(true);\n    try {\n      console.log(`Fetching colors for style: ${styleNo}`);\n      const colorsRef = collection(db, 'embroidery_items');\n      const q = query(colorsRef, where('STYLE_No', '==', styleNo));\n      const querySnapshot = await getDocs(q);\n      const colorSet = new Set();\n      const productDetails = {};\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.COLOR_NAME) colorSet.add(data.COLOR_NAME);\n        if (!productDetails[data.COLOR_NAME]) {\n          productDetails[data.COLOR_NAME] = {\n            PRODUCT_TITLE: data.PRODUCT_TITLE,\n            Price_2_5: data.Price_2_5,\n            Price_6_11: data.Price_6_11,\n            Price_12_23: data.Price_12_23,\n            Price_24_47: data.Price_24_47,\n            Price_48_71: data.Price_48_71,\n            Price_72_plus: data.Price_72_plus,\n            Surcharge: data.Surcharge,\n            sizes: {}\n          };\n        }\n        productDetails[data.COLOR_NAME].sizes[data.SIZE] = {\n          ...data\n        };\n      });\n      setColors(prevColors => ({\n        ...prevColors,\n        [styleNo]: Array.from(colorSet)\n      }));\n      setProductDatabase(prevDatabase => ({\n        ...prevDatabase,\n        [styleNo]: {\n          colors: productDetails\n        }\n      }));\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\n    } catch (err) {\n      console.error('Error fetching colors:', err);\n      setErrorMessage('Failed to load color options. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const updateOrder = useCallback((index, field, value) => {\n    console.log(`Updating order ${index}, field: ${field}, value:`, value);\n    setOrders(prevOrders => {\n      const newOrders = [...prevOrders];\n      newOrders[index] = {\n        ...newOrders[index],\n        [field]: value,\n        error: null\n      };\n      if (field === 'STYLE_No') {\n        newOrders[index].COLOR_NAME = '';\n        newOrders[index].quantities = {};\n        if (value && !colors[value]) {\n          fetchColors(value);\n        }\n      } else if (field === 'COLOR_NAME') {\n        newOrders[index].quantities = {};\n      }\n      console.log('Updated orders:', newOrders);\n      return newOrders;\n    });\n  }, [colors, fetchColors]);\n  const calculateOrderTotals = useCallback(() => {\n    console.log('Calculating order totals...');\n    const totalQuantity = orders.reduce((acc, order) => {\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n    }, 0);\n    let totalPrice = 0;\n    orders.forEach(order => {\n      var _productDatabase$orde;\n      const productColors = (_productDatabase$orde = productDatabase[order.STYLE_No]) === null || _productDatabase$orde === void 0 ? void 0 : _productDatabase$orde.colors;\n      const colorDetails = productColors === null || productColors === void 0 ? void 0 : productColors[order.COLOR_NAME];\n      if (!colorDetails) return;\n      const basePrice = getPriceForQuantity(colorDetails, totalQuantity);\n      Object.entries(order.quantities).forEach(([size, qty]) => {\n        if (!qty) return;\n        const sizeDetails = colorDetails.sizes[size];\n        if (!sizeDetails) return;\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\n        totalPrice += (basePrice + surcharge) * qty;\n      });\n    });\n    console.log('Total quantity:', totalQuantity, 'Total price:', totalPrice);\n    return {\n      quantity: totalQuantity,\n      price: totalPrice\n    };\n  }, [orders, productDatabase]);\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Style No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Other Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Line Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Row Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map((order, index) => {\n          var _productDatabase$orde2, _colors$order$STYLE_N;\n          const productColors = (_productDatabase$orde2 = productDatabase[order.STYLE_No]) === null || _productDatabase$orde2 === void 0 ? void 0 : _productDatabase$orde2.colors;\n          const colorDetails = productColors === null || productColors === void 0 ? void 0 : productColors[order.COLOR_NAME];\n          const productTitle = (colorDetails === null || colorDetails === void 0 ? void 0 : colorDetails.PRODUCT_TITLE) || '';\n          const sizesAvailable = colorDetails ? Object.keys(colorDetails.sizes) : [];\n          const mainSizesAvailable = sizesAvailable.filter(size => MAIN_SIZES.includes(size));\n          const otherSizesAvailable = sizesAvailable.filter(size => !MAIN_SIZES.includes(size));\n          const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n          const lineTotal = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n            if (!qty) return sum;\n            const sizeDetails = colorDetails === null || colorDetails === void 0 ? void 0 : colorDetails.sizes[size];\n            if (!sizeDetails) return sum;\n            const basePrice = getPriceForQuantity(colorDetails, totals.quantity);\n            const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\n            return sum + (basePrice + surcharge) * qty;\n          }, 0);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                cacheOptions: true,\n                loadOptions: fetchStyles,\n                onChange: selectedOption => {\n                  const value = selectedOption ? selectedOption.value : '';\n                  updateOrder(index, 'STYLE_No', value);\n                },\n                value: order.STYLE_No ? {\n                  value: order.STYLE_No,\n                  label: order.STYLE_No\n                } : null,\n                placeholder: \"Enter or select style\",\n                isDisabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: order.COLOR_NAME,\n                onChange: e => updateOrder(index, 'COLOR_NAME', e.target.value),\n                disabled: !order.STYLE_No || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), (_colors$order$STYLE_N = colors[order.STYLE_No]) === null || _colors$order$STYLE_N === void 0 ? void 0 : _colors$order$STYLE_N.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: color,\n                  children: color\n                }, color, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: productTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: LARGE_SIZES.includes(size) ? 'highlight-large-size' : '',\n              children: colorDetails !== null && colorDetails !== void 0 && colorDetails.sizes[size] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: parseInt(e.target.value) || 0\n                  }),\n                  min: \"0\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"price-info\",\n                  children: colorDetails ? `$${(getPriceForQuantity(colorDetails, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0)).toFixed(2)}` : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this) : 'N/A'\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: otherSizesAvailable.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [size, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: parseInt(e.target.value) || 0\n                  }),\n                  min: \"0\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this)]\n              }, size, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: lineQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", lineTotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setOrders(orders.filter((_, i) => i !== index)),\n                disabled: isLoading,\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOrders([...orders, {\n        STYLE_No: '',\n        COLOR_NAME: '',\n        quantities: {},\n        error: null\n      }]),\n      disabled: isLoading,\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Submit order:', orders),\n      disabled: isLoading,\n      children: \"Submit Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"ueM9fjsDRabqNsiSVje9zl48A+4=\");\n_c2 = EmbroideryCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","debounce","db","collection","query","where","getDocs","limit","jsxDEV","_jsxDEV","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getPriceForQuantity","product","totalQuantity","console","log","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","colors","setColors","errorMessage","setErrorMessage","isLoading","setIsLoading","fetchStyles","inputValue","callback","stylesRef","q","querySnapshot","options","docs","map","doc","label","data","value","err","fetchColors","styleNo","colorsRef","colorSet","Set","productDetails","forEach","add","PRODUCT_TITLE","Surcharge","sizes","SIZE","prevColors","Array","from","prevDatabase","updateOrder","index","field","prevOrders","newOrders","calculateOrderTotals","reduce","acc","order","Object","values","sum","qty","totalPrice","_productDatabase$orde","productColors","colorDetails","basePrice","entries","size","sizeDetails","surcharge","includes","quantity","price","totals","role","_productDatabase$orde2","_colors$order$STYLE_N","productTitle","sizesAvailable","keys","mainSizesAvailable","filter","otherSizesAvailable","lineQuantity","lineTotal","cacheOptions","loadOptions","onChange","selectedOption","placeholder","isDisabled","e","target","disabled","color","type","parseInt","min","toFixed","onClick","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport debounce from 'lodash/debounce';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs, limit } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL', '5XL', '6XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  console.log('Calculating price for quantity:', totalQuantity);\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchStyles = useCallback(\r\n    debounce(async (inputValue, callback) => {\r\n      if (!inputValue) {\r\n        callback([]);\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      try {\r\n        const stylesRef = collection(db, 'embroidery_items');\r\n        const q = query(\r\n          stylesRef,\r\n          where('STYLE_No', '>=', inputValue),\r\n          where('STYLE_No', '<=', inputValue + '\\uf8ff'),\r\n          limit(50)\r\n        );\r\n\r\n        const querySnapshot = await getDocs(q);\r\n        const options = querySnapshot.docs.map(doc => ({\r\n          label: doc.data().STYLE_No,\r\n          value: doc.data().STYLE_No\r\n        }));\r\n\r\n        callback(options);\r\n      } catch (err) {\r\n        console.error('Error fetching styles:', err);\r\n        setErrorMessage('Failed to load styles. Please try again.');\r\n        callback([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const fetchColors = useCallback(async (styleNo) => {\r\n    if (!styleNo) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(`Fetching colors for style: ${styleNo}`);\r\n      const colorsRef = collection(db, 'embroidery_items');\r\n      const q = query(colorsRef, where('STYLE_No', '==', styleNo));\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      const colorSet = new Set();\r\n      const productDetails = {};\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        if (data.COLOR_NAME) colorSet.add(data.COLOR_NAME);\r\n        if (!productDetails[data.COLOR_NAME]) {\r\n          productDetails[data.COLOR_NAME] = {\r\n            PRODUCT_TITLE: data.PRODUCT_TITLE,\r\n            Price_2_5: data.Price_2_5,\r\n            Price_6_11: data.Price_6_11,\r\n            Price_12_23: data.Price_12_23,\r\n            Price_24_47: data.Price_24_47,\r\n            Price_48_71: data.Price_48_71,\r\n            Price_72_plus: data.Price_72_plus,\r\n            Surcharge: data.Surcharge,\r\n            sizes: {},\r\n          };\r\n        }\r\n        productDetails[data.COLOR_NAME].sizes[data.SIZE] = {\r\n          ...data,\r\n        };\r\n      });\r\n\r\n      setColors((prevColors) => ({\r\n        ...prevColors,\r\n        [styleNo]: Array.from(colorSet),\r\n      }));\r\n\r\n      setProductDatabase((prevDatabase) => ({\r\n        ...prevDatabase,\r\n        [styleNo]: {\r\n          colors: productDetails,\r\n        },\r\n      }));\r\n\r\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\r\n    } catch (err) {\r\n      console.error('Error fetching colors:', err);\r\n      setErrorMessage('Failed to load color options. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      console.log(`Updating order ${index}, field: ${field}, value:`, value);\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n          if (value && !colors[value]) {\r\n            fetchColors(value);\r\n          }\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        console.log('Updated orders:', newOrders);\r\n        return newOrders;\r\n      });\r\n    },\r\n    [colors, fetchColors]\r\n  );\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    console.log('Calculating order totals...');\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    let totalPrice = 0;\r\n\r\n    orders.forEach((order) => {\r\n      const productColors = productDatabase[order.STYLE_No]?.colors;\r\n      const colorDetails = productColors?.[order.COLOR_NAME];\r\n      if (!colorDetails) return;\r\n\r\n      const basePrice = getPriceForQuantity(colorDetails, totalQuantity);\r\n\r\n      Object.entries(order.quantities).forEach(([size, qty]) => {\r\n        if (!qty) return;\r\n        const sizeDetails = colorDetails.sizes[size];\r\n        if (!sizeDetails) return;\r\n\r\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\r\n        totalPrice += (basePrice + surcharge) * qty;\r\n      });\r\n    });\r\n\r\n    console.log('Total quantity:', totalQuantity, 'Total price:', totalPrice);\r\n    return { quantity: totalQuantity, price: totalPrice };\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Style No</th>\r\n            <th>Color Name</th>\r\n            <th>Product Title</th>\r\n            {MAIN_SIZES.map((size) => (\r\n              <th key={size}>{size}</th>\r\n            ))}\r\n            <th>Other Sizes</th>\r\n            <th>Line Qty</th>\r\n            <th>Row Total</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order, index) => {\r\n            const productColors = productDatabase[order.STYLE_No]?.colors;\r\n            const colorDetails = productColors?.[order.COLOR_NAME];\r\n            const productTitle = colorDetails?.PRODUCT_TITLE || '';\r\n            const sizesAvailable = colorDetails ? Object.keys(colorDetails.sizes) : [];\r\n            const mainSizesAvailable = sizesAvailable.filter((size) => MAIN_SIZES.includes(size));\r\n            const otherSizesAvailable = sizesAvailable.filter((size) => !MAIN_SIZES.includes(size));\r\n\r\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n\r\n            const lineTotal = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n              if (!qty) return sum;\r\n              const sizeDetails = colorDetails?.sizes[size];\r\n              if (!sizeDetails) return sum;\r\n\r\n              const basePrice = getPriceForQuantity(colorDetails, totals.quantity);\r\n              const surcharge = LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0;\r\n              return sum + (basePrice + surcharge) * qty;\r\n            }, 0);\r\n\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <AsyncSelect\r\n                    cacheOptions\r\n                    loadOptions={fetchStyles}\r\n                    onChange={(selectedOption) => {\r\n                      const value = selectedOption ? selectedOption.value : '';\r\n                      updateOrder(index, 'STYLE_No', value);\r\n                    }}\r\n                    value={\r\n                      order.STYLE_No\r\n                        ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                        : null\r\n                    }\r\n                    placeholder=\"Enter or select style\"\r\n                    isDisabled={isLoading}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={order.COLOR_NAME}\r\n                    onChange={(e) => updateOrder(index, 'COLOR_NAME', e.target.value)}\r\n                    disabled={!order.STYLE_No || isLoading}\r\n                  >\r\n                    <option value=\"\">Select Color</option>\r\n                    {colors[order.STYLE_No]?.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>{productTitle}</td>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <td key={size} className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}>\r\n                    {colorDetails?.sizes[size] ? (\r\n                      <div>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                        <div className=\"price-info\">\r\n                          {colorDetails ? `$${(getPriceForQuantity(colorDetails, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(colorDetails.Surcharge) || 0 : 0)).toFixed(2)}` : ''}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      'N/A'\r\n                    )}\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  {otherSizesAvailable.map((size) => (\r\n                    <div key={size}>\r\n                      <span>{size}: </span>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) =>\r\n                          updateOrder(index, 'quantities', {\r\n                            ...order.quantities,\r\n                            [size]: parseInt(e.target.value) || 0,\r\n                          })\r\n                        }\r\n                        min=\"0\"\r\n                        disabled={isLoading}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n                <td>{lineQuantity}</td>\r\n                <td>${lineTotal.toFixed(2)}</td>\r\n                <td>\r\n                  <button onClick={() => setOrders(orders.filter((_, i) => i !== index))} disabled={isLoading}>\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button\r\n        onClick={() =>\r\n          setOrders([...orders, { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null }])\r\n        }\r\n        disabled={isLoading}\r\n      >\r\n        Add Line\r\n      </button>\r\n      <button onClick={() => console.log('Submit order:', orders)} disabled={isLoading}>\r\n        Submit Order\r\n      </button>\r\n      <div>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AACxE,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,QAAQ,oBAAoB;AAC7E,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AACtD,MAAMC,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAEvD,MAAMC,cAAc,GAAGA,CAAA,kBACrBH,OAAA;EAAKI,SAAS,EAAC,iBAAiB;EAAAC,QAAA,eAC9BL,OAAA;IAAKI,SAAS,EAAC;EAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5B,CACN;AAACC,EAAA,GAJIP,cAAc;AAMpB,MAAMQ,mBAAmB,GAAGA,CAACC,OAAO,EAAEC,aAAa,KAAK;EACtDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,aAAa,CAAC;EAC7D,IAAIA,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACK,aAAa,CAAC,IAAI,CAAC;EACtE,IAAIJ,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACM,WAAW,CAAC,IAAI,CAAC;EACpE,IAAIL,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACO,WAAW,CAAC,IAAI,CAAC;EACpE,IAAIN,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACQ,WAAW,CAAC,IAAI,CAAC;EACpE,IAAIP,aAAa,IAAI,CAAC,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACS,UAAU,CAAC,IAAI,CAAC;EAClE,OAAOL,UAAU,CAACJ,OAAO,CAACU,SAAS,CAAC,IAAI,CAAC;AAC3C,CAAC;AAED,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACwC,MAAM,EAAEC,SAAS,CAAC,GAAGzC,QAAQ,CAAC,CACnC;IACE0C,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,CAAC,CAAC;IACdC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG/C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACgD,YAAY,EAAEC,eAAe,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoD,WAAW,GAAGnD,WAAW,CAC7BI,QAAQ,CAAC,OAAOgD,UAAU,EAAEC,QAAQ,KAAK;IACvC,IAAI,CAACD,UAAU,EAAE;MACfC,QAAQ,CAAC,EAAE,CAAC;MACZ;IACF;IAEAH,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMI,SAAS,GAAGhD,UAAU,CAACD,EAAE,EAAE,kBAAkB,CAAC;MACpD,MAAMkD,CAAC,GAAGhD,KAAK,CACb+C,SAAS,EACT9C,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE4C,UAAU,CAAC,EACnC5C,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE4C,UAAU,GAAG,QAAQ,CAAC,EAC9C1C,KAAK,CAAC,EAAE,CACV,CAAC;MAED,MAAM8C,aAAa,GAAG,MAAM/C,OAAO,CAAC8C,CAAC,CAAC;MACtC,MAAME,OAAO,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QAC7CC,KAAK,EAAED,GAAG,CAACE,IAAI,CAAC,CAAC,CAACrB,QAAQ;QAC1BsB,KAAK,EAAEH,GAAG,CAACE,IAAI,CAAC,CAAC,CAACrB;MACpB,CAAC,CAAC,CAAC;MAEHY,QAAQ,CAACI,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZtC,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEoB,GAAG,CAAC;MAC5ChB,eAAe,CAAC,0CAA0C,CAAC;MAC3DK,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,SAAS;MACRH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,GAAG,CAAC,EACP,EACF,CAAC;EAED,MAAMe,WAAW,GAAGjE,WAAW,CAAC,MAAOkE,OAAO,IAAK;IACjD,IAAI,CAACA,OAAO,EAAE;IAEdhB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACFxB,OAAO,CAACC,GAAG,CAAC,8BAA8BuC,OAAO,EAAE,CAAC;MACpD,MAAMC,SAAS,GAAG7D,UAAU,CAACD,EAAE,EAAE,kBAAkB,CAAC;MACpD,MAAMkD,CAAC,GAAGhD,KAAK,CAAC4D,SAAS,EAAE3D,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE0D,OAAO,CAAC,CAAC;MAC5D,MAAMV,aAAa,GAAG,MAAM/C,OAAO,CAAC8C,CAAC,CAAC;MAEtC,MAAMa,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;MAC1B,MAAMC,cAAc,GAAG,CAAC,CAAC;MAEzBd,aAAa,CAACe,OAAO,CAAEX,GAAG,IAAK;QAC7B,MAAME,IAAI,GAAGF,GAAG,CAACE,IAAI,CAAC,CAAC;QACvB,IAAIA,IAAI,CAACpB,UAAU,EAAE0B,QAAQ,CAACI,GAAG,CAACV,IAAI,CAACpB,UAAU,CAAC;QAClD,IAAI,CAAC4B,cAAc,CAACR,IAAI,CAACpB,UAAU,CAAC,EAAE;UACpC4B,cAAc,CAACR,IAAI,CAACpB,UAAU,CAAC,GAAG;YAChC+B,aAAa,EAAEX,IAAI,CAACW,aAAa;YACjCvC,SAAS,EAAE4B,IAAI,CAAC5B,SAAS;YACzBD,UAAU,EAAE6B,IAAI,CAAC7B,UAAU;YAC3BD,WAAW,EAAE8B,IAAI,CAAC9B,WAAW;YAC7BD,WAAW,EAAE+B,IAAI,CAAC/B,WAAW;YAC7BD,WAAW,EAAEgC,IAAI,CAAChC,WAAW;YAC7BD,aAAa,EAAEiC,IAAI,CAACjC,aAAa;YACjC6C,SAAS,EAAEZ,IAAI,CAACY,SAAS;YACzBC,KAAK,EAAE,CAAC;UACV,CAAC;QACH;QACAL,cAAc,CAACR,IAAI,CAACpB,UAAU,CAAC,CAACiC,KAAK,CAACb,IAAI,CAACc,IAAI,CAAC,GAAG;UACjD,GAAGd;QACL,CAAC;MACH,CAAC,CAAC;MAEFhB,SAAS,CAAE+B,UAAU,KAAM;QACzB,GAAGA,UAAU;QACb,CAACX,OAAO,GAAGY,KAAK,CAACC,IAAI,CAACX,QAAQ;MAChC,CAAC,CAAC,CAAC;MAEH9B,kBAAkB,CAAE0C,YAAY,KAAM;QACpC,GAAGA,YAAY;QACf,CAACd,OAAO,GAAG;UACTrB,MAAM,EAAEyB;QACV;MACF,CAAC,CAAC,CAAC;MAEH5C,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEuC,OAAO,EAAEY,KAAK,CAACC,IAAI,CAACX,QAAQ,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZtC,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEoB,GAAG,CAAC;MAC5ChB,eAAe,CAAC,uDAAuD,CAAC;IAC1E,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM+B,WAAW,GAAGjF,WAAW,CAC7B,CAACkF,KAAK,EAAEC,KAAK,EAAEpB,KAAK,KAAK;IACvBrC,OAAO,CAACC,GAAG,CAAC,kBAAkBuD,KAAK,YAAYC,KAAK,UAAU,EAAEpB,KAAK,CAAC;IACtEvB,SAAS,CAAE4C,UAAU,IAAK;MACxB,MAAMC,SAAS,GAAG,CAAC,GAAGD,UAAU,CAAC;MACjCC,SAAS,CAACH,KAAK,CAAC,GAAG;QACjB,GAAGG,SAAS,CAACH,KAAK,CAAC;QACnB,CAACC,KAAK,GAAGpB,KAAK;QACdnB,KAAK,EAAE;MACT,CAAC;MAED,IAAIuC,KAAK,KAAK,UAAU,EAAE;QACxBE,SAAS,CAACH,KAAK,CAAC,CAACxC,UAAU,GAAG,EAAE;QAChC2C,SAAS,CAACH,KAAK,CAAC,CAACvC,UAAU,GAAG,CAAC,CAAC;QAChC,IAAIoB,KAAK,IAAI,CAAClB,MAAM,CAACkB,KAAK,CAAC,EAAE;UAC3BE,WAAW,CAACF,KAAK,CAAC;QACpB;MACF,CAAC,MAAM,IAAIoB,KAAK,KAAK,YAAY,EAAE;QACjCE,SAAS,CAACH,KAAK,CAAC,CAACvC,UAAU,GAAG,CAAC,CAAC;MAClC;MAEAjB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE0D,SAAS,CAAC;MACzC,OAAOA,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC,EACD,CAACxC,MAAM,EAAEoB,WAAW,CACtB,CAAC;EAED,MAAMqB,oBAAoB,GAAGtF,WAAW,CAAC,MAAM;IAC7C0B,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMF,aAAa,GAAGc,MAAM,CAACgD,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAClD,OAAOD,GAAG,GAAGE,MAAM,CAACC,MAAM,CAACF,KAAK,CAAC9C,UAAU,CAAC,CAAC4C,MAAM,CAAC,CAACK,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACxF,CAAC,EAAE,CAAC,CAAC;IAEL,IAAIC,UAAU,GAAG,CAAC;IAElBvD,MAAM,CAACgC,OAAO,CAAEkB,KAAK,IAAK;MAAA,IAAAM,qBAAA;MACxB,MAAMC,aAAa,IAAAD,qBAAA,GAAG1D,eAAe,CAACoD,KAAK,CAAChD,QAAQ,CAAC,cAAAsD,qBAAA,uBAA/BA,qBAAA,CAAiClD,MAAM;MAC7D,MAAMoD,YAAY,GAAGD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAGP,KAAK,CAAC/C,UAAU,CAAC;MACtD,IAAI,CAACuD,YAAY,EAAE;MAEnB,MAAMC,SAAS,GAAG3E,mBAAmB,CAAC0E,YAAY,EAAExE,aAAa,CAAC;MAElEiE,MAAM,CAACS,OAAO,CAACV,KAAK,CAAC9C,UAAU,CAAC,CAAC4B,OAAO,CAAC,CAAC,CAAC6B,IAAI,EAAEP,GAAG,CAAC,KAAK;QACxD,IAAI,CAACA,GAAG,EAAE;QACV,MAAMQ,WAAW,GAAGJ,YAAY,CAACtB,KAAK,CAACyB,IAAI,CAAC;QAC5C,IAAI,CAACC,WAAW,EAAE;QAElB,MAAMC,SAAS,GAAGxF,WAAW,CAACyF,QAAQ,CAACH,IAAI,CAAC,GAAGxE,UAAU,CAACqE,YAAY,CAACvB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;QAC1FoB,UAAU,IAAI,CAACI,SAAS,GAAGI,SAAS,IAAIT,GAAG;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFnE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,aAAa,EAAE,cAAc,EAAEqE,UAAU,CAAC;IACzE,OAAO;MAAEU,QAAQ,EAAE/E,aAAa;MAAEgF,KAAK,EAAEX;IAAW,CAAC;EACvD,CAAC,EAAE,CAACvD,MAAM,EAAEF,eAAe,CAAC,CAAC;EAE7B,MAAMqE,MAAM,GAAGzG,OAAO,CAAC,MAAMqF,oBAAoB,CAAC,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAE5E,oBACE1E,OAAA;IAAKI,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCL,OAAA;MAAAK,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7B0B,YAAY,iBACXnC,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAC2F,IAAI,EAAC,OAAO;MAAA1F,QAAA,gBACzCL,OAAA;QAAAK,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxBT,OAAA;QAAAK,QAAA,EAAO8B;MAAY;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACN,EACA4B,SAAS,iBAAIrC,OAAA,CAACG,cAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCT,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,eACEL,OAAA;UAAAK,QAAA,gBACEL,OAAA;YAAAK,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBT,OAAA;YAAAK,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBT,OAAA;YAAAK,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACrBR,UAAU,CAAC8C,GAAG,CAAEyC,IAAI,iBACnBxF,OAAA;YAAAK,QAAA,EAAgBmF;UAAI,GAAXA,IAAI;YAAAlF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B,CAAC,eACFT,OAAA;YAAAK,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBT,OAAA;YAAAK,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBT,OAAA;YAAAK,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBT,OAAA;YAAAK,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRT,OAAA;QAAAK,QAAA,EACGsB,MAAM,CAACoB,GAAG,CAAC,CAAC8B,KAAK,EAAEP,KAAK,KAAK;UAAA,IAAA0B,sBAAA,EAAAC,qBAAA;UAC5B,MAAMb,aAAa,IAAAY,sBAAA,GAAGvE,eAAe,CAACoD,KAAK,CAAChD,QAAQ,CAAC,cAAAmE,sBAAA,uBAA/BA,sBAAA,CAAiC/D,MAAM;UAC7D,MAAMoD,YAAY,GAAGD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAGP,KAAK,CAAC/C,UAAU,CAAC;UACtD,MAAMoE,YAAY,GAAG,CAAAb,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAExB,aAAa,KAAI,EAAE;UACtD,MAAMsC,cAAc,GAAGd,YAAY,GAAGP,MAAM,CAACsB,IAAI,CAACf,YAAY,CAACtB,KAAK,CAAC,GAAG,EAAE;UAC1E,MAAMsC,kBAAkB,GAAGF,cAAc,CAACG,MAAM,CAAEd,IAAI,IAAKvF,UAAU,CAAC0F,QAAQ,CAACH,IAAI,CAAC,CAAC;UACrF,MAAMe,mBAAmB,GAAGJ,cAAc,CAACG,MAAM,CAAEd,IAAI,IAAK,CAACvF,UAAU,CAAC0F,QAAQ,CAACH,IAAI,CAAC,CAAC;UAEvF,MAAMgB,YAAY,GAAG1B,MAAM,CAACC,MAAM,CAACF,KAAK,CAAC9C,UAAU,CAAC,CAAC4C,MAAM,CAAC,CAACK,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;UAE9F,MAAMwB,SAAS,GAAG3B,MAAM,CAACS,OAAO,CAACV,KAAK,CAAC9C,UAAU,CAAC,CAAC4C,MAAM,CAAC,CAACK,GAAG,EAAE,CAACQ,IAAI,EAAEP,GAAG,CAAC,KAAK;YAC9E,IAAI,CAACA,GAAG,EAAE,OAAOD,GAAG;YACpB,MAAMS,WAAW,GAAGJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEtB,KAAK,CAACyB,IAAI,CAAC;YAC7C,IAAI,CAACC,WAAW,EAAE,OAAOT,GAAG;YAE5B,MAAMM,SAAS,GAAG3E,mBAAmB,CAAC0E,YAAY,EAAES,MAAM,CAACF,QAAQ,CAAC;YACpE,MAAMF,SAAS,GAAGxF,WAAW,CAACyF,QAAQ,CAACH,IAAI,CAAC,GAAGxE,UAAU,CAACqE,YAAY,CAACvB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YAC1F,OAAOkB,GAAG,GAAG,CAACM,SAAS,GAAGI,SAAS,IAAIT,GAAG;UAC5C,CAAC,EAAE,CAAC,CAAC;UAEL,oBACEjF,OAAA;YAAAK,QAAA,gBACEL,OAAA;cAAAK,QAAA,eACEL,OAAA,CAACT,WAAW;gBACVmH,YAAY;gBACZC,WAAW,EAAEpE,WAAY;gBACzBqE,QAAQ,EAAGC,cAAc,IAAK;kBAC5B,MAAM1D,KAAK,GAAG0D,cAAc,GAAGA,cAAc,CAAC1D,KAAK,GAAG,EAAE;kBACxDkB,WAAW,CAACC,KAAK,EAAE,UAAU,EAAEnB,KAAK,CAAC;gBACvC,CAAE;gBACFA,KAAK,EACH0B,KAAK,CAAChD,QAAQ,GACV;kBAAEsB,KAAK,EAAE0B,KAAK,CAAChD,QAAQ;kBAAEoB,KAAK,EAAE4B,KAAK,CAAChD;gBAAS,CAAC,GAChD,IACL;gBACDiF,WAAW,EAAC,uBAAuB;gBACnCC,UAAU,EAAE1E;cAAU;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACLT,OAAA;cAAAK,QAAA,eACEL,OAAA;gBACEmD,KAAK,EAAE0B,KAAK,CAAC/C,UAAW;gBACxB8E,QAAQ,EAAGI,CAAC,IAAK3C,WAAW,CAACC,KAAK,EAAE,YAAY,EAAE0C,CAAC,CAACC,MAAM,CAAC9D,KAAK,CAAE;gBAClE+D,QAAQ,EAAE,CAACrC,KAAK,CAAChD,QAAQ,IAAIQ,SAAU;gBAAAhC,QAAA,gBAEvCL,OAAA;kBAAQmD,KAAK,EAAC,EAAE;kBAAA9C,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,GAAAwF,qBAAA,GACrChE,MAAM,CAAC4C,KAAK,CAAChD,QAAQ,CAAC,cAAAoE,qBAAA,uBAAtBA,qBAAA,CAAwBlD,GAAG,CAAEoE,KAAK,iBACjCnH,OAAA;kBAAoBmD,KAAK,EAAEgE,KAAM;kBAAA9G,QAAA,EAC9B8G;gBAAK,GADKA,KAAK;kBAAA7G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEV,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACLT,OAAA;cAAAK,QAAA,EAAK6F;YAAY;cAAA5F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACtBR,UAAU,CAAC8C,GAAG,CAAEyC,IAAI,iBACnBxF,OAAA;cAAeI,SAAS,EAAEF,WAAW,CAACyF,QAAQ,CAACH,IAAI,CAAC,GAAG,sBAAsB,GAAG,EAAG;cAAAnF,QAAA,EAChFgF,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEtB,KAAK,CAACyB,IAAI,CAAC,gBACxBxF,OAAA;gBAAAK,QAAA,gBACEL,OAAA;kBACEoH,IAAI,EAAC,QAAQ;kBACbjE,KAAK,EAAE0B,KAAK,CAAC9C,UAAU,CAACyD,IAAI,CAAC,IAAI,EAAG;kBACpCoB,QAAQ,EAAGI,CAAC,IACV3C,WAAW,CAACC,KAAK,EAAE,YAAY,EAAE;oBAC/B,GAAGO,KAAK,CAAC9C,UAAU;oBACnB,CAACyD,IAAI,GAAG6B,QAAQ,CAACL,CAAC,CAACC,MAAM,CAAC9D,KAAK,CAAC,IAAI;kBACtC,CAAC,CACF;kBACDmE,GAAG,EAAC,GAAG;kBACPJ,QAAQ,EAAE7E;gBAAU;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrB,CAAC,eACFT,OAAA;kBAAKI,SAAS,EAAC,YAAY;kBAAAC,QAAA,EACxBgF,YAAY,GAAG,IAAI,CAAC1E,mBAAmB,CAAC0E,YAAY,EAAES,MAAM,CAACF,QAAQ,CAAC,IAAI1F,WAAW,CAACyF,QAAQ,CAACH,IAAI,CAAC,GAAGxE,UAAU,CAACqE,YAAY,CAACvB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEyD,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG;gBAAE;kBAAAjH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,GAEN;YACD,GArBM+E,IAAI;cAAAlF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsBT,CACL,CAAC,eACFT,OAAA;cAAAK,QAAA,EACGkG,mBAAmB,CAACxD,GAAG,CAAEyC,IAAI,iBAC5BxF,OAAA;gBAAAK,QAAA,gBACEL,OAAA;kBAAAK,QAAA,GAAOmF,IAAI,EAAC,IAAE;gBAAA;kBAAAlF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACrBT,OAAA;kBACEoH,IAAI,EAAC,QAAQ;kBACbjE,KAAK,EAAE0B,KAAK,CAAC9C,UAAU,CAACyD,IAAI,CAAC,IAAI,EAAG;kBACpCoB,QAAQ,EAAGI,CAAC,IACV3C,WAAW,CAACC,KAAK,EAAE,YAAY,EAAE;oBAC/B,GAAGO,KAAK,CAAC9C,UAAU;oBACnB,CAACyD,IAAI,GAAG6B,QAAQ,CAACL,CAAC,CAACC,MAAM,CAAC9D,KAAK,CAAC,IAAI;kBACtC,CAAC,CACF;kBACDmE,GAAG,EAAC,GAAG;kBACPJ,QAAQ,EAAE7E;gBAAU;kBAAA/B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrB,CAAC;cAAA,GAbM+E,IAAI;gBAAAlF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAcT,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACLT,OAAA;cAAAK,QAAA,EAAKmG;YAAY;cAAAlG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBT,OAAA;cAAAK,QAAA,GAAI,GAAC,EAACoG,SAAS,CAACc,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAjH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChCT,OAAA;cAAAK,QAAA,eACEL,OAAA;gBAAQwH,OAAO,EAAEA,CAAA,KAAM5F,SAAS,CAACD,MAAM,CAAC2E,MAAM,CAAC,CAACmB,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKpD,KAAK,CAAC,CAAE;gBAAC4C,QAAQ,EAAE7E,SAAU;gBAAAhC,QAAA,EAAC;cAE7F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAnFE6D,KAAK;YAAAhE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoFV,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRT,OAAA;MACEwH,OAAO,EAAEA,CAAA,KACP5F,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;QAAEE,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE,EAAE;QAAEC,UAAU,EAAE,CAAC,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC,CACrF;MACDkF,QAAQ,EAAE7E,SAAU;MAAAhC,QAAA,EACrB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTT,OAAA;MAAQwH,OAAO,EAAEA,CAAA,KAAM1G,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEY,MAAM,CAAE;MAACuF,QAAQ,EAAE7E,SAAU;MAAAhC,QAAA,EAAC;IAElF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTT,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,GAAG,kBAAgB,EAACyF,MAAM,CAACF,QAAQ;MAAA;QAAAtF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCT,OAAA;QAAAK,QAAA,GAAG,gBAAc,EAACyF,MAAM,CAACD,KAAK,CAAC0B,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAjH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACe,EAAA,CA5TuBD,oBAAoB;AAAAoG,GAAA,GAApBpG,oBAAoB;AAAA,IAAAb,EAAA,EAAAiH,GAAA;AAAAC,YAAA,CAAAlH,EAAA;AAAAkH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}