{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { db } from '../firebase';\nimport { collection, getDocs, query, limit, startAfter, orderBy, where } from 'firebase/firestore';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst getPriceForQuantity = (product, totalQuantity) => {\n  console.log('Calculating price for quantity:', totalQuantity);\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\n  return parseFloat(product.Price_2_5) || 0;\n};\nexport default function EmbroideryCalculator() {\n  _s();\n  console.log('EmbroideryCalculator component rendered');\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [styles, setStyles] = useState([]);\n  const [colors, setColors] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ... (keep all the existing functions: fetchAllStyles, fetchColors, updateOrder, calculateOrderTotals)\n\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '200px'\n              },\n              children: \"Style No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '200px'\n              },\n              children: \"Color Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '300px'\n              },\n              children: \"Product Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Other Sizes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Line Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Row Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map((order, index) => {\n            var _productDatabase$orde, _productDatabase$orde2, _colors$order$STYLE_N2;\n            const product = (_productDatabase$orde = productDatabase[order.STYLE_No]) === null || _productDatabase$orde === void 0 ? void 0 : (_productDatabase$orde2 = _productDatabase$orde.colors) === null || _productDatabase$orde2 === void 0 ? void 0 : _productDatabase$orde2[order.COLOR_NAME];\n            const availableSizes = product ? Object.keys(product).filter(size => !MAIN_SIZES.includes(size)).sort((a, b) => {\n              const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\n              return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\n            }) : [];\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  cacheOptions: true,\n                  loadOptions: async inputValue => {\n                    console.log('Loading styles with input:', inputValue);\n                    const filteredStyles = styles.filter(style => style.toLowerCase().includes(inputValue.toLowerCase()));\n                    return filteredStyles.map(style => ({\n                      label: style,\n                      value: style\n                    }));\n                  },\n                  defaultOptions: styles.map(style => ({\n                    label: style,\n                    value: style\n                  })),\n                  onChange: selectedOption => {\n                    const value = selectedOption ? selectedOption.value : '';\n                    updateOrder(index, 'STYLE_No', value);\n                  },\n                  value: order.STYLE_No ? {\n                    value: order.STYLE_No,\n                    label: order.STYLE_No\n                  } : null,\n                  placeholder: \"Enter or select style\",\n                  isDisabled: isLoading,\n                  styles: {\n                    control: provided => ({\n                      ...provided,\n                      width: '200px'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  cacheOptions: true,\n                  loadOptions: async inputValue => {\n                    var _colors$order$STYLE_N;\n                    if (!order.STYLE_No) return [];\n                    const filteredColors = ((_colors$order$STYLE_N = colors[order.STYLE_No]) === null || _colors$order$STYLE_N === void 0 ? void 0 : _colors$order$STYLE_N.filter(color => color.toLowerCase().includes(inputValue.toLowerCase()))) || [];\n                    return filteredColors.map(color => ({\n                      label: color,\n                      value: color\n                    }));\n                  },\n                  defaultOptions: ((_colors$order$STYLE_N2 = colors[order.STYLE_No]) === null || _colors$order$STYLE_N2 === void 0 ? void 0 : _colors$order$STYLE_N2.map(color => ({\n                    label: color,\n                    value: color\n                  }))) || [],\n                  onChange: selectedOption => {\n                    const value = selectedOption ? selectedOption.value : '';\n                    updateOrder(index, 'COLOR_NAME', value);\n                  },\n                  value: order.COLOR_NAME ? {\n                    value: order.COLOR_NAME,\n                    label: order.COLOR_NAME\n                  } : null,\n                  placeholder: \"Select Color\",\n                  isDisabled: !order.STYLE_No || isLoading,\n                  styles: {\n                    control: provided => ({\n                      ...provided,\n                      width: '200px'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (product === null || product === void 0 ? void 0 : product.PRODUCT_TITLE) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: LARGE_SIZES.includes(size) ? 'highlight-large-size' : '',\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: order.quantities[size] || '',\n                    onChange: e => updateOrder(index, 'quantities', {\n                      ...order.quantities,\n                      [size]: parseInt(e.target.value) || 0\n                    }),\n                    min: \"0\",\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"price-info\",\n                    children: product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: availableSizes.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [size, \": \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: order.quantities[size] || '',\n                    onChange: e => updateOrder(index, 'quantities', {\n                      ...order.quantities,\n                      [size]: parseInt(e.target.value) || 0\n                    }),\n                    min: \"0\",\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this)]\n                }, size, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: lineQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product ? `$${Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n                  const price = getPriceForQuantity(product, totals.quantity);\n                  const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n                  return sum + (price + surcharge) * (qty || 0);\n                }, 0).toFixed(2)}` : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setOrders(prevOrders => prevOrders.filter((_, i) => i !== index));\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setOrders(prevOrders => [...prevOrders, {\n          STYLE_No: '',\n          COLOR_NAME: '',\n          quantities: {},\n          error: null\n        }]);\n      },\n      children: \"Add Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"hmB3Ehb4tPtgXsGHwEbPVe9+3y8=\");\n_c2 = EmbroideryCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","db","collection","getDocs","query","limit","startAfter","orderBy","where","jsxDEV","_jsxDEV","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getPriceForQuantity","product","totalQuantity","console","log","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","styles","setStyles","colors","setColors","errorMessage","setErrorMessage","isLoading","setIsLoading","totals","calculateOrderTotals","role","style","width","map","size","order","index","_productDatabase$orde","_productDatabase$orde2","_colors$order$STYLE_N2","availableSizes","Object","keys","filter","includes","sort","a","b","sizeOrder","indexOf","lineQuantity","values","reduce","sum","qty","cacheOptions","loadOptions","inputValue","filteredStyles","toLowerCase","label","value","defaultOptions","onChange","selectedOption","updateOrder","placeholder","isDisabled","control","provided","_colors$order$STYLE_N","filteredColors","color","PRODUCT_TITLE","type","e","parseInt","target","min","disabled","quantity","Surcharge","toFixed","entries","price","surcharge","onClick","prevOrders","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, limit, startAfter, orderBy, where } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  console.log('Calculating price for quantity:', totalQuantity);\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  console.log('EmbroideryCalculator component rendered');\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [styles, setStyles] = useState([]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // ... (keep all the existing functions: fetchAllStyles, fetchColors, updateOrder, calculateOrderTotals)\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: '200px'}}>Style No</th>\r\n              <th style={{width: '200px'}}>Color Name</th>\r\n              <th style={{width: '300px'}}>Product Title</th>\r\n              {MAIN_SIZES.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n              <th>Other Sizes</th>\r\n              <th>Line Qty</th>\r\n              <th>Row Total</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, index) => {\r\n              const product = productDatabase[order.STYLE_No]?.colors?.[order.COLOR_NAME];\r\n              const availableSizes = product ? Object.keys(product).filter((size) => !MAIN_SIZES.includes(size)).sort((a, b) => {\r\n                const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\r\n                return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\r\n              }) : [];\r\n              const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n\r\n              return (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <AsyncSelect\r\n                      cacheOptions\r\n                      loadOptions={async (inputValue) => {\r\n                        console.log('Loading styles with input:', inputValue);\r\n                        const filteredStyles = styles.filter((style) =>\r\n                          style.toLowerCase().includes(inputValue.toLowerCase())\r\n                        );\r\n                        return filteredStyles.map((style) => ({ label: style, value: style }));\r\n                      }}\r\n                      defaultOptions={styles.map((style) => ({ label: style, value: style }))}\r\n                      onChange={(selectedOption) => {\r\n                        const value = selectedOption ? selectedOption.value : '';\r\n                        updateOrder(index, 'STYLE_No', value);\r\n                      }}\r\n                      value={\r\n                        order.STYLE_No\r\n                          ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                          : null\r\n                      }\r\n                      placeholder=\"Enter or select style\"\r\n                      isDisabled={isLoading}\r\n                      styles={{\r\n                        control: (provided) => ({\r\n                          ...provided,\r\n                          width: '200px',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <AsyncSelect\r\n                      cacheOptions\r\n                      loadOptions={async (inputValue) => {\r\n                        if (!order.STYLE_No) return [];\r\n                        const filteredColors = colors[order.STYLE_No]?.filter((color) =>\r\n                          color.toLowerCase().includes(inputValue.toLowerCase())\r\n                        ) || [];\r\n                        return filteredColors.map((color) => ({ label: color, value: color }));\r\n                      }}\r\n                      defaultOptions={colors[order.STYLE_No]?.map((color) => ({ label: color, value: color })) || []}\r\n                      onChange={(selectedOption) => {\r\n                        const value = selectedOption ? selectedOption.value : '';\r\n                        updateOrder(index, 'COLOR_NAME', value);\r\n                      }}\r\n                      value={\r\n                        order.COLOR_NAME\r\n                          ? { value: order.COLOR_NAME, label: order.COLOR_NAME }\r\n                          : null\r\n                      }\r\n                      placeholder=\"Select Color\"\r\n                      isDisabled={!order.STYLE_No || isLoading}\r\n                      styles={{\r\n                        control: (provided) => ({\r\n                          ...provided,\r\n                          width: '200px',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>{product?.PRODUCT_TITLE || ''}</td>\r\n                  {MAIN_SIZES.map((size) => (\r\n                    <td key={size} className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}>\r\n                      <div>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                        <div className=\"price-info\">\r\n                          {product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  ))}\r\n                  <td>\r\n                    {availableSizes.map((size) => (\r\n                      <div key={size}>\r\n                        <span>{size}: </span>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </td>\r\n                  <td>{lineQuantity}</td>\r\n                  <td>\r\n                    {product\r\n                      ? `$${(\r\n                          Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n                            const price = getPriceForQuantity(product, totals.quantity);\r\n                            const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n                            return sum + (price + surcharge) * (qty || 0);\r\n                          }, 0)\r\n                        ).toFixed(2)}`\r\n                      : ''}\r\n                  </td>\r\n                  <td>\r\n                    <button onClick={() => {\r\n                      setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                    }}>\r\n                      Remove\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          setOrders((prevOrders) => [\r\n            ...prevOrders,\r\n            { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null },\r\n          ]);\r\n        }}\r\n      >\r\n        Add Order\r\n      </button>\r\n      <div className=\"order-summary\">\r\n        <h2>Order Summary</h2>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AACxE,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAQ,oBAAoB;AAClG,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AACtD,MAAMC,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAEzC,MAAMC,cAAc,GAAGA,CAAA,kBACrBH,OAAA;EAAKI,SAAS,EAAC,iBAAiB;EAAAC,QAAA,eAC9BL,OAAA;IAAKI,SAAS,EAAC;EAAS;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5B,CACN;AAACC,EAAA,GAJIP,cAAc;AAMpB,MAAMQ,mBAAmB,GAAGA,CAACC,OAAO,EAAEC,aAAa,KAAK;EACtDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,aAAa,CAAC;EAC7D,IAAIA,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACK,aAAa,CAAC,IAAI,CAAC;EACtE,IAAIJ,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACM,WAAW,CAAC,IAAI,CAAC;EACpE,IAAIL,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACO,WAAW,CAAC,IAAI,CAAC;EACpE,IAAIN,aAAa,IAAI,EAAE,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACQ,WAAW,CAAC,IAAI,CAAC;EACpE,IAAIP,aAAa,IAAI,CAAC,EAAE,OAAOG,UAAU,CAACJ,OAAO,CAACS,UAAU,CAAC,IAAI,CAAC;EAClE,OAAOL,UAAU,CAACJ,OAAO,CAACU,SAAS,CAAC,IAAI,CAAC;AAC3C,CAAC;AAED,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7CV,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EACtD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAAC,CACnC;IACE2C,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,CAAC,CAAC;IACdC,KAAK,EAAE;EACT,CAAC,CACF,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiD,MAAM,EAAEC,SAAS,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqD,SAAS,EAAEC,YAAY,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;;EAEjD;;EAEA,MAAMuD,MAAM,GAAGrD,OAAO,CAAC,MAAMsD,oBAAoB,CAAC,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAE5E,oBACE1C,OAAA;IAAKI,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCL,OAAA;MAAAK,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7B4B,YAAY,iBACXrC,OAAA;MAAKI,SAAS,EAAC,eAAe;MAACuC,IAAI,EAAC,OAAO;MAAAtC,QAAA,gBACzCL,OAAA;QAAAK,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxBT,OAAA;QAAAK,QAAA,EAAOgC;MAAY;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACN,EACA8B,SAAS,iBAAIvC,OAAA,CAACG,cAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCT,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BL,OAAA;QAAAK,QAAA,gBACEL,OAAA;UAAAK,QAAA,eACEL,OAAA;YAAAK,QAAA,gBACEL,OAAA;cAAI4C,KAAK,EAAE;gBAACC,KAAK,EAAE;cAAO,CAAE;cAAAxC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1CT,OAAA;cAAI4C,KAAK,EAAE;gBAACC,KAAK,EAAE;cAAO,CAAE;cAAAxC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5CT,OAAA;cAAI4C,KAAK,EAAE;gBAACC,KAAK,EAAE;cAAO,CAAE;cAAAxC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC9CR,UAAU,CAAC6C,GAAG,CAAEC,IAAI,iBACnB/C,OAAA;cAAAK,QAAA,EAAgB0C;YAAI,GAAXA,IAAI;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAC1B,CAAC,eACFT,OAAA;cAAAK,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBT,OAAA;cAAAK,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBT,OAAA;cAAAK,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBT,OAAA;cAAAK,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRT,OAAA;UAAAK,QAAA,EACGsB,MAAM,CAACmB,GAAG,CAAC,CAACE,KAAK,EAAEC,KAAK,KAAK;YAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;YAC5B,MAAMxC,OAAO,IAAAsC,qBAAA,GAAGzB,eAAe,CAACuB,KAAK,CAACnB,QAAQ,CAAC,cAAAqB,qBAAA,wBAAAC,sBAAA,GAA/BD,qBAAA,CAAiCf,MAAM,cAAAgB,sBAAA,uBAAvCA,sBAAA,CAA0CH,KAAK,CAAClB,UAAU,CAAC;YAC3E,MAAMuB,cAAc,GAAGzC,OAAO,GAAG0C,MAAM,CAACC,IAAI,CAAC3C,OAAO,CAAC,CAAC4C,MAAM,CAAET,IAAI,IAAK,CAAC9C,UAAU,CAACwD,QAAQ,CAACV,IAAI,CAAC,CAAC,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;cAChH,MAAMC,SAAS,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;cAChF,OAAOA,SAAS,CAACC,OAAO,CAACH,CAAC,CAAC,GAAGE,SAAS,CAACC,OAAO,CAACF,CAAC,CAAC;YACpD,CAAC,CAAC,GAAG,EAAE;YACP,MAAMG,YAAY,GAAGT,MAAM,CAACU,MAAM,CAAChB,KAAK,CAACjB,UAAU,CAAC,CAACkC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAE9F,oBACEnE,OAAA;cAAAK,QAAA,gBACEL,OAAA;gBAAAK,QAAA,eACEL,OAAA,CAACV,WAAW;kBACV8E,YAAY;kBACZC,WAAW,EAAE,MAAOC,UAAU,IAAK;oBACjCxD,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEuD,UAAU,CAAC;oBACrD,MAAMC,cAAc,GAAGtC,MAAM,CAACuB,MAAM,CAAEZ,KAAK,IACzCA,KAAK,CAAC4B,WAAW,CAAC,CAAC,CAACf,QAAQ,CAACa,UAAU,CAACE,WAAW,CAAC,CAAC,CACvD,CAAC;oBACD,OAAOD,cAAc,CAACzB,GAAG,CAAEF,KAAK,KAAM;sBAAE6B,KAAK,EAAE7B,KAAK;sBAAE8B,KAAK,EAAE9B;oBAAM,CAAC,CAAC,CAAC;kBACxE,CAAE;kBACF+B,cAAc,EAAE1C,MAAM,CAACa,GAAG,CAAEF,KAAK,KAAM;oBAAE6B,KAAK,EAAE7B,KAAK;oBAAE8B,KAAK,EAAE9B;kBAAM,CAAC,CAAC,CAAE;kBACxEgC,QAAQ,EAAGC,cAAc,IAAK;oBAC5B,MAAMH,KAAK,GAAGG,cAAc,GAAGA,cAAc,CAACH,KAAK,GAAG,EAAE;oBACxDI,WAAW,CAAC7B,KAAK,EAAE,UAAU,EAAEyB,KAAK,CAAC;kBACvC,CAAE;kBACFA,KAAK,EACH1B,KAAK,CAACnB,QAAQ,GACV;oBAAE6C,KAAK,EAAE1B,KAAK,CAACnB,QAAQ;oBAAE4C,KAAK,EAAEzB,KAAK,CAACnB;kBAAS,CAAC,GAChD,IACL;kBACDkD,WAAW,EAAC,uBAAuB;kBACnCC,UAAU,EAAEzC,SAAU;kBACtBN,MAAM,EAAE;oBACNgD,OAAO,EAAGC,QAAQ,KAAM;sBACtB,GAAGA,QAAQ;sBACXrC,KAAK,EAAE;oBACT,CAAC;kBACH;gBAAE;kBAAAvC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACLT,OAAA;gBAAAK,QAAA,eACEL,OAAA,CAACV,WAAW;kBACV8E,YAAY;kBACZC,WAAW,EAAE,MAAOC,UAAU,IAAK;oBAAA,IAAAa,qBAAA;oBACjC,IAAI,CAACnC,KAAK,CAACnB,QAAQ,EAAE,OAAO,EAAE;oBAC9B,MAAMuD,cAAc,GAAG,EAAAD,qBAAA,GAAAhD,MAAM,CAACa,KAAK,CAACnB,QAAQ,CAAC,cAAAsD,qBAAA,uBAAtBA,qBAAA,CAAwB3B,MAAM,CAAE6B,KAAK,IAC1DA,KAAK,CAACb,WAAW,CAAC,CAAC,CAACf,QAAQ,CAACa,UAAU,CAACE,WAAW,CAAC,CAAC,CACvD,CAAC,KAAI,EAAE;oBACP,OAAOY,cAAc,CAACtC,GAAG,CAAEuC,KAAK,KAAM;sBAAEZ,KAAK,EAAEY,KAAK;sBAAEX,KAAK,EAAEW;oBAAM,CAAC,CAAC,CAAC;kBACxE,CAAE;kBACFV,cAAc,EAAE,EAAAvB,sBAAA,GAAAjB,MAAM,CAACa,KAAK,CAACnB,QAAQ,CAAC,cAAAuB,sBAAA,uBAAtBA,sBAAA,CAAwBN,GAAG,CAAEuC,KAAK,KAAM;oBAAEZ,KAAK,EAAEY,KAAK;oBAAEX,KAAK,EAAEW;kBAAM,CAAC,CAAC,CAAC,KAAI,EAAG;kBAC/FT,QAAQ,EAAGC,cAAc,IAAK;oBAC5B,MAAMH,KAAK,GAAGG,cAAc,GAAGA,cAAc,CAACH,KAAK,GAAG,EAAE;oBACxDI,WAAW,CAAC7B,KAAK,EAAE,YAAY,EAAEyB,KAAK,CAAC;kBACzC,CAAE;kBACFA,KAAK,EACH1B,KAAK,CAAClB,UAAU,GACZ;oBAAE4C,KAAK,EAAE1B,KAAK,CAAClB,UAAU;oBAAE2C,KAAK,EAAEzB,KAAK,CAAClB;kBAAW,CAAC,GACpD,IACL;kBACDiD,WAAW,EAAC,cAAc;kBAC1BC,UAAU,EAAE,CAAChC,KAAK,CAACnB,QAAQ,IAAIU,SAAU;kBACzCN,MAAM,EAAE;oBACNgD,OAAO,EAAGC,QAAQ,KAAM;sBACtB,GAAGA,QAAQ;sBACXrC,KAAK,EAAE;oBACT,CAAC;kBACH;gBAAE;kBAAAvC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACLT,OAAA;gBAAAK,QAAA,EAAK,CAAAO,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE0E,aAAa,KAAI;cAAE;gBAAAhF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACtCR,UAAU,CAAC6C,GAAG,CAAEC,IAAI,iBACnB/C,OAAA;gBAAeI,SAAS,EAAEF,WAAW,CAACuD,QAAQ,CAACV,IAAI,CAAC,GAAG,sBAAsB,GAAG,EAAG;gBAAA1C,QAAA,eACjFL,OAAA;kBAAAK,QAAA,gBACEL,OAAA;oBACEuF,IAAI,EAAC,QAAQ;oBACbb,KAAK,EAAE1B,KAAK,CAACjB,UAAU,CAACgB,IAAI,CAAC,IAAI,EAAG;oBACpC6B,QAAQ,EAAGY,CAAC,IACVV,WAAW,CAAC7B,KAAK,EAAE,YAAY,EAAE;sBAC/B,GAAGD,KAAK,CAACjB,UAAU;sBACnB,CAACgB,IAAI,GAAG0C,QAAQ,CAACD,CAAC,CAACE,MAAM,CAAChB,KAAK,CAAC,IAAI;oBACtC,CAAC,CACF;oBACDiB,GAAG,EAAC,GAAG;oBACPC,QAAQ,EAAErD;kBAAU;oBAAAjC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB,CAAC,eACFT,OAAA;oBAAKI,SAAS,EAAC,YAAY;oBAAAC,QAAA,EACxBO,OAAO,GAAG,IAAI,CAACD,mBAAmB,CAACC,OAAO,EAAE6B,MAAM,CAACoD,QAAQ,CAAC,IAAI3F,WAAW,CAACuD,QAAQ,CAACV,IAAI,CAAC,GAAG/B,UAAU,CAACJ,OAAO,CAACkF,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG;kBAAE;oBAAAzF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrJ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC,GAjBCsC,IAAI;gBAAAzC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkBT,CACL,CAAC,eACFT,OAAA;gBAAAK,QAAA,EACGgD,cAAc,CAACP,GAAG,CAAEC,IAAI,iBACvB/C,OAAA;kBAAAK,QAAA,gBACEL,OAAA;oBAAAK,QAAA,GAAO0C,IAAI,EAAC,IAAE;kBAAA;oBAAAzC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACrBT,OAAA;oBACEuF,IAAI,EAAC,QAAQ;oBACbb,KAAK,EAAE1B,KAAK,CAACjB,UAAU,CAACgB,IAAI,CAAC,IAAI,EAAG;oBACpC6B,QAAQ,EAAGY,CAAC,IACVV,WAAW,CAAC7B,KAAK,EAAE,YAAY,EAAE;sBAC/B,GAAGD,KAAK,CAACjB,UAAU;sBACnB,CAACgB,IAAI,GAAG0C,QAAQ,CAACD,CAAC,CAACE,MAAM,CAAChB,KAAK,CAAC,IAAI;oBACtC,CAAC,CACF;oBACDiB,GAAG,EAAC,GAAG;oBACPC,QAAQ,EAAErD;kBAAU;oBAAAjC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrB,CAAC;gBAAA,GAbMsC,IAAI;kBAAAzC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAcT,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACLT,OAAA;gBAAAK,QAAA,EAAK0D;cAAY;gBAAAzD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBT,OAAA;gBAAAK,QAAA,EACGO,OAAO,GACJ,IACE0C,MAAM,CAAC0C,OAAO,CAAChD,KAAK,CAACjB,UAAU,CAAC,CAACkC,MAAM,CAAC,CAACC,GAAG,EAAE,CAACnB,IAAI,EAAEoB,GAAG,CAAC,KAAK;kBAC5D,MAAM8B,KAAK,GAAGtF,mBAAmB,CAACC,OAAO,EAAE6B,MAAM,CAACoD,QAAQ,CAAC;kBAC3D,MAAMK,SAAS,GAAGhG,WAAW,CAACuD,QAAQ,CAACV,IAAI,CAAC,GAAG/B,UAAU,CAACJ,OAAO,CAACkF,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;kBACrF,OAAO5B,GAAG,GAAG,CAAC+B,KAAK,GAAGC,SAAS,KAAK/B,GAAG,IAAI,CAAC,CAAC;gBAC/C,CAAC,EAAE,CAAC,CAAC,CACL4B,OAAO,CAAC,CAAC,CAAC,EAAE,GACd;cAAE;gBAAAzF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACLT,OAAA;gBAAAK,QAAA,eACEL,OAAA;kBAAQmG,OAAO,EAAEA,CAAA,KAAM;oBACrBvE,SAAS,CAAEwE,UAAU,IAAKA,UAAU,CAAC5C,MAAM,CAAC,CAAC6C,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKrD,KAAK,CAAC,CAAC;kBACrE,CAAE;kBAAA5C,QAAA,EAAC;gBAEH;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GAxHEwC,KAAK;cAAA3C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAyHV,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNT,OAAA;MACEmG,OAAO,EAAEA,CAAA,KAAM;QACbvE,SAAS,CAAEwE,UAAU,IAAK,CACxB,GAAGA,UAAU,EACb;UAAEvE,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE,EAAE;UAAEC,UAAU,EAAE,CAAC,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAC9D,CAAC;MACJ,CAAE;MAAA3B,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTT,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BL,OAAA;QAAAK,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBT,OAAA;QAAAK,QAAA,GAAG,kBAAgB,EAACoC,MAAM,CAACoD,QAAQ;MAAA;QAAAvF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCT,OAAA;QAAAK,QAAA,GAAG,gBAAc,EAACoC,MAAM,CAACwD,KAAK,CAACF,OAAO,CAAC,CAAC,CAAC;MAAA;QAAAzF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACe,EAAA,CAxMuBD,oBAAoB;AAAAgF,GAAA,GAApBhF,oBAAoB;AAAA,IAAAb,EAAA,EAAA6F,GAAA;AAAAC,YAAA,CAAA9F,EAAA;AAAA8F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}