{"ast":null,"code":"import React,{useState,useCallback,useMemo,useEffect}from'react';import AsyncSelect from'react-select/async';import{db}from'../firebase';import{collection,getDocs,query,limit,where,orderBy,startAt,endAt}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MAIN_SIZES=['S','M','L','XL','2XL','3XL'];const LARGE_SIZES=['2XL','3XL','4XL'];const LoadingSpinner=()=>/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-500\"})});const getPriceForQuantity=(product,totalQuantity)=>{if(totalQuantity>=72)return parseFloat(product.Price_72_plus)||0;if(totalQuantity>=48)return parseFloat(product.Price_48_71)||0;if(totalQuantity>=24)return parseFloat(product.Price_24_47)||0;if(totalQuantity>=12)return parseFloat(product.Price_12_23)||0;if(totalQuantity>=6)return parseFloat(product.Price_6_11)||0;return parseFloat(product.Price_2_5)||0;};export default function EmbroideryCalculator(){const[productDatabase,setProductDatabase]=useState({});const[orders,setOrders]=useState([{STYLE_No:'',COLOR_NAME:'',quantities:{},error:null}]);const[errorMessage,setErrorMessage]=useState(null);const[isLoading,setIsLoading]=useState(false);const updateOrder=useCallback((index,field,value)=>{setOrders(prevOrders=>{const newOrders=[...prevOrders];newOrders[index]={...newOrders[index],[field]:value,error:null};if(field==='STYLE_No'){newOrders[index].COLOR_NAME='';newOrders[index].quantities={};}else if(field==='COLOR_NAME'){newOrders[index].quantities={};}return newOrders;});},[]);useEffect(()=>{const fetchProductDataForOrders=async()=>{const ordersToFetch=orders.filter(order=>{return order.STYLE_No&&order.COLOR_NAME&&!productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];});for(const order of ordersToFetch){const styleNo=order.STYLE_No;const colorName=order.COLOR_NAME;try{setIsLoading(true);const productQuery=query(collection(db,'embroidery_products'),where('STYLE_No','==',styleNo),where('COLOR_NAME','==',colorName),limit(1));const querySnapshot=await getDocs(productQuery);if(!querySnapshot.empty){const productData=querySnapshot.docs[0].data();setProductDatabase(prevDatabase=>({...prevDatabase,[`${styleNo}_${colorName}`]:productData}));}else{console.error('Product not found for style and color');}}catch(err){console.error('Error fetching product data:',err);setErrorMessage('Failed to load product data. Please try again later.');}finally{setIsLoading(false);}}};fetchProductDataForOrders();},[orders,productDatabase]);const calculateOrderTotals=useCallback(()=>{const totalQuantity=orders.reduce((acc,order)=>{return acc+Object.values(order.quantities).reduce((sum,qty)=>sum+(qty||0),0);},0);const totals=orders.reduce((acc,order)=>{const product=productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];if(!product)return acc;const basePrice=getPriceForQuantity(product,totalQuantity);const orderPrice=Object.entries(order.quantities).reduce((sum,_ref)=>{let[size,qty]=_ref;if(!qty)return sum;const surcharge=LARGE_SIZES.includes(size)?parseFloat(product.Surcharge)||0:0;return sum+(basePrice+surcharge)*qty;},0);return{quantity:acc.quantity+Object.values(order.quantities).reduce((sum,qty)=>sum+(qty||0),0),price:acc.price+orderPrice};},{quantity:0,price:0});return totals;},[orders,productDatabase]);const totals=useMemo(()=>calculateOrderTotals(),[calculateOrderTotals]);const loadStyleOptions=async inputValue=>{try{const styleQuery=query(collection(db,'embroidery_products'),orderBy('STYLE_No'),startAt(inputValue),endAt(inputValue+'\\uf8ff'),limit(20));const querySnapshot=await getDocs(styleQuery);const styles=[];querySnapshot.forEach(doc=>{const data=doc.data();if(data.STYLE_No&&!styles.some(style=>style.value===data.STYLE_No)){styles.push({label:data.STYLE_No,value:data.STYLE_No});}});return styles;}catch(err){console.error('Error loading styles:',err);return[];}};const loadColorOptions=async(inputValue,styleNo)=>{if(!styleNo)return[];try{const colorQuery=query(collection(db,'embroidery_products'),where('STYLE_No','==',styleNo),orderBy('COLOR_NAME'),startAt(inputValue),endAt(inputValue+'\\uf8ff'),limit(20));const querySnapshot=await getDocs(colorQuery);const colors=[];querySnapshot.forEach(doc=>{const data=doc.data();if(data.COLOR_NAME&&!colors.some(color=>color.value===data.COLOR_NAME)){colors.push({label:data.COLOR_NAME,value:data.COLOR_NAME});}});return colors;}catch(err){console.error('Error loading colors:',err);return[];}};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 min-h-screen p-4 md:p-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-green-600 p-6 bg-green-100\",children:\"Embroidery Order Form\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:errorMessage})]}),isLoading&&/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-green-500 text-white\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-left\",children:\"Style No\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-left\",children:\"Color Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-left\",children:\"Product Title\"}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-center\",children:size},size)),/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-center\",children:\"Other Sizes\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-center\",children:\"Line Qty\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-center\",children:\"Row Total\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-3 text-center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map((order,index)=>{const product=productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];const availableSizes=product?Object.keys(product).filter(key=>key.includes('Size_')&&!MAIN_SIZES.includes(key.replace('Size_',''))).map(key=>key.replace('Size_','')).sort((a,b)=>{const sizeOrder=['XS','S','M','L','XL','2XL','3XL','4XL','5XL','6XL'];return sizeOrder.indexOf(a)-sizeOrder.indexOf(b);}):[];const lineQuantity=Object.values(order.quantities).reduce((sum,qty)=>sum+(qty||0),0);return/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-gray-50':'bg-white',children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-3\",children:/*#__PURE__*/_jsx(AsyncSelect,{cacheOptions:true,loadOptions:loadStyleOptions,onChange:selectedOption=>{const value=selectedOption?selectedOption.value:'';updateOrder(index,'STYLE_No',value);},value:order.STYLE_No?{value:order.STYLE_No,label:order.STYLE_No}:null,placeholder:\"Enter or select style\",isDisabled:isLoading,className:\"w-full\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-3\",children:/*#__PURE__*/_jsx(AsyncSelect,{cacheOptions:true,loadOptions:inputValue=>loadColorOptions(inputValue,order.STYLE_No),onChange:selectedOption=>{const value=selectedOption?selectedOption.value:'';updateOrder(index,'COLOR_NAME',value);},value:order.COLOR_NAME?{value:order.COLOR_NAME,label:order.COLOR_NAME}:null,placeholder:\"Select Color\",isDisabled:!order.STYLE_No||isLoading,className:\"w-full\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-3\",children:(product===null||product===void 0?void 0:product.PRODUCT_TITLE)||''}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"td\",{className:`p-3 text-center ${LARGE_SIZES.includes(size)?'bg-yellow-100':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:order.quantities[size]||'',onChange:e=>updateOrder(index,'quantities',{...order.quantities,[size]:parseInt(e.target.value)||0}),min:\"0\",disabled:isLoading,className:\"w-16 text-center border rounded p-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs mt-1\",children:product?`$${(getPriceForQuantity(product,totals.quantity)+(LARGE_SIZES.includes(size)?parseFloat(product.Surcharge)||0:0)).toFixed(2)}`:''})]})},size)),/*#__PURE__*/_jsx(\"td\",{className:\"p-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center gap-2\",children:availableSizes.map(size=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"mr-1\",children:[size,\":\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:order.quantities[size]||'',onChange:e=>updateOrder(index,'quantities',{...order.quantities,[size]:parseInt(e.target.value)||0}),min:\"0\",disabled:isLoading,className:\"w-12 text-center border rounded p-1\"})]},size))})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-3 text-center font-bold\",children:lineQuantity}),/*#__PURE__*/_jsx(\"td\",{className:\"p-3 text-center font-bold\",children:product?`$${Object.entries(order.quantities).reduce((sum,_ref2)=>{let[size,qty]=_ref2;const price=getPriceForQuantity(product,totals.quantity);const surcharge=LARGE_SIZES.includes(size)?parseFloat(product.Surcharge)||0:0;return sum+(price+surcharge)*(qty||0);},0).toFixed(2)}`:''}),/*#__PURE__*/_jsx(\"td\",{className:\"p-3 text-center\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setOrders(prevOrders=>prevOrders.filter((_,i)=>i!==index));},className:\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 transition-colors\",children:\"Remove\"})})]},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setOrders(prevOrders=>[...prevOrders,{STYLE_No:'',COLOR_NAME:'',quantities:{},error:null}]);},className:\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-colors\",children:\"Add Order\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-100 p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-green-800 mb-4\",children:\"Order Summary\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg\",children:[\"Total Quantity: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:totals.quantity})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg\",children:[\"Total Price: \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-bold\",children:[\"$\",totals.price.toFixed(2)]})]})]})]})});}","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","db","collection","getDocs","query","limit","where","orderBy","startAt","endAt","jsx","_jsx","jsxs","_jsxs","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","getPriceForQuantity","product","totalQuantity","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","errorMessage","setErrorMessage","isLoading","setIsLoading","updateOrder","index","field","value","prevOrders","newOrders","fetchProductDataForOrders","ordersToFetch","filter","order","styleNo","colorName","productQuery","querySnapshot","empty","productData","docs","data","prevDatabase","console","err","calculateOrderTotals","reduce","acc","Object","values","sum","qty","totals","basePrice","orderPrice","entries","_ref","size","surcharge","includes","Surcharge","quantity","price","loadStyleOptions","inputValue","styleQuery","styles","forEach","doc","some","style","push","label","loadColorOptions","colorQuery","colors","color","role","map","availableSizes","keys","key","replace","sort","a","b","sizeOrder","indexOf","lineQuantity","cacheOptions","loadOptions","onChange","selectedOption","placeholder","isDisabled","PRODUCT_TITLE","type","e","parseInt","target","min","disabled","toFixed","_ref2","onClick","_","i"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, limit, where, orderBy, startAt, endAt } from 'firebase/firestore';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"flex justify-center items-center\">\r\n    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-500\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        return newOrders;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchProductDataForOrders = async () => {\r\n      const ordersToFetch = orders.filter((order) => {\r\n        return (\r\n          order.STYLE_No &&\r\n          order.COLOR_NAME &&\r\n          !productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`]\r\n        );\r\n      });\r\n      for (const order of ordersToFetch) {\r\n        const styleNo = order.STYLE_No;\r\n        const colorName = order.COLOR_NAME;\r\n        try {\r\n          setIsLoading(true);\r\n          const productQuery = query(\r\n            collection(db, 'embroidery_products'),\r\n            where('STYLE_No', '==', styleNo),\r\n            where('COLOR_NAME', '==', colorName),\r\n            limit(1)\r\n          );\r\n          const querySnapshot = await getDocs(productQuery);\r\n          if (!querySnapshot.empty) {\r\n            const productData = querySnapshot.docs[0].data();\r\n            setProductDatabase((prevDatabase) => ({\r\n              ...prevDatabase,\r\n              [`${styleNo}_${colorName}`]: productData,\r\n            }));\r\n          } else {\r\n            console.error('Product not found for style and color');\r\n          }\r\n        } catch (err) {\r\n          console.error('Error fetching product data:', err);\r\n          setErrorMessage('Failed to load product data. Please try again later.');\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    fetchProductDataForOrders();\r\n  }, [orders, productDatabase]);\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    const totals = orders.reduce(\r\n      (acc, order) => {\r\n        const product = productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\r\n        if (!product) return acc;\r\n\r\n        const basePrice = getPriceForQuantity(product, totalQuantity);\r\n\r\n        const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n          if (!qty) return sum;\r\n          const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n          return sum + (basePrice + surcharge) * qty;\r\n        }, 0);\r\n\r\n        return {\r\n          quantity: acc.quantity + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0),\r\n          price: acc.price + orderPrice,\r\n        };\r\n      },\r\n      { quantity: 0, price: 0 }\r\n    );\r\n\r\n    return totals;\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  const loadStyleOptions = async (inputValue) => {\r\n    try {\r\n      const styleQuery = query(\r\n        collection(db, 'embroidery_products'),\r\n        orderBy('STYLE_No'),\r\n        startAt(inputValue),\r\n        endAt(inputValue + '\\uf8ff'),\r\n        limit(20)\r\n      );\r\n      const querySnapshot = await getDocs(styleQuery);\r\n      const styles = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        if (data.STYLE_No && !styles.some(style => style.value === data.STYLE_No)) {\r\n          styles.push({ label: data.STYLE_No, value: data.STYLE_No });\r\n        }\r\n      });\r\n      return styles;\r\n    } catch (err) {\r\n      console.error('Error loading styles:', err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const loadColorOptions = async (inputValue, styleNo) => {\r\n    if (!styleNo) return [];\r\n    try {\r\n      const colorQuery = query(\r\n        collection(db, 'embroidery_products'),\r\n        where('STYLE_No', '==', styleNo),\r\n        orderBy('COLOR_NAME'),\r\n        startAt(inputValue),\r\n        endAt(inputValue + '\\uf8ff'),\r\n        limit(20)\r\n      );\r\n      const querySnapshot = await getDocs(colorQuery);\r\n      const colors = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        if (data.COLOR_NAME && !colors.some(color => color.value === data.COLOR_NAME)) {\r\n          colors.push({ label: data.COLOR_NAME, value: data.COLOR_NAME });\r\n        }\r\n      });\r\n      return colors;\r\n    } catch (err) {\r\n      console.error('Error loading colors:', err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-4 md:p-8\">\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        <h1 className=\"text-3xl font-bold text-green-600 p-6 bg-green-100\">Embroidery Order Form</h1>\r\n        {errorMessage && (\r\n          <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\" role=\"alert\">\r\n            <p className=\"font-bold\">Error</p>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        {isLoading && <LoadingSpinner />}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-green-500 text-white\">\r\n              <tr>\r\n                <th className=\"p-3 text-left\">Style No</th>\r\n                <th className=\"p-3 text-left\">Color Name</th>\r\n                <th className=\"p-3 text-left\">Product Title</th>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <th key={size} className=\"p-3 text-center\">{size}</th>\r\n                ))}\r\n                <th className=\"p-3 text-center\">Other Sizes</th>\r\n                <th className=\"p-3 text-center\">Line Qty</th>\r\n                <th className=\"p-3 text-center\">Row Total</th>\r\n                <th className=\"p-3 text-center\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => {\r\n                const product = productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\r\n                const availableSizes = product\r\n                  ? Object.keys(product)\r\n                      .filter((key) => key.includes('Size_') && !MAIN_SIZES.includes(key.replace('Size_', '')))\r\n                      .map((key) => key.replace('Size_', ''))\r\n                      .sort((a, b) => {\r\n                        const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\r\n                        return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\r\n                      })\r\n                  : [];\r\n                const lineQuantity = Object.values(order.quantities).reduce(\r\n                  (sum, qty) => sum + (qty || 0),\r\n                  0\r\n                );\r\n\r\n                return (\r\n                  <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\r\n                    <td className=\"p-3\">\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        loadOptions={loadStyleOptions}\r\n                        onChange={(selectedOption) => {\r\n                          const value = selectedOption ? selectedOption.value : '';\r\n                          updateOrder(index, 'STYLE_No', value);\r\n                        }}\r\n                        value={\r\n                          order.STYLE_No\r\n                            ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                            : null\r\n                        }\r\n                        placeholder=\"Enter or select style\"\r\n                        isDisabled={isLoading}\r\n                        className=\"w-full\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"p-3\">\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        loadOptions={(inputValue) => loadColorOptions(inputValue, order.STYLE_No)}\r\n                        onChange={(selectedOption) => {\r\n                          const value = selectedOption ? selectedOption.value : '';\r\n                          updateOrder(index, 'COLOR_NAME', value);\r\n                        }}\r\n                        value={\r\n                          order.COLOR_NAME\r\n                            ? { value: order.COLOR_NAME, label: order.COLOR_NAME }\r\n                            : null\r\n                        }\r\n                        placeholder=\"Select Color\"\r\n                        isDisabled={!order.STYLE_No || isLoading}\r\n                        className=\"w-full\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"p-3\">{product?.PRODUCT_TITLE || ''}</td>\r\n                    {MAIN_SIZES.map((size) => (\r\n                      <td\r\n                        key={size}\r\n                        className={`p-3 text-center ${LARGE_SIZES.includes(size) ? 'bg-yellow-100' : ''}`}\r\n                      >\r\n                        <div className=\"flex flex-col items-center\">\r\n                          <input\r\n                            type=\"number\"\r\n                            value={order.quantities[size] || ''}\r\n                            onChange={(e) =>\r\n                              updateOrder(index, 'quantities', {\r\n                                ...order.quantities,\r\n                                [size]: parseInt(e.target.value) || 0,\r\n                              })\r\n                            }\r\n                            min=\"0\"\r\n                            disabled={isLoading}\r\n                            className=\"w-16 text-center border rounded p-1\"\r\n                          />\r\n                          <div className=\"text-xs mt-1\">\r\n                            {product\r\n                              ? `$${(\r\n                                  getPriceForQuantity(product, totals.quantity) +\r\n                                  (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)\r\n                                ).toFixed(2)}`\r\n                              : ''}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    ))}\r\n                    <td className=\"p-3\">\r\n                      <div className=\"flex flex-wrap justify-center gap-2\">\r\n                        {availableSizes.map((size) => (\r\n                          <div key={size} className=\"flex items-center\">\r\n                            <span className=\"mr-1\">{size}:</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              value={order.quantities[size] || ''}\r\n                              onChange={(e) =>\r\n                                updateOrder(index, 'quantities', {\r\n                                  ...order.quantities,\r\n                                  [size]: parseInt(e.target.value) || 0,\r\n                                })\r\n                              }\r\n                              min=\"0\"\r\n                              disabled={isLoading}\r\n                              className=\"w-12 text-center border rounded p-1\"\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-3 text-center font-bold\">{lineQuantity}</td>\r\n                    <td className=\"p-3 text-center font-bold\">\r\n                      {product\r\n                        ? `$${Object.entries(order.quantities)\r\n                            .reduce((sum, [size, qty]) => {\r\n                              const price = getPriceForQuantity(product, totals.quantity);\r\n                              const surcharge = LARGE_SIZES.includes(size)\r\n                                ? parseFloat(product.Surcharge) || 0\r\n                                : 0;\r\n                              return sum + (price + surcharge) * (qty || 0);\r\n                            }, 0)\r\n                            .toFixed(2)}`\r\n                        : ''}\r\n                    </td>\r\n                    <td className=\"p-3 text-center\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                        }}\r\n                        className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 transition-colors\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <button\r\n            onClick={() => {\r\n              setOrders((prevOrders) => [\r\n                ...prevOrders,\r\n                { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null },\r\n              ]);\r\n            }}\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-colors\"\r\n          >\r\n            Add Order\r\n          </button>\r\n        </div>\r\n        <div className=\"bg-green-100 p-6\">\r\n          <h2 className=\"text-2xl font-bold text-green-800 mb-4\">Order Summary</h2>\r\n          <p className=\"text-lg\">Total Quantity: <span className=\"font-bold\">{totals.quantity}</span></p>\r\n          <p className=\"text-lg\">Total Price: <span className=\"font-bold\">${totals.price.toFixed(2)}</span></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}