{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { db } from '../firebase';\nimport { collection, getDocs, query, limit, where } from 'firebase/firestore';\nimport algoliasearch from 'algoliasearch/lite';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALGOLIA_APP_ID = 'YOUR_ALGOLIA_APP_ID';\nconst ALGOLIA_SEARCH_API_KEY = 'YOUR_ALGOLIA_SEARCH_API_KEY';\nconst ALGOLIA_INDEX_NAME = 'YOUR_ALGOLIA_INDEX_NAME';\nconst searchClient = algoliasearch(ALGOLIA_APP_ID, ALGOLIA_SEARCH_API_KEY);\nconst index = searchClient.initIndex(ALGOLIA_INDEX_NAME);\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst getPriceForQuantity = (product, totalQuantity) => {\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\n  return parseFloat(product.Price_2_5) || 0;\n};\nexport default function EmbroideryCalculator() {\n  _s();\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const updateOrder = useCallback((index, field, value) => {\n    setOrders(prevOrders => {\n      const newOrders = [...prevOrders];\n      newOrders[index] = {\n        ...newOrders[index],\n        [field]: value,\n        error: null\n      };\n      if (field === 'STYLE_No') {\n        newOrders[index].COLOR_NAME = '';\n        newOrders[index].quantities = {};\n      } else if (field === 'COLOR_NAME') {\n        newOrders[index].quantities = {};\n      }\n      return newOrders;\n    });\n  }, []);\n  useEffect(() => {\n    const fetchProductDataForOrders = async () => {\n      const ordersToFetch = orders.filter(order => {\n        return order.STYLE_No && order.COLOR_NAME && !productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\n      });\n      for (const order of ordersToFetch) {\n        const styleNo = order.STYLE_No;\n        const colorName = order.COLOR_NAME;\n        try {\n          setIsLoading(true);\n          const productQuery = query(collection(db, 'embroidery_products'), where('STYLE_No', '==', styleNo), where('COLOR_NAME', '==', colorName), limit(1));\n          const querySnapshot = await getDocs(productQuery);\n          if (!querySnapshot.empty) {\n            const productData = querySnapshot.docs[0].data();\n            setProductDatabase(prevDatabase => ({\n              ...prevDatabase,\n              [`${styleNo}_${colorName}`]: productData\n            }));\n          } else {\n            console.error('Product not found for style and color');\n          }\n        } catch (err) {\n          console.error('Error fetching product data:', err);\n          setErrorMessage('Failed to load product data. Please try again later.');\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    fetchProductDataForOrders();\n  }, [orders, productDatabase]);\n  const calculateOrderTotals = useCallback(() => {\n    const totalQuantity = orders.reduce((acc, order) => {\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n    }, 0);\n    const totals = orders.reduce((acc, order) => {\n      const product = productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\n      if (!product) return acc;\n      const basePrice = getPriceForQuantity(product, totalQuantity);\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n        if (!qty) return sum;\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n        return sum + (basePrice + surcharge) * qty;\n      }, 0);\n      return {\n        quantity: acc.quantity + totalQuantity,\n        price: acc.price + orderPrice\n      };\n    }, {\n      quantity: 0,\n      price: 0\n    });\n    return totals;\n  }, [orders, productDatabase]);\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\n  const loadStyleOptions = async inputValue => {\n    try {\n      const {\n        hits\n      } = await index.search(inputValue, {\n        attributesToRetrieve: ['STYLE_No'],\n        hitsPerPage: 20\n      });\n      return hits.map(hit => ({\n        label: hit.STYLE_No,\n        value: hit.STYLE_No\n      }));\n    } catch (err) {\n      console.error('Error loading styles:', err);\n      return [];\n    }\n  };\n  const loadColorOptions = async (inputValue, styleNo) => {\n    if (!styleNo) return [];\n    try {\n      const {\n        hits\n      } = await index.search(inputValue, {\n        filters: `STYLE_No:${styleNo}`,\n        attributesToRetrieve: ['COLOR_NAME'],\n        hitsPerPage: 20\n      });\n      return hits.map(hit => ({\n        label: hit.COLOR_NAME,\n        value: hit.COLOR_NAME\n      }));\n    } catch (err) {\n      console.error('Error loading colors:', err);\n      return [];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '200px'\n              },\n              children: \"Style No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '200px'\n              },\n              children: \"Color Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '300px'\n              },\n              children: \"Product Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Other Sizes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Line Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Row Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map((order, index) => {\n            const product = productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\n            const availableSizes = product ? Object.keys(product).filter(key => key.includes('Size_') && !MAIN_SIZES.includes(key.replace('Size_', ''))).map(key => key.replace('Size_', '')).sort((a, b) => {\n              const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\n              return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\n            }) : [];\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  cacheOptions: true,\n                  loadOptions: loadStyleOptions,\n                  onChange: selectedOption => {\n                    const value = selectedOption ? selectedOption.value : '';\n                    updateOrder(index, 'STYLE_No', value);\n                  },\n                  value: order.STYLE_No ? {\n                    value: order.STYLE_No,\n                    label: order.STYLE_No\n                  } : null,\n                  placeholder: \"Enter or select style\",\n                  isDisabled: isLoading,\n                  styles: {\n                    control: provided => ({\n                      ...provided,\n                      width: '200px'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  cacheOptions: true,\n                  loadOptions: inputValue => loadColorOptions(inputValue, order.STYLE_No),\n                  onChange: selectedOption => {\n                    const value = selectedOption ? selectedOption.value : '';\n                    updateOrder(index, 'COLOR_NAME', value);\n                  },\n                  value: order.COLOR_NAME ? {\n                    value: order.COLOR_NAME,\n                    label: order.COLOR_NAME\n                  } : null,\n                  placeholder: \"Select Color\",\n                  isDisabled: !order.STYLE_No || isLoading,\n                  styles: {\n                    control: provided => ({\n                      ...provided,\n                      width: '200px'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (product === null || product === void 0 ? void 0 : product.PRODUCT_TITLE) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: LARGE_SIZES.includes(size) ? 'highlight-large-size' : '',\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: order.quantities[size] || '',\n                    onChange: e => updateOrder(index, 'quantities', {\n                      ...order.quantities,\n                      [size]: parseInt(e.target.value) || 0\n                    }),\n                    min: \"0\",\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"price-info\",\n                    children: product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: availableSizes.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"other-sizes-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [size, \": \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: order.quantities[size] || '',\n                    onChange: e => updateOrder(index, 'quantities', {\n                      ...order.quantities,\n                      [size]: parseInt(e.target.value) || 0\n                    }),\n                    min: \"0\",\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this)]\n                }, size, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: lineQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product ? `$${Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n                  const price = getPriceForQuantity(product, totals.quantity);\n                  const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n                  return sum + (price + surcharge) * (qty || 0);\n                }, 0).toFixed(2)}` : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setOrders(prevOrders => prevOrders.filter((_, i) => i !== index));\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setOrders(prevOrders => [...prevOrders, {\n          STYLE_No: '',\n          COLOR_NAME: '',\n          quantities: {},\n          error: null\n        }]);\n      },\n      children: \"Add Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"1IUp6g4fAVQxHOrdHGbv6E5H1jE=\");\n_c2 = EmbroideryCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","db","collection","getDocs","query","limit","where","algoliasearch","jsxDEV","_jsxDEV","ALGOLIA_APP_ID","ALGOLIA_SEARCH_API_KEY","ALGOLIA_INDEX_NAME","searchClient","index","initIndex","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getPriceForQuantity","product","totalQuantity","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","errorMessage","setErrorMessage","isLoading","setIsLoading","updateOrder","field","value","prevOrders","newOrders","fetchProductDataForOrders","ordersToFetch","filter","order","styleNo","colorName","productQuery","querySnapshot","empty","productData","docs","data","prevDatabase","console","err","calculateOrderTotals","reduce","acc","Object","values","sum","qty","totals","basePrice","orderPrice","entries","size","surcharge","includes","Surcharge","quantity","price","loadStyleOptions","inputValue","hits","search","attributesToRetrieve","hitsPerPage","map","hit","label","loadColorOptions","filters","role","style","width","availableSizes","keys","key","replace","sort","a","b","sizeOrder","indexOf","lineQuantity","cacheOptions","loadOptions","onChange","selectedOption","placeholder","isDisabled","styles","control","provided","PRODUCT_TITLE","type","e","parseInt","target","min","disabled","toFixed","onClick","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, limit, where } from 'firebase/firestore';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst ALGOLIA_APP_ID = 'YOUR_ALGOLIA_APP_ID';\r\nconst ALGOLIA_SEARCH_API_KEY = 'YOUR_ALGOLIA_SEARCH_API_KEY';\r\nconst ALGOLIA_INDEX_NAME = 'YOUR_ALGOLIA_INDEX_NAME';\r\n\r\nconst searchClient = algoliasearch(ALGOLIA_APP_ID, ALGOLIA_SEARCH_API_KEY);\r\nconst index = searchClient.initIndex(ALGOLIA_INDEX_NAME);\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        return newOrders;\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchProductDataForOrders = async () => {\r\n      const ordersToFetch = orders.filter((order) => {\r\n        return (\r\n          order.STYLE_No &&\r\n          order.COLOR_NAME &&\r\n          !productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`]\r\n        );\r\n      });\r\n      for (const order of ordersToFetch) {\r\n        const styleNo = order.STYLE_No;\r\n        const colorName = order.COLOR_NAME;\r\n        try {\r\n          setIsLoading(true);\r\n          const productQuery = query(\r\n            collection(db, 'embroidery_products'),\r\n            where('STYLE_No', '==', styleNo),\r\n            where('COLOR_NAME', '==', colorName),\r\n            limit(1)\r\n          );\r\n          const querySnapshot = await getDocs(productQuery);\r\n          if (!querySnapshot.empty) {\r\n            const productData = querySnapshot.docs[0].data();\r\n            setProductDatabase((prevDatabase) => ({\r\n              ...prevDatabase,\r\n              [`${styleNo}_${colorName}`]: productData,\r\n            }));\r\n          } else {\r\n            console.error('Product not found for style and color');\r\n          }\r\n        } catch (err) {\r\n          console.error('Error fetching product data:', err);\r\n          setErrorMessage('Failed to load product data. Please try again later.');\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    fetchProductDataForOrders();\r\n  }, [orders, productDatabase]);\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    const totals = orders.reduce(\r\n      (acc, order) => {\r\n        const product = productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\r\n        if (!product) return acc;\r\n\r\n        const basePrice = getPriceForQuantity(product, totalQuantity);\r\n\r\n        const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n          if (!qty) return sum;\r\n          const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n          return sum + (basePrice + surcharge) * qty;\r\n        }, 0);\r\n\r\n        return {\r\n          quantity: acc.quantity + totalQuantity,\r\n          price: acc.price + orderPrice,\r\n        };\r\n      },\r\n      { quantity: 0, price: 0 }\r\n    );\r\n\r\n    return totals;\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  const loadStyleOptions = async (inputValue) => {\r\n    try {\r\n      const { hits } = await index.search(inputValue, {\r\n        attributesToRetrieve: ['STYLE_No'],\r\n        hitsPerPage: 20,\r\n      });\r\n      return hits.map((hit) => ({ label: hit.STYLE_No, value: hit.STYLE_No }));\r\n    } catch (err) {\r\n      console.error('Error loading styles:', err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const loadColorOptions = async (inputValue, styleNo) => {\r\n    if (!styleNo) return [];\r\n    try {\r\n      const { hits } = await index.search(inputValue, {\r\n        filters: `STYLE_No:${styleNo}`,\r\n        attributesToRetrieve: ['COLOR_NAME'],\r\n        hitsPerPage: 20,\r\n      });\r\n      return hits.map((hit) => ({ label: hit.COLOR_NAME, value: hit.COLOR_NAME }));\r\n    } catch (err) {\r\n      console.error('Error loading colors:', err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: '200px' }}>Style No</th>\r\n              <th style={{ width: '200px' }}>Color Name</th>\r\n              <th style={{ width: '300px' }}>Product Title</th>\r\n              {MAIN_SIZES.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n              <th>Other Sizes</th>\r\n              <th>Line Qty</th>\r\n              <th>Row Total</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, index) => {\r\n              const product = productDatabase[`${order.STYLE_No}_${order.COLOR_NAME}`];\r\n              const availableSizes = product\r\n                ? Object.keys(product)\r\n                    .filter((key) => key.includes('Size_') && !MAIN_SIZES.includes(key.replace('Size_', '')))\r\n                    .map((key) => key.replace('Size_', ''))\r\n                    .sort((a, b) => {\r\n                      const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\r\n                      return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\r\n                    })\r\n                : [];\r\n              const lineQuantity = Object.values(order.quantities).reduce(\r\n                (sum, qty) => sum + (qty || 0),\r\n                0\r\n              );\r\n\r\n              return (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <AsyncSelect\r\n                      cacheOptions\r\n                      loadOptions={loadStyleOptions}\r\n                      onChange={(selectedOption) => {\r\n                        const value = selectedOption ? selectedOption.value : '';\r\n                        updateOrder(index, 'STYLE_No', value);\r\n                      }}\r\n                      value={\r\n                        order.STYLE_No\r\n                          ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                          : null\r\n                      }\r\n                      placeholder=\"Enter or select style\"\r\n                      isDisabled={isLoading}\r\n                      styles={{\r\n                        control: (provided) => ({\r\n                          ...provided,\r\n                          width: '200px',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <AsyncSelect\r\n                      cacheOptions\r\n                      loadOptions={(inputValue) => loadColorOptions(inputValue, order.STYLE_No)}\r\n                      onChange={(selectedOption) => {\r\n                        const value = selectedOption ? selectedOption.value : '';\r\n                        updateOrder(index, 'COLOR_NAME', value);\r\n                      }}\r\n                      value={\r\n                        order.COLOR_NAME\r\n                          ? { value: order.COLOR_NAME, label: order.COLOR_NAME }\r\n                          : null\r\n                      }\r\n                      placeholder=\"Select Color\"\r\n                      isDisabled={!order.STYLE_No || isLoading}\r\n                      styles={{\r\n                        control: (provided) => ({\r\n                          ...provided,\r\n                          width: '200px',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>{product?.PRODUCT_TITLE || ''}</td>\r\n                  {MAIN_SIZES.map((size) => (\r\n                    <td\r\n                      key={size}\r\n                      className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}\r\n                    >\r\n                      <div>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                        <div className=\"price-info\">\r\n                          {product\r\n                            ? `$${(\r\n                                getPriceForQuantity(product, totals.quantity) +\r\n                                (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)\r\n                              ).toFixed(2)}`\r\n                            : ''}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  ))}\r\n                  <td>\r\n                    {availableSizes.map((size) => (\r\n                      <div key={size} className=\"other-sizes-input\">\r\n                        <span>{size}: </span>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </td>\r\n                  <td>{lineQuantity}</td>\r\n                  <td>\r\n                    {product\r\n                      ? `$${Object.entries(order.quantities)\r\n                          .reduce((sum, [size, qty]) => {\r\n                            const price = getPriceForQuantity(product, totals.quantity);\r\n                            const surcharge = LARGE_SIZES.includes(size)\r\n                              ? parseFloat(product.Surcharge) || 0\r\n                              : 0;\r\n                            return sum + (price + surcharge) * (qty || 0);\r\n                          }, 0)\r\n                          .toFixed(2)}`\r\n                      : ''}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => {\r\n                        setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                      }}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          setOrders((prevOrders) => [\r\n            ...prevOrders,\r\n            { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null },\r\n          ]);\r\n        }}\r\n      >\r\n        Add Order\r\n      </button>\r\n      <div className=\"order-summary\">\r\n        <h2>Order Summary</h2>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}