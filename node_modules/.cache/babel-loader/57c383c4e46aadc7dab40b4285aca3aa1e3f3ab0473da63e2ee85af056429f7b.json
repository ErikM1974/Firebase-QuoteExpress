{"ast":null,"code":"import React,{useState}from'react';import AsyncSelect from'react-select/async';import{db}from'../firebase';import{collection,getDoc,getDocs,query,limit,where,orderBy,doc}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EmbroideryCalculator(){const[orders,setOrders]=useState([{styleNo:'',colorName:'',productTitle:'',productData:null,quantities:{},otherQuantity:0,lineTotal:0}]);const[errorMessage,setErrorMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const MAIN_SIZES=['XS','S','M','L','XL','2XL','3XL','4XL','5XL'];// Load style options for the AsyncSelect component\nconst loadStyleOptions=async inputValue=>{try{const searchTerm=inputValue.toUpperCase();console.log('Searching for styles with input:',searchTerm);const stylesRef=collection(db,'styles');console.log('Styles collection reference:',stylesRef);// Query based on document IDs (style_no)\nconst styleQuery=query(stylesRef,orderBy('__name__'),where('__name__','>=',searchTerm),where('__name__','<=',searchTerm+'\\uf8ff'),limit(20));console.log('Style query:',styleQuery);const querySnapshot=await getDocs(styleQuery);console.log('Query snapshot size:',querySnapshot.size);const styles=[];const uniqueStyles=new Set();querySnapshot.forEach(doc=>{const data=doc.data();const styleNo=doc.id;// Using document ID as styleNo\nconsole.log('Document ID:',styleNo,'Data:',data);if(styleNo&&data.productTitle&&!uniqueStyles.has(styleNo)){styles.push({label:`${styleNo} - ${data.productTitle}`,value:styleNo});uniqueStyles.add(styleNo);}});console.log('Styles found by styleNo (document ID):',styles);// If no results, try searching by productTitle\nif(styles.length===0){console.log('No styles found by styleNo, searching by productTitle');const titleQuery=query(stylesRef,orderBy('productTitle'),where('productTitle','>=',searchTerm),where('productTitle','<=',searchTerm+'\\uf8ff'),limit(20));console.log('Title query:',titleQuery);const titleSnapshot=await getDocs(titleQuery);console.log('Title query snapshot size:',titleSnapshot.size);titleSnapshot.forEach(doc=>{const data=doc.data();const styleNo=doc.id;// Using document ID as styleNo\nconsole.log('Document ID:',styleNo,'Data:',data);if(styleNo&&data.productTitle&&!uniqueStyles.has(styleNo)){styles.push({label:`${styleNo} - ${data.productTitle}`,value:styleNo});uniqueStyles.add(styleNo);}});}console.log('Final returned styles:',styles);return styles;}catch(err){console.error('Error loading styles:',err);return[];}};// Function to update order fields\nconst updateOrder=(index,field,value)=>{const updatedOrders=[...orders];updatedOrders[index][field]=value;setOrders(updatedOrders);};// Function to calculate line total\nconst calculateLineTotal=order=>{const product=order.productData;if(!product)return 0;const quantities=order.quantities;const totalQuantity=Object.values(quantities).reduce((sum,qty)=>sum+(parseInt(qty)||0),0);// Determine base price based on totalQuantity\nconst basePriceRanges=product.basePrice;let basePrice=0;const quantityRanges=Object.keys(basePriceRanges);for(const range of quantityRanges){const[minStr,maxStr]=range.split('_');const min=parseInt(minStr);const max=maxStr==='plus'?Infinity:parseInt(maxStr);if(totalQuantity>=min&&totalQuantity<=max){basePrice=parseFloat(basePriceRanges[range]);break;}}if(basePrice===0){// If no base price found, return 0\nreturn 0;}// Now calculate total\nlet lineTotal=0;for(const size in quantities){const qty=parseInt(quantities[size])||0;if(qty>0){let sizeUpcharge=0;if(product.sizeUpcharges&&product.sizeUpcharges[size]){sizeUpcharge=parseFloat(product.sizeUpcharges[size]);}const price=basePrice+sizeUpcharge;lineTotal+=price*qty;}}return lineTotal;};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 min-h-screen p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-green-600 p-4 bg-green-100\",children:\"Embroidery Order Form\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:errorMessage})]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-green-500 text-white\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",style:{width:'200px'},children:\"Style No\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Color\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Product Title\"}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:size},size)),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Other\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map((order,index)=>{const product=order.productData;const lineQuantity=Object.values(order.quantities).reduce((sum,qty)=>sum+(parseInt(qty)||0),0);const lineTotal=calculateLineTotal(order).toFixed(2);return/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-gray-50':'bg-white',children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",style:{width:'200px'},children:/*#__PURE__*/_jsx(AsyncSelect,{cacheOptions:true,loadOptions:loadStyleOptions,onChange:selectedOption=>{const value=selectedOption?selectedOption.value:'';console.log('Selected style:',value);updateOrder(index,'styleNo',value);updateOrder(index,'colorName','');updateOrder(index,'productTitle','');updateOrder(index,'productData',null);// Reset product data\n// Fetch product data when styleNo is selected\nconst fetchProductData=async()=>{setIsLoading(true);try{const docRef=doc(db,'styles',value);const docSnap=await getDoc(docRef);if(docSnap.exists()){const data=docSnap.data();updateOrder(index,'productTitle',data.productTitle||'');updateOrder(index,'productData',data);// Store product data in order\n}}catch(error){console.error('Error fetching product data:',error);setErrorMessage('Failed to fetch product data. Please try again.');}finally{setIsLoading(false);}};fetchProductData();},value:order.styleNo?{value:order.styleNo,label:order.styleNo}:null,placeholder:\"Enter style number\",isDisabled:isLoading,styles:{control:provided=>({...provided,minWidth:'200px'}),menu:provided=>({...provided,zIndex:9999})},onInputChange:input=>console.log('Style input changed:',input)})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:product&&product.colors?/*#__PURE__*/_jsxs(\"select\",{className:\"w-full p-1 border rounded\",value:order.colorName||'',onChange:e=>{const value=e.target.value;updateOrder(index,'colorName',value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Color\"}),product.colors.map((color,idx)=>/*#__PURE__*/_jsx(\"option\",{value:color,children:color},idx))]}):/*#__PURE__*/_jsx(\"select\",{className:\"w-full p-1 border rounded\",disabled:true,children:/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Color\"})})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:order.productTitle||''}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",className:\"w-16 p-1 border rounded\",value:order.quantities[size]||'',onChange:e=>{const value=e.target.value;const updatedOrders=[...orders];updatedOrders[index].quantities[size]=value;setOrders(updatedOrders);},disabled:!product})},size)),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",className:\"w-16 p-1 border rounded\",value:order.otherQuantity||'',onChange:e=>{const value=e.target.value;const updatedOrders=[...orders];updatedOrders[index].otherQuantity=value;setOrders(updatedOrders);}})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:lineQuantity}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:lineTotal}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-red-500 text-white px-2 py-1 rounded\",onClick:()=>{const updatedOrders=[...orders];updatedOrders.splice(index,1);setOrders(updatedOrders);},children:\"Remove\"})})]},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white px-4 py-2 rounded\",onClick:()=>{setOrders([...orders,{styleNo:'',colorName:'',productTitle:'',productData:null,quantities:{},otherQuantity:0,lineTotal:0}]);},children:\"Add Line\"})})]})});}","map":{"version":3,"names":["React","useState","AsyncSelect","db","collection","getDoc","getDocs","query","limit","where","orderBy","doc","jsx","_jsx","jsxs","_jsxs","EmbroideryCalculator","orders","setOrders","styleNo","colorName","productTitle","productData","quantities","otherQuantity","lineTotal","errorMessage","setErrorMessage","isLoading","setIsLoading","MAIN_SIZES","loadStyleOptions","inputValue","searchTerm","toUpperCase","console","log","stylesRef","styleQuery","querySnapshot","size","styles","uniqueStyles","Set","forEach","data","id","has","push","label","value","add","length","titleQuery","titleSnapshot","err","error","updateOrder","index","field","updatedOrders","calculateLineTotal","order","product","totalQuantity","Object","values","reduce","sum","qty","parseInt","basePriceRanges","basePrice","quantityRanges","keys","range","minStr","maxStr","split","min","max","Infinity","parseFloat","sizeUpcharge","sizeUpcharges","price","className","children","role","style","width","map","lineQuantity","toFixed","cacheOptions","loadOptions","onChange","selectedOption","fetchProductData","docRef","docSnap","exists","placeholder","isDisabled","control","provided","minWidth","menu","zIndex","onInputChange","input","colors","e","target","color","idx","disabled","type","onClick","splice"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport {\r\n  collection,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  limit,\r\n  where,\r\n  orderBy,\r\n  doc,\r\n} from 'firebase/firestore';\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      styleNo: '',\r\n      colorName: '',\r\n      productTitle: '',\r\n      productData: null,\r\n      quantities: {},\r\n      otherQuantity: 0,\r\n      lineTotal: 0,\r\n    },\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const MAIN_SIZES = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL'];\r\n\r\n  // Load style options for the AsyncSelect component\r\n  const loadStyleOptions = async (inputValue) => {\r\n    try {\r\n      const searchTerm = inputValue.toUpperCase();\r\n      console.log('Searching for styles with input:', searchTerm);\r\n\r\n      const stylesRef = collection(db, 'styles');\r\n      console.log('Styles collection reference:', stylesRef);\r\n\r\n      // Query based on document IDs (style_no)\r\n      const styleQuery = query(\r\n        stylesRef,\r\n        orderBy('__name__'),\r\n        where('__name__', '>=', searchTerm),\r\n        where('__name__', '<=', searchTerm + '\\uf8ff'),\r\n        limit(20)\r\n      );\r\n      console.log('Style query:', styleQuery);\r\n\r\n      const querySnapshot = await getDocs(styleQuery);\r\n      console.log('Query snapshot size:', querySnapshot.size);\r\n\r\n      const styles = [];\r\n      const uniqueStyles = new Set();\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        const styleNo = doc.id; // Using document ID as styleNo\r\n        console.log('Document ID:', styleNo, 'Data:', data);\r\n        if (styleNo && data.productTitle && !uniqueStyles.has(styleNo)) {\r\n          styles.push({\r\n            label: `${styleNo} - ${data.productTitle}`,\r\n            value: styleNo,\r\n          });\r\n          uniqueStyles.add(styleNo);\r\n        }\r\n      });\r\n\r\n      console.log('Styles found by styleNo (document ID):', styles);\r\n\r\n      // If no results, try searching by productTitle\r\n      if (styles.length === 0) {\r\n        console.log('No styles found by styleNo, searching by productTitle');\r\n        const titleQuery = query(\r\n          stylesRef,\r\n          orderBy('productTitle'),\r\n          where('productTitle', '>=', searchTerm),\r\n          where('productTitle', '<=', searchTerm + '\\uf8ff'),\r\n          limit(20)\r\n        );\r\n        console.log('Title query:', titleQuery);\r\n\r\n        const titleSnapshot = await getDocs(titleQuery);\r\n        console.log('Title query snapshot size:', titleSnapshot.size);\r\n\r\n        titleSnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          const styleNo = doc.id; // Using document ID as styleNo\r\n          console.log('Document ID:', styleNo, 'Data:', data);\r\n          if (styleNo && data.productTitle && !uniqueStyles.has(styleNo)) {\r\n            styles.push({\r\n              label: `${styleNo} - ${data.productTitle}`,\r\n              value: styleNo,\r\n            });\r\n            uniqueStyles.add(styleNo);\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Final returned styles:', styles);\r\n      return styles;\r\n    } catch (err) {\r\n      console.error('Error loading styles:', err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Function to update order fields\r\n  const updateOrder = (index, field, value) => {\r\n    const updatedOrders = [...orders];\r\n    updatedOrders[index][field] = value;\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  // Function to calculate line total\r\n  const calculateLineTotal = (order) => {\r\n    const product = order.productData;\r\n    if (!product) return 0;\r\n\r\n    const quantities = order.quantities;\r\n    const totalQuantity = Object.values(quantities).reduce(\r\n      (sum, qty) => sum + (parseInt(qty) || 0),\r\n      0\r\n    );\r\n\r\n    // Determine base price based on totalQuantity\r\n    const basePriceRanges = product.basePrice;\r\n\r\n    let basePrice = 0;\r\n    const quantityRanges = Object.keys(basePriceRanges);\r\n    for (const range of quantityRanges) {\r\n      const [minStr, maxStr] = range.split('_');\r\n      const min = parseInt(minStr);\r\n      const max = maxStr === 'plus' ? Infinity : parseInt(maxStr);\r\n\r\n      if (totalQuantity >= min && totalQuantity <= max) {\r\n        basePrice = parseFloat(basePriceRanges[range]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (basePrice === 0) {\r\n      // If no base price found, return 0\r\n      return 0;\r\n    }\r\n\r\n    // Now calculate total\r\n    let lineTotal = 0;\r\n    for (const size in quantities) {\r\n      const qty = parseInt(quantities[size]) || 0;\r\n      if (qty > 0) {\r\n        let sizeUpcharge = 0;\r\n        if (product.sizeUpcharges && product.sizeUpcharges[size]) {\r\n          sizeUpcharge = parseFloat(product.sizeUpcharges[size]);\r\n        }\r\n        const price = basePrice + sizeUpcharge;\r\n        lineTotal += price * qty;\r\n      }\r\n    }\r\n\r\n    return lineTotal;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-4\">\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        <h1 className=\"text-2xl font-bold text-green-600 p-4 bg-green-100\">\r\n          Embroidery Order Form\r\n        </h1>\r\n        {errorMessage && (\r\n          <div\r\n            className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\"\r\n            role=\"alert\"\r\n          >\r\n            <p className=\"font-bold\">Error</p>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        {isLoading && <div>Loading...</div>}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-sm\">\r\n            <thead className=\"bg-green-500 text-white\">\r\n              <tr>\r\n                <th className=\"p-2 text-left\" style={{ width: '200px' }}>\r\n                  Style No\r\n                </th>\r\n                <th className=\"p-2 text-left\">Color</th>\r\n                <th className=\"p-2 text-left\">Product Title</th>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <th key={size} className=\"p-2 text-center\">\r\n                    {size}\r\n                  </th>\r\n                ))}\r\n                <th className=\"p-2 text-center\">Other</th>\r\n                <th className=\"p-2 text-center\">Qty</th>\r\n                <th className=\"p-2 text-center\">Total</th>\r\n                <th className=\"p-2 text-center\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => {\r\n                const product = order.productData;\r\n                const lineQuantity = Object.values(order.quantities).reduce(\r\n                  (sum, qty) => sum + (parseInt(qty) || 0),\r\n                  0\r\n                );\r\n\r\n                const lineTotal = calculateLineTotal(order).toFixed(2);\r\n\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}\r\n                  >\r\n                    {/* Style No */}\r\n                    <td className=\"p-2\" style={{ width: '200px' }}>\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        loadOptions={loadStyleOptions}\r\n                        onChange={(selectedOption) => {\r\n                          const value = selectedOption ? selectedOption.value : '';\r\n                          console.log('Selected style:', value);\r\n                          updateOrder(index, 'styleNo', value);\r\n                          updateOrder(index, 'colorName', '');\r\n                          updateOrder(index, 'productTitle', '');\r\n                          updateOrder(index, 'productData', null); // Reset product data\r\n\r\n                          // Fetch product data when styleNo is selected\r\n                          const fetchProductData = async () => {\r\n                            setIsLoading(true);\r\n                            try {\r\n                              const docRef = doc(db, 'styles', value);\r\n                              const docSnap = await getDoc(docRef);\r\n                              if (docSnap.exists()) {\r\n                                const data = docSnap.data();\r\n                                updateOrder(index, 'productTitle', data.productTitle || '');\r\n                                updateOrder(index, 'productData', data); // Store product data in order\r\n                              }\r\n                            } catch (error) {\r\n                              console.error('Error fetching product data:', error);\r\n                              setErrorMessage(\r\n                                'Failed to fetch product data. Please try again.'\r\n                              );\r\n                            } finally {\r\n                              setIsLoading(false);\r\n                            }\r\n                          };\r\n                          fetchProductData();\r\n                        }}\r\n                        value={\r\n                          order.styleNo\r\n                            ? { value: order.styleNo, label: order.styleNo }\r\n                            : null\r\n                        }\r\n                        placeholder=\"Enter style number\"\r\n                        isDisabled={isLoading}\r\n                        styles={{\r\n                          control: (provided) => ({ ...provided, minWidth: '200px' }),\r\n                          menu: (provided) => ({ ...provided, zIndex: 9999 }),\r\n                        }}\r\n                        onInputChange={(input) =>\r\n                          console.log('Style input changed:', input)\r\n                        }\r\n                      />\r\n                    </td>\r\n                    {/* Color selection */}\r\n                    <td className=\"p-2\">\r\n                      {product && product.colors ? (\r\n                        <select\r\n                          className=\"w-full p-1 border rounded\"\r\n                          value={order.colorName || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            updateOrder(index, 'colorName', value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Color</option>\r\n                          {product.colors.map((color, idx) => (\r\n                            <option key={idx} value={color}>\r\n                              {color}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        <select className=\"w-full p-1 border rounded\" disabled>\r\n                          <option value=\"\">Select Color</option>\r\n                        </select>\r\n                      )}\r\n                    </td>\r\n                    {/* Product Title */}\r\n                    <td className=\"p-2\">{order.productTitle || ''}</td>\r\n                    {/* Sizes */}\r\n                    {MAIN_SIZES.map((size) => (\r\n                      <td key={size} className=\"p-2 text-center\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-16 p-1 border rounded\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            const updatedOrders = [...orders];\r\n                            updatedOrders[index].quantities[size] = value;\r\n                            setOrders(updatedOrders);\r\n                          }}\r\n                          disabled={!product}\r\n                        />\r\n                      </td>\r\n                    ))}\r\n                    {/* Other quantity */}\r\n                    <td className=\"p-2 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        className=\"w-16 p-1 border rounded\"\r\n                        value={order.otherQuantity || ''}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          const updatedOrders = [...orders];\r\n                          updatedOrders[index].otherQuantity = value;\r\n                          setOrders(updatedOrders);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    {/* Quantity total */}\r\n                    <td className=\"p-2 text-center\">{lineQuantity}</td>\r\n                    {/* Line total */}\r\n                    <td className=\"p-2 text-center\">{lineTotal}</td>\r\n                    {/* Actions */}\r\n                    <td className=\"p-2 text-center\">\r\n                      <button\r\n                        className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                        onClick={() => {\r\n                          const updatedOrders = [...orders];\r\n                          updatedOrders.splice(index, 1);\r\n                          setOrders(updatedOrders);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* Add Line Button */}\r\n        <div className=\"p-4\">\r\n          <button\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n            onClick={() => {\r\n              setOrders([\r\n                ...orders,\r\n                {\r\n                  styleNo: '',\r\n                  colorName: '',\r\n                  productTitle: '',\r\n                  productData: null,\r\n                  quantities: {},\r\n                  otherQuantity: 0,\r\n                  lineTotal: 0,\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Add Line\r\n          </button>\r\n        </div>\r\n        {/* Submit Button or Other Components */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}