{"ast":null,"code":"import React,{useState,useEffect}from'react';import AsyncSelect from'react-select/async';import{db}from'../firebase';import{collection,getDocs,query,limit,where,orderBy}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EmbroideryCalculator(){const[orders,setOrders]=useState([{styleNo:'',colorName:'',productTitle:'',quantities:{},otherQuantity:0,lineTotal:0}]);const[errorMessage,setErrorMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[productDatabase,setProductDatabase]=useState({});const MAIN_SIZES=['XS','S','M','L','XL','2XL','3XL','4XL','5XL'];// Load style options for the AsyncSelect component\nconst loadStyleOptions=async inputValue=>{try{const searchTerm=inputValue.toUpperCase();console.log('Searching for styles with input:',searchTerm);const stylesRef=collection(db,'styles');console.log('Styles collection reference:',stylesRef);// Query based on document IDs (style_no)\nconst styleQuery=query(stylesRef,orderBy('__name__'),where('__name__','>=',searchTerm),where('__name__','<=',searchTerm+'\\uf8ff'),limit(20));console.log('Style query:',styleQuery);const querySnapshot=await getDocs(styleQuery);console.log('Query snapshot size:',querySnapshot.size);const styles=[];const uniqueStyles=new Set();querySnapshot.forEach(doc=>{const data=doc.data();const styleNo=doc.id;// Using document ID as styleNo\nconsole.log('Document ID:',styleNo,'Data:',data);if(styleNo&&data.productTitle&&!uniqueStyles.has(styleNo)){styles.push({label:`${styleNo} - ${data.productTitle}`,value:styleNo});uniqueStyles.add(styleNo);}});console.log('Styles found by styleNo (document ID):',styles);// If no results, try searching by productTitle\nif(styles.length===0){console.log('No styles found by styleNo, searching by productTitle');const titleQuery=query(stylesRef,orderBy('productTitle'),where('productTitle','>=',searchTerm),where('productTitle','<=',searchTerm+'\\uf8ff'),limit(20));console.log('Title query:',titleQuery);const titleSnapshot=await getDocs(titleQuery);console.log('Title query snapshot size:',titleSnapshot.size);titleSnapshot.forEach(doc=>{const data=doc.data();const styleNo=doc.id;// Using document ID as styleNo\nconsole.log('Document ID:',styleNo,'Data:',data);if(styleNo&&data.productTitle&&!uniqueStyles.has(styleNo)){styles.push({label:`${styleNo} - ${data.productTitle}`,value:styleNo});uniqueStyles.add(styleNo);}});}console.log('Final returned styles:',styles);return styles;}catch(err){console.error('Error loading styles:',err);setErrorMessage('Error loading styles. Please try again.');return[];}};// Function to update order fields\nconst updateOrder=(index,field,value)=>{const updatedOrders=[...orders];updatedOrders[index][field]=value;setOrders(updatedOrders);};// Function to fetch product data when styleNo and colorName are selected\nuseEffect(()=>{const fetchProductData=async()=>{setIsLoading(true);try{const productData={};for(const order of orders){if(order.styleNo&&order.colorName){const docRef=collection(db,'styles');const docSnap=await getDocs(query(docRef,where('__name__','==',order.styleNo)));if(!docSnap.empty){const doc=docSnap.docs[0];const data=doc.data();const key=`${order.styleNo}_${order.colorName}`;productData[key]=data;}}}setProductDatabase(productData);}catch(error){console.error('Error fetching product data:',error);setErrorMessage('Failed to fetch product data. Please try again.');}finally{setIsLoading(false);}};fetchProductData();},[orders]);// Function to calculate line total\nconst calculateLineTotal=(order,product)=>{if(!product)return 0;let total=0;const basePrice=product.basePrice||0;// Calculate total quantity\nconst totalQuantity=Object.values(order.quantities).reduce((sum,qty)=>sum+(parseInt(qty)||0),0)+(parseInt(order.otherQuantity)||0);// Apply quantity-based pricing\nlet price=basePrice;if(totalQuantity>=72)price=product.Price_72_plus||basePrice;else if(totalQuantity>=48)price=product.Price_48_71||basePrice;else if(totalQuantity>=24)price=product.Price_24_47||basePrice;else if(totalQuantity>=12)price=product.Price_12_23||basePrice;else if(totalQuantity>=6)price=product.Price_6_11||basePrice;// Calculate total\ntotal=totalQuantity*price;return total.toFixed(2);};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 min-h-screen p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-green-600 p-4 bg-green-100\",children:\"Embroidery Order Form\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:errorMessage})]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"p-4 text-center\",children:\"Loading...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-green-500 text-white\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Style No\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Color\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Product Title\"}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:size},size)),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Other\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map((order,index)=>{const productKey=`${order.styleNo}_${order.colorName}`;const product=productDatabase[productKey];const availableSizes=product?product.sizes:[];const lineQuantity=Object.values(order.quantities).reduce((sum,qty)=>sum+(parseInt(qty)||0),0)+(parseInt(order.otherQuantity)||0);const lineTotal=calculateLineTotal(order,product);return/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-gray-50':'bg-white',children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:/*#__PURE__*/_jsx(AsyncSelect,{cacheOptions:true,loadOptions:loadStyleOptions,onChange:selectedOption=>{const value=selectedOption?selectedOption.value:'';console.log('Selected style:',value);updateOrder(index,'styleNo',value);// Fetch product title when styleNo is selected\nconst fetchProductTitle=async()=>{try{const docRef=collection(db,'styles');const docSnap=await getDocs(query(docRef,where('__name__','==',value)));if(!docSnap.empty){const doc=docSnap.docs[0];const data=doc.data();updateOrder(index,'productTitle',data.productTitle||'');}}catch(error){console.error('Error fetching product title:',error);setErrorMessage('Error fetching product title. Please try again.');}};fetchProductTitle();},value:order.styleNo?{value:order.styleNo,label:order.styleNo}:null,placeholder:\"Enter style number\",isDisabled:isLoading,className:\"w-full text-sm\",onInputChange:input=>console.log('Style input changed:',input)})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:product?/*#__PURE__*/_jsxs(\"select\",{className:\"w-full p-1 border rounded\",value:order.colorName||'',onChange:e=>{const value=e.target.value;updateOrder(index,'colorName',value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Color\"}),product.colors.map((color,idx)=>/*#__PURE__*/_jsx(\"option\",{value:color,children:color},idx))]}):/*#__PURE__*/_jsx(\"select\",{className:\"w-full p-1 border rounded\",disabled:true,children:/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Color\"})})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:order.productTitle||''}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",className:\"w-16 p-1 border rounded\",value:order.quantities[size]||'',onChange:e=>{const value=e.target.value;const updatedOrders=[...orders];updatedOrders[index].quantities[size]=value;setOrders(updatedOrders);},disabled:!product||!availableSizes.includes(size)})},size)),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",className:\"w-16 p-1 border rounded\",value:order.otherQuantity||'',onChange:e=>{const value=e.target.value;updateOrder(index,'otherQuantity',value);}})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:lineQuantity}),/*#__PURE__*/_jsxs(\"td\",{className:\"p-2 text-center\",children:[\"$\",lineTotal]}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-red-500 text-white px-2 py-1 rounded\",onClick:()=>{const updatedOrders=[...orders];updatedOrders.splice(index,1);setOrders(updatedOrders);},children:\"Remove\"})})]},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white px-4 py-2 rounded\",onClick:()=>{setOrders([...orders,{styleNo:'',colorName:'',productTitle:'',quantities:{},otherQuantity:0,lineTotal:0}]);},children:\"Add Line\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-gray-100\",children:/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold\",children:[\"Order Total: $\",orders.reduce((total,order)=>{const productKey=`${order.styleNo}_${order.colorName}`;const product=productDatabase[productKey];return total+parseFloat(calculateLineTotal(order,product));},0).toFixed(2)]})})]})});}","map":{"version":3,"names":["React","useState","useEffect","AsyncSelect","db","collection","getDocs","query","limit","where","orderBy","jsx","_jsx","jsxs","_jsxs","EmbroideryCalculator","orders","setOrders","styleNo","colorName","productTitle","quantities","otherQuantity","lineTotal","errorMessage","setErrorMessage","isLoading","setIsLoading","productDatabase","setProductDatabase","MAIN_SIZES","loadStyleOptions","inputValue","searchTerm","toUpperCase","console","log","stylesRef","styleQuery","querySnapshot","size","styles","uniqueStyles","Set","forEach","doc","data","id","has","push","label","value","add","length","titleQuery","titleSnapshot","err","error","updateOrder","index","field","updatedOrders","fetchProductData","productData","order","docRef","docSnap","empty","docs","key","calculateLineTotal","product","total","basePrice","totalQuantity","Object","values","reduce","sum","qty","parseInt","price","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","toFixed","className","children","role","map","productKey","availableSizes","sizes","lineQuantity","cacheOptions","loadOptions","onChange","selectedOption","fetchProductTitle","placeholder","isDisabled","onInputChange","input","e","target","colors","color","idx","disabled","type","min","includes","onClick","splice","parseFloat"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, limit, where, orderBy } from 'firebase/firestore';\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      styleNo: '',\r\n      colorName: '',\r\n      productTitle: '',\r\n      quantities: {},\r\n      otherQuantity: 0,\r\n      lineTotal: 0,\r\n    },\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n\r\n  const MAIN_SIZES = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL'];\r\n\r\n  // Load style options for the AsyncSelect component\r\n  const loadStyleOptions = async (inputValue) => {\r\n    try {\r\n      const searchTerm = inputValue.toUpperCase();\r\n      console.log('Searching for styles with input:', searchTerm);\r\n\r\n      const stylesRef = collection(db, 'styles');\r\n      console.log('Styles collection reference:', stylesRef);\r\n\r\n      // Query based on document IDs (style_no)\r\n      const styleQuery = query(\r\n        stylesRef,\r\n        orderBy('__name__'),\r\n        where('__name__', '>=', searchTerm),\r\n        where('__name__', '<=', searchTerm + '\\uf8ff'),\r\n        limit(20)\r\n      );\r\n      console.log('Style query:', styleQuery);\r\n\r\n      const querySnapshot = await getDocs(styleQuery);\r\n      console.log('Query snapshot size:', querySnapshot.size);\r\n\r\n      const styles = [];\r\n      const uniqueStyles = new Set();\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        const styleNo = doc.id; // Using document ID as styleNo\r\n        console.log('Document ID:', styleNo, 'Data:', data);\r\n        if (styleNo && data.productTitle && !uniqueStyles.has(styleNo)) {\r\n          styles.push({ label: `${styleNo} - ${data.productTitle}`, value: styleNo });\r\n          uniqueStyles.add(styleNo);\r\n        }\r\n      });\r\n\r\n      console.log('Styles found by styleNo (document ID):', styles);\r\n\r\n      // If no results, try searching by productTitle\r\n      if (styles.length === 0) {\r\n        console.log('No styles found by styleNo, searching by productTitle');\r\n        const titleQuery = query(\r\n          stylesRef,\r\n          orderBy('productTitle'),\r\n          where('productTitle', '>=', searchTerm),\r\n          where('productTitle', '<=', searchTerm + '\\uf8ff'),\r\n          limit(20)\r\n        );\r\n        console.log('Title query:', titleQuery);\r\n\r\n        const titleSnapshot = await getDocs(titleQuery);\r\n        console.log('Title query snapshot size:', titleSnapshot.size);\r\n\r\n        titleSnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          const styleNo = doc.id; // Using document ID as styleNo\r\n          console.log('Document ID:', styleNo, 'Data:', data);\r\n          if (styleNo && data.productTitle && !uniqueStyles.has(styleNo)) {\r\n            styles.push({ label: `${styleNo} - ${data.productTitle}`, value: styleNo });\r\n            uniqueStyles.add(styleNo);\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Final returned styles:', styles);\r\n      return styles;\r\n    } catch (err) {\r\n      console.error('Error loading styles:', err);\r\n      setErrorMessage('Error loading styles. Please try again.');\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Function to update order fields\r\n  const updateOrder = (index, field, value) => {\r\n    const updatedOrders = [...orders];\r\n    updatedOrders[index][field] = value;\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  // Function to fetch product data when styleNo and colorName are selected\r\n  useEffect(() => {\r\n    const fetchProductData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const productData = {};\r\n\r\n        for (const order of orders) {\r\n          if (order.styleNo && order.colorName) {\r\n            const docRef = collection(db, 'styles');\r\n            const docSnap = await getDocs(query(docRef, where('__name__', '==', order.styleNo)));\r\n            if (!docSnap.empty) {\r\n              const doc = docSnap.docs[0];\r\n              const data = doc.data();\r\n              const key = `${order.styleNo}_${order.colorName}`;\r\n              productData[key] = data;\r\n            }\r\n          }\r\n        }\r\n\r\n        setProductDatabase(productData);\r\n      } catch (error) {\r\n        console.error('Error fetching product data:', error);\r\n        setErrorMessage('Failed to fetch product data. Please try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProductData();\r\n  }, [orders]);\r\n\r\n  // Function to calculate line total\r\n  const calculateLineTotal = (order, product) => {\r\n    if (!product) return 0;\r\n    \r\n    let total = 0;\r\n    const basePrice = product.basePrice || 0;\r\n    \r\n    // Calculate total quantity\r\n    const totalQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (parseInt(qty) || 0), 0) + (parseInt(order.otherQuantity) || 0);\r\n    \r\n    // Apply quantity-based pricing\r\n    let price = basePrice;\r\n    if (totalQuantity >= 72) price = product.Price_72_plus || basePrice;\r\n    else if (totalQuantity >= 48) price = product.Price_48_71 || basePrice;\r\n    else if (totalQuantity >= 24) price = product.Price_24_47 || basePrice;\r\n    else if (totalQuantity >= 12) price = product.Price_12_23 || basePrice;\r\n    else if (totalQuantity >= 6) price = product.Price_6_11 || basePrice;\r\n    \r\n    // Calculate total\r\n    total = totalQuantity * price;\r\n    \r\n    return total.toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-4\">\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        <h1 className=\"text-2xl font-bold text-green-600 p-4 bg-green-100\">Embroidery Order Form</h1>\r\n        {errorMessage && (\r\n          <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\" role=\"alert\">\r\n            <p className=\"font-bold\">Error</p>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        {isLoading && <div className=\"p-4 text-center\">Loading...</div>}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-sm\">\r\n            <thead className=\"bg-green-500 text-white\">\r\n              <tr>\r\n                <th className=\"p-2 text-left\">Style No</th>\r\n                <th className=\"p-2 text-left\">Color</th>\r\n                <th className=\"p-2 text-left\">Product Title</th>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <th key={size} className=\"p-2 text-center\">{size}</th>\r\n                ))}\r\n                <th className=\"p-2 text-center\">Other</th>\r\n                <th className=\"p-2 text-center\">Qty</th>\r\n                <th className=\"p-2 text-center\">Total</th>\r\n                <th className=\"p-2 text-center\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => {\r\n                const productKey = `${order.styleNo}_${order.colorName}`;\r\n                const product = productDatabase[productKey];\r\n                const availableSizes = product ? product.sizes : [];\r\n\r\n                const lineQuantity = Object.values(order.quantities).reduce(\r\n                  (sum, qty) => sum + (parseInt(qty) || 0),\r\n                  0\r\n                ) + (parseInt(order.otherQuantity) || 0);\r\n\r\n                const lineTotal = calculateLineTotal(order, product);\r\n\r\n                return (\r\n                  <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\r\n                    <td className=\"p-2\">\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        loadOptions={loadStyleOptions}\r\n                        onChange={(selectedOption) => {\r\n                          const value = selectedOption ? selectedOption.value : '';\r\n                          console.log('Selected style:', value);\r\n                          updateOrder(index, 'styleNo', value);\r\n\r\n                          // Fetch product title when styleNo is selected\r\n                          const fetchProductTitle = async () => {\r\n                            try {\r\n                              const docRef = collection(db, 'styles');\r\n                              const docSnap = await getDocs(query(docRef, where('__name__', '==', value)));\r\n                              if (!docSnap.empty) {\r\n                                const doc = docSnap.docs[0];\r\n                                const data = doc.data();\r\n                                updateOrder(index, 'productTitle', data.productTitle || '');\r\n                              }\r\n                            } catch (error) {\r\n                              console.error('Error fetching product title:', error);\r\n                              setErrorMessage('Error fetching product title. Please try again.');\r\n                            }\r\n                          };\r\n                          fetchProductTitle();\r\n                        }}\r\n                        value={\r\n                          order.styleNo\r\n                            ? { value: order.styleNo, label: order.styleNo }\r\n                            : null\r\n                        }\r\n                        placeholder=\"Enter style number\"\r\n                        isDisabled={isLoading}\r\n                        className=\"w-full text-sm\"\r\n                        onInputChange={(input) => console.log('Style input changed:', input)}\r\n                      />\r\n                    </td>\r\n                    {/* Color selection */}\r\n                    <td className=\"p-2\">\r\n                      {product ? (\r\n                        <select\r\n                          className=\"w-full p-1 border rounded\"\r\n                          value={order.colorName || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            updateOrder(index, 'colorName', value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Color</option>\r\n                          {product.colors.map((color, idx) => (\r\n                            <option key={idx} value={color}>\r\n                              {color}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        <select className=\"w-full p-1 border rounded\" disabled>\r\n                          <option value=\"\">Select Color</option>\r\n                        </select>\r\n                      )}\r\n                    </td>\r\n                    {/* Product Title */}\r\n                    <td className=\"p-2\">\r\n                      {order.productTitle || ''}\r\n                    </td>\r\n                    {/* Sizes */}\r\n                    {MAIN_SIZES.map((size) => (\r\n                      <td key={size} className=\"p-2 text-center\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-16 p-1 border rounded\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            const updatedOrders = [...orders];\r\n                            updatedOrders[index].quantities[size] = value;\r\n                            setOrders(updatedOrders);\r\n                          }}\r\n                          disabled={!product || !availableSizes.includes(size)}\r\n                        />\r\n                      </td>\r\n                    ))}\r\n                    {/* Other quantity */}\r\n                    <td className=\"p-2 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        className=\"w-16 p-1 border rounded\"\r\n                        value={order.otherQuantity || ''}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          updateOrder(index, 'otherQuantity', value);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    {/* Quantity total */}\r\n                    <td className=\"p-2 text-center\">\r\n                      {lineQuantity}\r\n                    </td>\r\n                    {/* Line total */}\r\n                    <td className=\"p-2 text-center\">\r\n                      ${lineTotal}\r\n                    </td>\r\n                    {/* Actions */}\r\n                    <td className=\"p-2 text-center\">\r\n                      <button\r\n                        className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                        onClick={() => {\r\n                          const updatedOrders = [...orders];\r\n                          updatedOrders.splice(index, 1);\r\n                          setOrders(updatedOrders);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* Add Line Button */}\r\n        <div className=\"p-4\">\r\n          <button\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n            onClick={() => {\r\n              setOrders([...orders, {\r\n                styleNo: '',\r\n                colorName: '',\r\n                productTitle: '',\r\n                quantities: {},\r\n                otherQuantity: 0,\r\n                lineTotal: 0,\r\n              }]);\r\n            }}\r\n          >\r\n            Add Line\r\n          </button>\r\n        </div>\r\n        {/* Order Total */}\r\n        <div className=\"p-4 bg-gray-100\">\r\n          <h2 className=\"text-xl font-bold\">Order Total: $\r\n            {orders.reduce((total, order) => {\r\n              const productKey = `${order.styleNo}_${order.colorName}`;\r\n              const product = productDatabase[productKey];\r\n              return total + parseFloat(calculateLineTotal(order, product));\r\n            }, 0).toFixed(2)}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}