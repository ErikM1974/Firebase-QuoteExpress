{"ast":null,"code":"import React,{useState,useCallback,useMemo,useEffect}from'react';import AsyncSelect from'react-select/async';import{db}from'../firebase';import{collection,getDocs,query,limit,startAfter,orderBy,where}from'firebase/firestore';import'./EmbroideryCalculator.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MAIN_SIZES=['S','M','L','XL','2XL','3XL'];const LARGE_SIZES=['2XL','3XL','4XL'];const LoadingSpinner=()=>/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})});const getPriceForQuantity=(product,totalQuantity)=>{console.log('Calculating price for quantity:',totalQuantity);if(totalQuantity>=72)return parseFloat(product.Price_72_plus)||0;if(totalQuantity>=48)return parseFloat(product.Price_48_71)||0;if(totalQuantity>=24)return parseFloat(product.Price_24_47)||0;if(totalQuantity>=12)return parseFloat(product.Price_12_23)||0;if(totalQuantity>=6)return parseFloat(product.Price_6_11)||0;return parseFloat(product.Price_2_5)||0;};export default function EmbroideryCalculator(){console.log('EmbroideryCalculator component rendered');const[productDatabase,setProductDatabase]=useState({});const[orders,setOrders]=useState([{STYLE_No:'',COLOR_NAME:'',quantities:{},error:null}]);const[styles,setStyles]=useState([]);const[colors,setColors]=useState({});const[errorMessage,setErrorMessage]=useState(null);const[isLoading,setIsLoading]=useState(false);const fetchAllStyles=useCallback(async()=>{console.log('Fetching all styles...');setIsLoading(true);setErrorMessage(null);let retries=3;const pageSize=50;let lastDoc=null;const fetchPage=async()=>{console.log('Creating Firestore query...');let stylesQuery=query(collection(db,'embroidery_products'),orderBy('STYLE_No'),limit(pageSize));if(lastDoc){stylesQuery=query(collection(db,'embroidery_products'),orderBy('STYLE_No'),startAfter(lastDoc),limit(pageSize));}console.log('Executing query...');const queryStartTime=Date.now();try{const querySnapshot=await getDocs(stylesQuery);const queryEndTime=Date.now();console.log(`Query executed in ${queryEndTime-queryStartTime}ms. Number of documents:`,querySnapshot.size);return querySnapshot;}catch(error){console.error('Error executing query:',error);throw error;}};while(retries>0){try{const stylesData={};const styleSet=new Set();let hasMoreDocs=true;while(hasMoreDocs){const querySnapshot=await fetchPage();querySnapshot.forEach(doc=>{const data=doc.data();console.log('Document data:',data);if(data.STYLE_No){styleSet.add(data.STYLE_No);if(!stylesData[data.STYLE_No]){stylesData[data.STYLE_No]=data;}}});if(querySnapshot.size<pageSize){hasMoreDocs=false;}else{lastDoc=querySnapshot.docs[querySnapshot.docs.length-1];}}console.log('Unique styles found:',styleSet.size);setStyles(Array.from(styleSet));setProductDatabase(stylesData);console.log('Fetched styles:',stylesData);break;// Exit the loop if successful\n}catch(err){console.error('Error fetching styles:',err);retries--;if(retries===0){setErrorMessage(`Failed to load styles. Error: ${err.message}`);}else{console.log(`Retrying... ${retries} attempts left`);await new Promise(resolve=>setTimeout(resolve,2000));// Wait 2 seconds before retrying\n}}}setIsLoading(false);console.log('Finished fetching styles.');},[]);useEffect(()=>{console.log('useEffect triggered, calling fetchAllStyles');fetchAllStyles();},[fetchAllStyles]);const fetchColors=useCallback(async styleNo=>{if(!styleNo)return;setIsLoading(true);try{console.log(`Fetching colors for style: ${styleNo}`);const colorsQuery=query(collection(db,'embroidery_products'),where('STYLE_No','==',styleNo),orderBy('COLOR_NAME'));const querySnapshot=await getDocs(colorsQuery);const colorSet=new Set();const productDetails={};querySnapshot.forEach(doc=>{const item=doc.data();if(item.COLOR_NAME)colorSet.add(item.COLOR_NAME);productDetails[item.COLOR_NAME]=item;});setColors(prevColors=>({...prevColors,[styleNo]:Array.from(colorSet)}));setProductDatabase(prevDatabase=>({...prevDatabase,[styleNo]:{...prevDatabase[styleNo],colors:productDetails}}));console.log('Fetched colors for style:',styleNo,Array.from(colorSet));}catch(err){console.error('Error fetching colors:',err);setErrorMessage('Failed to load color options. Please try again later.');}finally{setIsLoading(false);}},[]);const updateOrder=useCallback((index,field,value)=>{console.log(`Updating order ${index}, field: ${field}, value:`,value);setOrders(prevOrders=>{const newOrders=[...prevOrders];newOrders[index]={...newOrders[index],[field]:value,error:null};if(field==='STYLE_No'){newOrders[index].COLOR_NAME='';newOrders[index].quantities={};if(value&&!colors[value]){fetchColors(value);}}else if(field==='COLOR_NAME'){newOrders[index].quantities={};}console.log('Updated orders:',newOrders);return newOrders;});},[colors,fetchColors]);const calculateOrderTotals=useCallback(()=>{console.log('Calculating order totals...');const totalQuantity=orders.reduce((acc,order)=>{return acc+Object.values(order.quantities).reduce((sum,qty)=>sum+(qty||0),0);},0);const totals=orders.reduce((acc,order)=>{var _productDatabase$key,_productDatabase$key$;const key=order.STYLE_No;const product=(_productDatabase$key=productDatabase[key])===null||_productDatabase$key===void 0?void 0:(_productDatabase$key$=_productDatabase$key.colors)===null||_productDatabase$key$===void 0?void 0:_productDatabase$key$[order.COLOR_NAME];if(!product)return acc;const basePrice=getPriceForQuantity(product,totalQuantity);const orderPrice=Object.entries(order.quantities).reduce((sum,_ref)=>{let[size,qty]=_ref;if(!qty)return sum;const surcharge=LARGE_SIZES.includes(size)?parseFloat(product.Surcharge)||0:0;return sum+(basePrice+surcharge)*qty;},0);console.log(`Order ${order.STYLE_No}, color ${order.COLOR_NAME}, quantity ${totalQuantity}, price ${orderPrice}`);return{quantity:acc.quantity+totalQuantity,price:acc.price+orderPrice};},{quantity:0,price:0});console.log('Total quantity:',totals.quantity,'Total price:',totals.price);return totals;},[orders,productDatabase]);const totals=useMemo(()=>calculateOrderTotals(),[calculateOrderTotals]);return/*#__PURE__*/_jsxs(\"div\",{className:\"embroidery-calculator\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Embroidery Order Form\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Error: \"}),/*#__PURE__*/_jsx(\"span\",{children:errorMessage})]}),isLoading&&/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Style No\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Color Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Product Title\"}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"th\",{children:size},size)),/*#__PURE__*/_jsx(\"th\",{children:\"Other Sizes\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Line Qty\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Row Total\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map((order,index)=>{var _productDatabase$orde,_productDatabase$orde2,_colors$order$STYLE_N;const product=(_productDatabase$orde=productDatabase[order.STYLE_No])===null||_productDatabase$orde===void 0?void 0:(_productDatabase$orde2=_productDatabase$orde.colors)===null||_productDatabase$orde2===void 0?void 0:_productDatabase$orde2[order.COLOR_NAME];const availableSizes=product?Object.keys(product).filter(size=>!MAIN_SIZES.includes(size)).sort((a,b)=>{const sizeOrder=['XS','S','M','L','XL','2XL','3XL','4XL','5XL','6XL'];return sizeOrder.indexOf(a)-sizeOrder.indexOf(b);}):[];const lineQuantity=Object.values(order.quantities).reduce((sum,qty)=>sum+(qty||0),0);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(AsyncSelect,{cacheOptions:true,loadOptions:async inputValue=>{console.log('Loading styles with input:',inputValue);const filteredStyles=styles.filter(style=>style.toLowerCase().includes(inputValue.toLowerCase()));return filteredStyles.map(style=>({label:style,value:style}));},defaultOptions:styles.map(style=>({label:style,value:style})),onChange:selectedOption=>{const value=selectedOption?selectedOption.value:'';updateOrder(index,'STYLE_No',value);},value:order.STYLE_No?{value:order.STYLE_No,label:order.STYLE_No}:null,placeholder:\"Enter or select style\",isDisabled:isLoading})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:order.COLOR_NAME,onChange:e=>updateOrder(index,'COLOR_NAME',e.target.value),disabled:!order.STYLE_No||isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Color\"}),(_colors$order$STYLE_N=colors[order.STYLE_No])===null||_colors$order$STYLE_N===void 0?void 0:_colors$order$STYLE_N.map(color=>/*#__PURE__*/_jsx(\"option\",{value:color,children:color},color))]})}),/*#__PURE__*/_jsx(\"td\",{children:(product===null||product===void 0?void 0:product.PRODUCT_TITLE)||''}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"td\",{className:LARGE_SIZES.includes(size)?'highlight-large-size':'',children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:order.quantities[size]||'',onChange:e=>updateOrder(index,'quantities',{...order.quantities,[size]:parseInt(e.target.value)||0}),min:\"0\",disabled:isLoading}),/*#__PURE__*/_jsx(\"div\",{className:\"price-info\",children:product?`$${(getPriceForQuantity(product,totals.quantity)+(LARGE_SIZES.includes(size)?parseFloat(product.Surcharge)||0:0)).toFixed(2)}`:''})]})},size)),/*#__PURE__*/_jsx(\"td\",{children:availableSizes.map(size=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[size,\": \"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:order.quantities[size]||'',onChange:e=>updateOrder(index,'quantities',{...order.quantities,[size]:parseInt(e.target.value)||0}),min:\"0\",disabled:isLoading})]},size))}),/*#__PURE__*/_jsx(\"td\",{children:lineQuantity}),/*#__PURE__*/_jsx(\"td\",{children:product?`$${Object.entries(order.quantities).reduce((sum,_ref2)=>{let[size,qty]=_ref2;const price=getPriceForQuantity(product,totals.quantity);const surcharge=LARGE_SIZES.includes(size)?parseFloat(product.Surcharge)||0:0;return sum+(price+surcharge)*(qty||0);},0).toFixed(2)}`:''}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setOrders(prevOrders=>prevOrders.filter((_,i)=>i!==index));},children:\"Remove\"})})]},index);})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setOrders(prevOrders=>[...prevOrders,{STYLE_No:'',COLOR_NAME:'',quantities:{},error:null}]);},children:\"Add Order\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"order-summary\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Quantity: \",totals.quantity]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total Price: $\",totals.price.toFixed(2)]})]})]});}","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","db","collection","getDocs","query","limit","startAfter","orderBy","where","jsx","_jsx","jsxs","_jsxs","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","getPriceForQuantity","product","totalQuantity","console","log","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","styles","setStyles","colors","setColors","errorMessage","setErrorMessage","isLoading","setIsLoading","fetchAllStyles","retries","pageSize","lastDoc","fetchPage","stylesQuery","queryStartTime","Date","now","querySnapshot","queryEndTime","size","stylesData","styleSet","Set","hasMoreDocs","forEach","doc","data","add","docs","length","Array","from","err","message","Promise","resolve","setTimeout","fetchColors","styleNo","colorsQuery","colorSet","productDetails","item","prevColors","prevDatabase","updateOrder","index","field","value","prevOrders","newOrders","calculateOrderTotals","reduce","acc","order","Object","values","sum","qty","totals","_productDatabase$key","_productDatabase$key$","key","basePrice","orderPrice","entries","_ref","surcharge","includes","Surcharge","quantity","price","role","map","_productDatabase$orde","_productDatabase$orde2","_colors$order$STYLE_N","availableSizes","keys","filter","sort","a","b","sizeOrder","indexOf","lineQuantity","cacheOptions","loadOptions","inputValue","filteredStyles","style","toLowerCase","label","defaultOptions","onChange","selectedOption","placeholder","isDisabled","e","target","disabled","color","PRODUCT_TITLE","type","parseInt","min","toFixed","_ref2","onClick","_","i"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, limit, startAfter, orderBy, where } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  console.log('Calculating price for quantity:', totalQuantity);\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  console.log('EmbroideryCalculator component rendered');\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [styles, setStyles] = useState([]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchAllStyles = useCallback(async () => {\r\n    console.log('Fetching all styles...');\r\n    setIsLoading(true);\r\n    setErrorMessage(null);\r\n    let retries = 3;\r\n    const pageSize = 50;\r\n    let lastDoc = null;\r\n\r\n    const fetchPage = async () => {\r\n      console.log('Creating Firestore query...');\r\n      let stylesQuery = query(\r\n        collection(db, 'embroidery_products'),\r\n        orderBy('STYLE_No'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      if (lastDoc) {\r\n        stylesQuery = query(\r\n          collection(db, 'embroidery_products'),\r\n          orderBy('STYLE_No'),\r\n          startAfter(lastDoc),\r\n          limit(pageSize)\r\n        );\r\n      }\r\n\r\n      console.log('Executing query...');\r\n      const queryStartTime = Date.now();\r\n      try {\r\n        const querySnapshot = await getDocs(stylesQuery);\r\n        const queryEndTime = Date.now();\r\n        console.log(`Query executed in ${queryEndTime - queryStartTime}ms. Number of documents:`, querySnapshot.size);\r\n        return querySnapshot;\r\n      } catch (error) {\r\n        console.error('Error executing query:', error);\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    while (retries > 0) {\r\n      try {\r\n        const stylesData = {};\r\n        const styleSet = new Set();\r\n        let hasMoreDocs = true;\r\n\r\n        while (hasMoreDocs) {\r\n          const querySnapshot = await fetchPage();\r\n          \r\n          querySnapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            console.log('Document data:', data);\r\n            if (data.STYLE_No) {\r\n              styleSet.add(data.STYLE_No);\r\n              if (!stylesData[data.STYLE_No]) {\r\n                stylesData[data.STYLE_No] = data;\r\n              }\r\n            }\r\n          });\r\n\r\n          if (querySnapshot.size < pageSize) {\r\n            hasMoreDocs = false;\r\n          } else {\r\n            lastDoc = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n          }\r\n        }\r\n\r\n        console.log('Unique styles found:', styleSet.size);\r\n        setStyles(Array.from(styleSet));\r\n        setProductDatabase(stylesData);\r\n        console.log('Fetched styles:', stylesData);\r\n        break; // Exit the loop if successful\r\n      } catch (err) {\r\n        console.error('Error fetching styles:', err);\r\n        retries--;\r\n        if (retries === 0) {\r\n          setErrorMessage(`Failed to load styles. Error: ${err.message}`);\r\n        } else {\r\n          console.log(`Retrying... ${retries} attempts left`);\r\n          await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds before retrying\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n    console.log('Finished fetching styles.');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect triggered, calling fetchAllStyles');\r\n    fetchAllStyles();\r\n  }, [fetchAllStyles]);\r\n\r\n  const fetchColors = useCallback(async (styleNo) => {\r\n    if (!styleNo) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(`Fetching colors for style: ${styleNo}`);\r\n      const colorsQuery = query(\r\n        collection(db, 'embroidery_products'),\r\n        where('STYLE_No', '==', styleNo),\r\n        orderBy('COLOR_NAME')\r\n      );\r\n      const querySnapshot = await getDocs(colorsQuery);\r\n\r\n      const colorSet = new Set();\r\n      const productDetails = {};\r\n      querySnapshot.forEach((doc) => {\r\n        const item = doc.data();\r\n        if (item.COLOR_NAME) colorSet.add(item.COLOR_NAME);\r\n        productDetails[item.COLOR_NAME] = item;\r\n      });\r\n\r\n      setColors((prevColors) => ({\r\n        ...prevColors,\r\n        [styleNo]: Array.from(colorSet),\r\n      }));\r\n\r\n      setProductDatabase((prevDatabase) => ({\r\n        ...prevDatabase,\r\n        [styleNo]: {\r\n          ...prevDatabase[styleNo],\r\n          colors: productDetails,\r\n        },\r\n      }));\r\n\r\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\r\n    } catch (err) {\r\n      console.error('Error fetching colors:', err);\r\n      setErrorMessage('Failed to load color options. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      console.log(`Updating order ${index}, field: ${field}, value:`, value);\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n          if (value && !colors[value]) {\r\n            fetchColors(value);\r\n          }\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        console.log('Updated orders:', newOrders);\r\n        return newOrders;\r\n      });\r\n    },\r\n    [colors, fetchColors]\r\n  );\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    console.log('Calculating order totals...');\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    const totals = orders.reduce((acc, order) => {\r\n      const key = order.STYLE_No;\r\n      const product = productDatabase[key]?.colors?.[order.COLOR_NAME];\r\n      if (!product) return acc;\r\n\r\n      const basePrice = getPriceForQuantity(product, totalQuantity);\r\n\r\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n        if (!qty) return sum;\r\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n        return sum + (basePrice + surcharge) * qty;\r\n      }, 0);\r\n\r\n      console.log(`Order ${order.STYLE_No}, color ${order.COLOR_NAME}, quantity ${totalQuantity}, price ${orderPrice}`);\r\n      return {\r\n        quantity: acc.quantity + totalQuantity,\r\n        price: acc.price + orderPrice,\r\n      };\r\n    }, { quantity: 0, price: 0 });\r\n\r\n    console.log('Total quantity:', totals.quantity, 'Total price:', totals.price);\r\n    return totals;\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Style No</th>\r\n            <th>Color Name</th>\r\n            <th>Product Title</th>\r\n            {MAIN_SIZES.map((size) => (\r\n              <th key={size}>{size}</th>\r\n            ))}\r\n            <th>Other Sizes</th>\r\n            <th>Line Qty</th>\r\n            <th>Row Total</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order, index) => {\r\n            const product = productDatabase[order.STYLE_No]?.colors?.[order.COLOR_NAME];\r\n            const availableSizes = product ? Object.keys(product).filter((size) => !MAIN_SIZES.includes(size)).sort((a, b) => {\r\n              const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\r\n              return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\r\n            }) : [];\r\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <AsyncSelect\r\n                    cacheOptions\r\n                    loadOptions={async (inputValue) => {\r\n                      console.log('Loading styles with input:', inputValue);\r\n                      const filteredStyles = styles.filter((style) =>\r\n                        style.toLowerCase().includes(inputValue.toLowerCase())\r\n                      );\r\n                      return filteredStyles.map((style) => ({ label: style, value: style }));\r\n                    }}\r\n                    defaultOptions={styles.map((style) => ({ label: style, value: style }))}\r\n                    onChange={(selectedOption) => {\r\n                      const value = selectedOption ? selectedOption.value : '';\r\n                      updateOrder(index, 'STYLE_No', value);\r\n                    }}\r\n                    value={\r\n                      order.STYLE_No\r\n                        ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                        : null\r\n                    }\r\n                    placeholder=\"Enter or select style\"\r\n                    isDisabled={isLoading}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={order.COLOR_NAME}\r\n                    onChange={(e) => updateOrder(index, 'COLOR_NAME', e.target.value)}\r\n                    disabled={!order.STYLE_No || isLoading}\r\n                  >\r\n                    <option value=\"\">Select Color</option>\r\n                    {colors[order.STYLE_No]?.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>{product?.PRODUCT_TITLE || ''}</td>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <td key={size} className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}>\r\n                    <div>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) =>\r\n                          updateOrder(index, 'quantities', {\r\n                            ...order.quantities,\r\n                            [size]: parseInt(e.target.value) || 0,\r\n                          })\r\n                        }\r\n                        min=\"0\"\r\n                        disabled={isLoading}\r\n                      />\r\n                      <div className=\"price-info\">\r\n                        {product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  {availableSizes.map((size) => (\r\n                    <div key={size}>\r\n                      <span>{size}: </span>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) =>\r\n                          updateOrder(index, 'quantities', {\r\n                            ...order.quantities,\r\n                            [size]: parseInt(e.target.value) || 0,\r\n                          })\r\n                        }\r\n                        min=\"0\"\r\n                        disabled={isLoading}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n                <td>{lineQuantity}</td>\r\n                <td>\r\n                  {product\r\n                    ? `$${(\r\n                        Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n                          const price = getPriceForQuantity(product, totals.quantity);\r\n                          const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n                          return sum + (price + surcharge) * (qty || 0);\r\n                        }, 0)\r\n                      ).toFixed(2)}`\r\n                    : ''}\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => {\r\n                    setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                  }}>\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button\r\n        onClick={() => {\r\n          setOrders((prevOrders) => [\r\n            ...prevOrders,\r\n            { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null },\r\n          ]);\r\n        }}\r\n      >\r\n        Add Order\r\n      </button>\r\n      <div className=\"order-summary\">\r\n        <h2>Order Summary</h2>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}