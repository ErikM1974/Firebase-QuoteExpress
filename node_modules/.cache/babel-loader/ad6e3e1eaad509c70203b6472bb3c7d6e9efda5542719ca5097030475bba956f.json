{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { db } from '../firebase';\nimport { collection, getDocs, query, limit, startAfter, orderBy, where } from 'firebase/firestore';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst getPriceForQuantity = (product, totalQuantity) => {\n  console.log('Calculating price for quantity:', totalQuantity);\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\n  return parseFloat(product.Price_2_5) || 0;\n};\nexport default function EmbroideryCalculator() {\n  _s();\n  console.log('EmbroideryCalculator component rendered');\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [styles, setStyles] = useState([]);\n  const [colors, setColors] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchAllStyles = useCallback(async () => {\n    console.log('Fetching all styles...');\n    setIsLoading(true);\n    setErrorMessage(null);\n    let retries = 3;\n    const pageSize = 50;\n    let lastDoc = null;\n    const fetchPage = async () => {\n      console.log('Creating Firestore query...');\n      let stylesQuery = query(collection(db, 'embroidery_products'), orderBy('STYLE_No'), limit(pageSize));\n      if (lastDoc) {\n        stylesQuery = query(collection(db, 'embroidery_products'), orderBy('STYLE_No'), startAfter(lastDoc), limit(pageSize));\n      }\n      console.log('Executing query...');\n      const queryStartTime = Date.now();\n      try {\n        const querySnapshot = await getDocs(stylesQuery);\n        const queryEndTime = Date.now();\n        console.log(`Query executed in ${queryEndTime - queryStartTime}ms. Number of documents:`, querySnapshot.size);\n        return querySnapshot;\n      } catch (error) {\n        console.error('Error executing query:', error);\n        throw error;\n      }\n    };\n    while (retries > 0) {\n      try {\n        const stylesData = {};\n        const styleSet = new Set();\n        let hasMoreDocs = true;\n        while (hasMoreDocs) {\n          const querySnapshot = await fetchPage();\n          querySnapshot.forEach(doc => {\n            const data = doc.data();\n            console.log('Document data:', data);\n            if (data.STYLE_No) {\n              styleSet.add(data.STYLE_No);\n              if (!stylesData[data.STYLE_No]) {\n                stylesData[data.STYLE_No] = data;\n              }\n            }\n          });\n          if (querySnapshot.size < pageSize) {\n            hasMoreDocs = false;\n          } else {\n            lastDoc = querySnapshot.docs[querySnapshot.docs.length - 1];\n          }\n        }\n        console.log('Unique styles found:', styleSet.size);\n        setStyles(Array.from(styleSet));\n        setProductDatabase(stylesData);\n        console.log('Fetched styles:', stylesData);\n        break; // Exit the loop if successful\n      } catch (err) {\n        console.error('Error fetching styles:', err);\n        retries--;\n        if (retries === 0) {\n          setErrorMessage(`Failed to load styles. Error: ${err.message}`);\n        } else {\n          console.log(`Retrying... ${retries} attempts left`);\n          await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds before retrying\n        }\n      }\n    }\n    setIsLoading(false);\n    console.log('Finished fetching styles.');\n  }, []);\n  useEffect(() => {\n    console.log('useEffect triggered, calling fetchAllStyles');\n    fetchAllStyles();\n  }, [fetchAllStyles]);\n  const fetchColors = useCallback(async styleNo => {\n    if (!styleNo) return;\n    setIsLoading(true);\n    try {\n      console.log(`Fetching colors for style: ${styleNo}`);\n      const colorsQuery = query(collection(db, 'embroidery_products'), where('STYLE_No', '==', styleNo));\n      const querySnapshot = await getDocs(colorsQuery);\n      const colorSet = new Set();\n      const productDetails = {};\n      querySnapshot.forEach(doc => {\n        const item = doc.data();\n        if (item.COLOR_NAME) colorSet.add(item.COLOR_NAME);\n        productDetails[item.COLOR_NAME] = item;\n      });\n      setColors(prevColors => ({\n        ...prevColors,\n        [styleNo]: Array.from(colorSet)\n      }));\n      setProductDatabase(prevDatabase => ({\n        ...prevDatabase,\n        [styleNo]: {\n          ...prevDatabase[styleNo],\n          colors: productDetails\n        }\n      }));\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\n    } catch (err) {\n      console.error('Error fetching colors:', err);\n      setErrorMessage('Failed to load color options. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const updateOrder = useCallback((index, field, value) => {\n    console.log(`Updating order ${index}, field: ${field}, value:`, value);\n    setOrders(prevOrders => {\n      const newOrders = [...prevOrders];\n      newOrders[index] = {\n        ...newOrders[index],\n        [field]: value,\n        error: null\n      };\n      if (field === 'STYLE_No') {\n        newOrders[index].COLOR_NAME = '';\n        newOrders[index].quantities = {};\n        if (value && !colors[value]) {\n          fetchColors(value);\n        }\n      } else if (field === 'COLOR_NAME') {\n        newOrders[index].quantities = {};\n      }\n      console.log('Updated orders:', newOrders);\n      return newOrders;\n    });\n  }, [colors, fetchColors]);\n  const calculateOrderTotals = useCallback(() => {\n    console.log('Calculating order totals...');\n    const totalQuantity = orders.reduce((acc, order) => {\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n    }, 0);\n    const totals = orders.reduce((acc, order) => {\n      var _productDatabase$key, _productDatabase$key$;\n      const key = order.STYLE_No;\n      const product = (_productDatabase$key = productDatabase[key]) === null || _productDatabase$key === void 0 ? void 0 : (_productDatabase$key$ = _productDatabase$key.colors) === null || _productDatabase$key$ === void 0 ? void 0 : _productDatabase$key$[order.COLOR_NAME];\n      if (!product) return acc;\n      const basePrice = getPriceForQuantity(product, totalQuantity);\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n        if (!qty) return sum;\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n        return sum + (basePrice + surcharge) * qty;\n      }, 0);\n      console.log(`Order ${order.STYLE_No}, color ${order.COLOR_NAME}, quantity ${totalQuantity}, price ${orderPrice}`);\n      return {\n        quantity: acc.quantity + totalQuantity,\n        price: acc.price + orderPrice\n      };\n    }, {\n      quantity: 0,\n      price: 0\n    });\n    console.log('Total quantity:', totals.quantity, 'Total price:', totals.price);\n    return totals;\n  }, [orders, productDatabase]);\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '200px'\n              },\n              children: \"Style No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '200px'\n              },\n              children: \"Color Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: '300px'\n              },\n              children: \"Product Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Other Sizes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Line Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Row Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map((order, index) => {\n            var _productDatabase$orde, _productDatabase$orde2, _colors$order$STYLE_N2;\n            const product = (_productDatabase$orde = productDatabase[order.STYLE_No]) === null || _productDatabase$orde === void 0 ? void 0 : (_productDatabase$orde2 = _productDatabase$orde.colors) === null || _productDatabase$orde2 === void 0 ? void 0 : _productDatabase$orde2[order.COLOR_NAME];\n            const availableSizes = product ? Object.keys(product).filter(size => !MAIN_SIZES.includes(size)).sort((a, b) => {\n              const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\n              return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\n            }) : [];\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  cacheOptions: true,\n                  loadOptions: async inputValue => {\n                    console.log('Loading styles with input:', inputValue);\n                    const filteredStyles = styles.filter(style => style.toLowerCase().includes(inputValue.toLowerCase()));\n                    return filteredStyles.map(style => ({\n                      label: style,\n                      value: style\n                    }));\n                  },\n                  defaultOptions: styles.map(style => ({\n                    label: style,\n                    value: style\n                  })),\n                  onChange: selectedOption => {\n                    const value = selectedOption ? selectedOption.value : '';\n                    updateOrder(index, 'STYLE_No', value);\n                  },\n                  value: order.STYLE_No ? {\n                    value: order.STYLE_No,\n                    label: order.STYLE_No\n                  } : null,\n                  placeholder: \"Enter or select style\",\n                  isDisabled: isLoading,\n                  styles: {\n                    control: provided => ({\n                      ...provided,\n                      width: '200px'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  cacheOptions: true,\n                  loadOptions: async inputValue => {\n                    var _colors$order$STYLE_N;\n                    if (!order.STYLE_No) return [];\n                    const filteredColors = ((_colors$order$STYLE_N = colors[order.STYLE_No]) === null || _colors$order$STYLE_N === void 0 ? void 0 : _colors$order$STYLE_N.filter(color => color.toLowerCase().includes(inputValue.toLowerCase()))) || [];\n                    return filteredColors.map(color => ({\n                      label: color,\n                      value: color\n                    }));\n                  },\n                  defaultOptions: ((_colors$order$STYLE_N2 = colors[order.STYLE_No]) === null || _colors$order$STYLE_N2 === void 0 ? void 0 : _colors$order$STYLE_N2.map(color => ({\n                    label: color,\n                    value: color\n                  }))) || [],\n                  onChange: selectedOption => {\n                    const value = selectedOption ? selectedOption.value : '';\n                    updateOrder(index, 'COLOR_NAME', value);\n                  },\n                  value: order.COLOR_NAME ? {\n                    value: order.COLOR_NAME,\n                    label: order.COLOR_NAME\n                  } : null,\n                  placeholder: \"Select Color\",\n                  isDisabled: !order.STYLE_No || isLoading,\n                  styles: {\n                    control: provided => ({\n                      ...provided,\n                      width: '200px'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (product === null || product === void 0 ? void 0 : product.PRODUCT_TITLE) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: LARGE_SIZES.includes(size) ? 'highlight-large-size' : '',\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: order.quantities[size] || '',\n                    onChange: e => updateOrder(index, 'quantities', {\n                      ...order.quantities,\n                      [size]: parseInt(e.target.value) || 0\n                    }),\n                    min: \"0\",\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"price-info\",\n                    children: product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)\n              }, size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: availableSizes.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"other-sizes-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [size, \": \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: order.quantities[size] || '',\n                    onChange: e => updateOrder(index, 'quantities', {\n                      ...order.quantities,\n                      [size]: parseInt(e.target.value) || 0\n                    }),\n                    min: \"0\",\n                    disabled: isLoading\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this)]\n                }, size, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: lineQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: product ? `$${Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n                  const price = getPriceForQuantity(product, totals.quantity);\n                  const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n                  return sum + (price + surcharge) * (qty || 0);\n                }, 0).toFixed(2)}` : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setOrders(prevOrders => prevOrders.filter((_, i) => i !== index));\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setOrders(prevOrders => [...prevOrders, {\n          STYLE_No: '',\n          COLOR_NAME: '',\n          quantities: {},\n          error: null\n        }]);\n      },\n      children: \"Add Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"s1Fs13Gi52BFCZmVQZRSAndPyeY=\");\n_c2 = EmbroideryCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","db","collection","getDocs","query","limit","startAfter","orderBy","where","jsxDEV","_jsxDEV","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getPriceForQuantity","product","totalQuantity","console","log","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","styles","setStyles","colors","setColors","errorMessage","setErrorMessage","isLoading","setIsLoading","fetchAllStyles","retries","pageSize","lastDoc","fetchPage","stylesQuery","queryStartTime","Date","now","querySnapshot","queryEndTime","size","stylesData","styleSet","Set","hasMoreDocs","forEach","doc","data","add","docs","length","Array","from","err","message","Promise","resolve","setTimeout","fetchColors","styleNo","colorsQuery","colorSet","productDetails","item","prevColors","prevDatabase","updateOrder","index","field","value","prevOrders","newOrders","calculateOrderTotals","reduce","acc","order","Object","values","sum","qty","totals","_productDatabase$key","_productDatabase$key$","key","basePrice","orderPrice","entries","surcharge","includes","Surcharge","quantity","price","role","style","width","map","_productDatabase$orde","_productDatabase$orde2","_colors$order$STYLE_N2","availableSizes","keys","filter","sort","a","b","sizeOrder","indexOf","lineQuantity","cacheOptions","loadOptions","inputValue","filteredStyles","toLowerCase","label","defaultOptions","onChange","selectedOption","placeholder","isDisabled","control","provided","_colors$order$STYLE_N","filteredColors","color","PRODUCT_TITLE","type","e","parseInt","target","min","disabled","toFixed","onClick","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, limit, startAfter, orderBy, where } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  console.log('Calculating price for quantity:', totalQuantity);\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  console.log('EmbroideryCalculator component rendered');\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [styles, setStyles] = useState([]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchAllStyles = useCallback(async () => {\r\n    console.log('Fetching all styles...');\r\n    setIsLoading(true);\r\n    setErrorMessage(null);\r\n    let retries = 3;\r\n    const pageSize = 50;\r\n    let lastDoc = null;\r\n\r\n    const fetchPage = async () => {\r\n      console.log('Creating Firestore query...');\r\n      let stylesQuery = query(\r\n        collection(db, 'embroidery_products'),\r\n        orderBy('STYLE_No'),\r\n        limit(pageSize)\r\n      );\r\n\r\n      if (lastDoc) {\r\n        stylesQuery = query(\r\n          collection(db, 'embroidery_products'),\r\n          orderBy('STYLE_No'),\r\n          startAfter(lastDoc),\r\n          limit(pageSize)\r\n        );\r\n      }\r\n\r\n      console.log('Executing query...');\r\n      const queryStartTime = Date.now();\r\n      try {\r\n        const querySnapshot = await getDocs(stylesQuery);\r\n        const queryEndTime = Date.now();\r\n        console.log(`Query executed in ${queryEndTime - queryStartTime}ms. Number of documents:`, querySnapshot.size);\r\n        return querySnapshot;\r\n      } catch (error) {\r\n        console.error('Error executing query:', error);\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    while (retries > 0) {\r\n      try {\r\n        const stylesData = {};\r\n        const styleSet = new Set();\r\n        let hasMoreDocs = true;\r\n\r\n        while (hasMoreDocs) {\r\n          const querySnapshot = await fetchPage();\r\n          \r\n          querySnapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            console.log('Document data:', data);\r\n            if (data.STYLE_No) {\r\n              styleSet.add(data.STYLE_No);\r\n              if (!stylesData[data.STYLE_No]) {\r\n                stylesData[data.STYLE_No] = data;\r\n              }\r\n            }\r\n          });\r\n\r\n          if (querySnapshot.size < pageSize) {\r\n            hasMoreDocs = false;\r\n          } else {\r\n            lastDoc = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n          }\r\n        }\r\n\r\n        console.log('Unique styles found:', styleSet.size);\r\n        setStyles(Array.from(styleSet));\r\n        setProductDatabase(stylesData);\r\n        console.log('Fetched styles:', stylesData);\r\n        break; // Exit the loop if successful\r\n      } catch (err) {\r\n        console.error('Error fetching styles:', err);\r\n        retries--;\r\n        if (retries === 0) {\r\n          setErrorMessage(`Failed to load styles. Error: ${err.message}`);\r\n        } else {\r\n          console.log(`Retrying... ${retries} attempts left`);\r\n          await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds before retrying\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n    console.log('Finished fetching styles.');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect triggered, calling fetchAllStyles');\r\n    fetchAllStyles();\r\n  }, [fetchAllStyles]);\r\n\r\n  const fetchColors = useCallback(async (styleNo) => {\r\n    if (!styleNo) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(`Fetching colors for style: ${styleNo}`);\r\n      const colorsQuery = query(collection(db, 'embroidery_products'), where('STYLE_No', '==', styleNo));\r\n      const querySnapshot = await getDocs(colorsQuery);\r\n\r\n      const colorSet = new Set();\r\n      const productDetails = {};\r\n      querySnapshot.forEach((doc) => {\r\n        const item = doc.data();\r\n        if (item.COLOR_NAME) colorSet.add(item.COLOR_NAME);\r\n        productDetails[item.COLOR_NAME] = item;\r\n      });\r\n\r\n      setColors((prevColors) => ({\r\n        ...prevColors,\r\n        [styleNo]: Array.from(colorSet),\r\n      }));\r\n\r\n      setProductDatabase((prevDatabase) => ({\r\n        ...prevDatabase,\r\n        [styleNo]: {\r\n          ...prevDatabase[styleNo],\r\n          colors: productDetails,\r\n        },\r\n      }));\r\n\r\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\r\n    } catch (err) {\r\n      console.error('Error fetching colors:', err);\r\n      setErrorMessage('Failed to load color options. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      console.log(`Updating order ${index}, field: ${field}, value:`, value);\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n          if (value && !colors[value]) {\r\n            fetchColors(value);\r\n          }\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        console.log('Updated orders:', newOrders);\r\n        return newOrders;\r\n      });\r\n    },\r\n    [colors, fetchColors]\r\n  );\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    console.log('Calculating order totals...');\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    const totals = orders.reduce((acc, order) => {\r\n      const key = order.STYLE_No;\r\n      const product = productDatabase[key]?.colors?.[order.COLOR_NAME];\r\n      if (!product) return acc;\r\n\r\n      const basePrice = getPriceForQuantity(product, totalQuantity);\r\n\r\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n        if (!qty) return sum;\r\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n        return sum + (basePrice + surcharge) * qty;\r\n      }, 0);\r\n\r\n      console.log(`Order ${order.STYLE_No}, color ${order.COLOR_NAME}, quantity ${totalQuantity}, price ${orderPrice}`);\r\n      return {\r\n        quantity: acc.quantity + totalQuantity,\r\n        price: acc.price + orderPrice,\r\n      };\r\n    }, { quantity: 0, price: 0 });\r\n\r\n    console.log('Total quantity:', totals.quantity, 'Total price:', totals.price);\r\n    return totals;\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: '200px'}}>Style No</th>\r\n              <th style={{width: '200px'}}>Color Name</th>\r\n              <th style={{width: '300px'}}>Product Title</th>\r\n              {MAIN_SIZES.map((size) => (\r\n                <th key={size}>{size}</th>\r\n              ))}\r\n              <th>Other Sizes</th>\r\n              <th>Line Qty</th>\r\n              <th>Row Total</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order, index) => {\r\n              const product = productDatabase[order.STYLE_No]?.colors?.[order.COLOR_NAME];\r\n              const availableSizes = product ? Object.keys(product).filter((size) => !MAIN_SIZES.includes(size)).sort((a, b) => {\r\n                const sizeOrder = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'];\r\n                return sizeOrder.indexOf(a) - sizeOrder.indexOf(b);\r\n              }) : [];\r\n              const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n\r\n              return (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <AsyncSelect\r\n                      cacheOptions\r\n                      loadOptions={async (inputValue) => {\r\n                        console.log('Loading styles with input:', inputValue);\r\n                        const filteredStyles = styles.filter((style) =>\r\n                          style.toLowerCase().includes(inputValue.toLowerCase())\r\n                        );\r\n                        return filteredStyles.map((style) => ({ label: style, value: style }));\r\n                      }}\r\n                      defaultOptions={styles.map((style) => ({ label: style, value: style }))}\r\n                      onChange={(selectedOption) => {\r\n                        const value = selectedOption ? selectedOption.value : '';\r\n                        updateOrder(index, 'STYLE_No', value);\r\n                      }}\r\n                      value={\r\n                        order.STYLE_No\r\n                          ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                          : null\r\n                      }\r\n                      placeholder=\"Enter or select style\"\r\n                      isDisabled={isLoading}\r\n                      styles={{\r\n                        control: (provided) => ({\r\n                          ...provided,\r\n                          width: '200px',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <AsyncSelect\r\n                      cacheOptions\r\n                      loadOptions={async (inputValue) => {\r\n                        if (!order.STYLE_No) return [];\r\n                        const filteredColors = colors[order.STYLE_No]?.filter((color) =>\r\n                          color.toLowerCase().includes(inputValue.toLowerCase())\r\n                        ) || [];\r\n                        return filteredColors.map((color) => ({ label: color, value: color }));\r\n                      }}\r\n                      defaultOptions={colors[order.STYLE_No]?.map((color) => ({ label: color, value: color })) || []}\r\n                      onChange={(selectedOption) => {\r\n                        const value = selectedOption ? selectedOption.value : '';\r\n                        updateOrder(index, 'COLOR_NAME', value);\r\n                      }}\r\n                      value={\r\n                        order.COLOR_NAME\r\n                          ? { value: order.COLOR_NAME, label: order.COLOR_NAME }\r\n                          : null\r\n                      }\r\n                      placeholder=\"Select Color\"\r\n                      isDisabled={!order.STYLE_No || isLoading}\r\n                      styles={{\r\n                        control: (provided) => ({\r\n                          ...provided,\r\n                          width: '200px',\r\n                        }),\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>{product?.PRODUCT_TITLE || ''}</td>\r\n                  {MAIN_SIZES.map((size) => (\r\n                    <td key={size} className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}>\r\n                      <div>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                        <div className=\"price-info\">\r\n                          {product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  ))}\r\n                  <td>\r\n                    {availableSizes.map((size) => (\r\n                      <div key={size} className=\"other-sizes-input\">\r\n                        <span>{size}: </span>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) =>\r\n                            updateOrder(index, 'quantities', {\r\n                              ...order.quantities,\r\n                              [size]: parseInt(e.target.value) || 0,\r\n                            })\r\n                          }\r\n                          min=\"0\"\r\n                          disabled={isLoading}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </td>\r\n                  <td>{lineQuantity}</td>\r\n                  <td>\r\n                    {product\r\n                      ? `$${(\r\n                          Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n                            const price = getPriceForQuantity(product, totals.quantity);\r\n                            const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n                            return sum + (price + surcharge) * (qty || 0);\r\n                          }, 0)\r\n                        ).toFixed(2)}`\r\n                      : ''}\r\n                  </td>\r\n                  <td>\r\n                    <button onClick={() => {\r\n                      setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                    }}>\r\n                      Remove\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          setOrders((prevOrders) => [\r\n            ...prevOrders,\r\n            { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null },\r\n          ]);\r\n        }}\r\n      >\r\n        Add Order\r\n      </button>\r\n      <div className=\"order-summary\">\r\n        <h2>Order Summary</h2>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}