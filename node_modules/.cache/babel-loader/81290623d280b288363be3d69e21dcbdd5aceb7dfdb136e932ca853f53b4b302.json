{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { collection, addDoc, deleteDoc, getDocs } from \"firebase/firestore\";\nimport { getAuth, signInAnonymously, onAuthStateChanged } from \"firebase/auth\";\nimport { storage, db } from '../firebase';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const auth = getAuth();\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setIsAuthenticated(!!user);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setUploadStatus('Please select a file first.');\n      return;\n    }\n    try {\n      if (!isAuthenticated) {\n        setUploadStatus('Authenticating...');\n        const auth = getAuth();\n        await signInAnonymously(auth);\n      }\n      setUploadStatus('Uploading file...');\n      const storageRef = ref(storage, 'csvs/' + file.name);\n\n      // Upload file to Firebase Storage\n      const snapshot = await uploadBytes(storageRef, file);\n      console.log('CSV file uploaded successfully');\n\n      // Get download URL\n      const downloadURL = await getDownloadURL(snapshot.ref);\n\n      // Parse CSV file\n      const csvData = await new Promise((resolve, reject) => {\n        Papa.parse(file, {\n          complete: results => resolve(results.data),\n          error: error => reject(error),\n          header: true\n        });\n      });\n\n      // Clear existing data\n      const embroideryItemsRef = collection(db, \"embroidery_items\");\n      const existingDocs = await getDocs(embroideryItemsRef);\n      existingDocs.forEach(async doc => {\n        await deleteDoc(doc.ref);\n      });\n\n      // Store CSV data in Firestore\n      for (const row of csvData) {\n        await addDoc(collection(db, \"embroidery_items\"), row);\n      }\n\n      // Store file metadata\n      await addDoc(collection(db, \"csv_files\"), {\n        fileName: file.name,\n        uploadDate: new Date(),\n        downloadURL: downloadURL\n      });\n      setUploadStatus('File uploaded and processed successfully!');\n    } catch (error) {\n      console.error(\"Error uploading file: \", error);\n      setUploadStatus('Error uploading file. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload CSV File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".csv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !isAuthenticated,\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"6novWCJEbcNU3O1gy9QCFt3Dt2s=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","ref","uploadBytes","getDownloadURL","collection","addDoc","deleteDoc","getDocs","getAuth","signInAnonymously","onAuthStateChanged","storage","db","Papa","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","uploadStatus","setUploadStatus","isAuthenticated","setIsAuthenticated","auth","unsubscribe","user","handleFileChange","e","target","files","handleUpload","storageRef","name","snapshot","console","log","downloadURL","csvData","Promise","resolve","reject","parse","complete","results","data","error","header","embroideryItemsRef","existingDocs","forEach","doc","row","fileName","uploadDate","Date","children","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { collection, addDoc, deleteDoc, getDocs } from \"firebase/firestore\";\r\nimport { getAuth, signInAnonymously, onAuthStateChanged } from \"firebase/auth\";\r\nimport { storage, db } from '../firebase';\r\nimport Papa from 'papaparse';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setIsAuthenticated(!!user);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setUploadStatus('Please select a file first.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!isAuthenticated) {\r\n        setUploadStatus('Authenticating...');\r\n        const auth = getAuth();\r\n        await signInAnonymously(auth);\r\n      }\r\n\r\n      setUploadStatus('Uploading file...');\r\n      const storageRef = ref(storage, 'csvs/' + file.name);\r\n\r\n      // Upload file to Firebase Storage\r\n      const snapshot = await uploadBytes(storageRef, file);\r\n      console.log('CSV file uploaded successfully');\r\n\r\n      // Get download URL\r\n      const downloadURL = await getDownloadURL(snapshot.ref);\r\n\r\n      // Parse CSV file\r\n      const csvData = await new Promise((resolve, reject) => {\r\n        Papa.parse(file, {\r\n          complete: (results) => resolve(results.data),\r\n          error: (error) => reject(error),\r\n          header: true\r\n        });\r\n      });\r\n\r\n      // Clear existing data\r\n      const embroideryItemsRef = collection(db, \"embroidery_items\");\r\n      const existingDocs = await getDocs(embroideryItemsRef);\r\n      existingDocs.forEach(async (doc) => {\r\n        await deleteDoc(doc.ref);\r\n      });\r\n\r\n      // Store CSV data in Firestore\r\n      for (const row of csvData) {\r\n        await addDoc(collection(db, \"embroidery_items\"), row);\r\n      }\r\n\r\n      // Store file metadata\r\n      await addDoc(collection(db, \"csv_files\"), {\r\n        fileName: file.name,\r\n        uploadDate: new Date(),\r\n        downloadURL: downloadURL\r\n      });\r\n\r\n      setUploadStatus('File uploaded and processed successfully!');\r\n    } catch (error) {\r\n      console.error(\"Error uploading file: \", error);\r\n      setUploadStatus('Error uploading file. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload CSV File</h2>\r\n      <input type=\"file\" onChange={handleFileChange} accept=\".csv\" />\r\n      <button onClick={handleUpload} disabled={!isAuthenticated}>Upload CSV</button>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AACnE,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,oBAAoB;AAC3E,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,eAAe;AAC9E,SAASC,OAAO,EAAEC,EAAE,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMwB,IAAI,GAAGhB,OAAO,CAAC,CAAC;IACtB,MAAMiB,WAAW,GAAGf,kBAAkB,CAACc,IAAI,EAAGE,IAAI,IAAK;MACrDH,kBAAkB,CAAC,CAAC,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAC9BT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACb,IAAI,EAAE;MACTG,eAAe,CAAC,6BAA6B,CAAC;MAC9C;IACF;IAEA,IAAI;MACF,IAAI,CAACC,eAAe,EAAE;QACpBD,eAAe,CAAC,mBAAmB,CAAC;QACpC,MAAMG,IAAI,GAAGhB,OAAO,CAAC,CAAC;QACtB,MAAMC,iBAAiB,CAACe,IAAI,CAAC;MAC/B;MAEAH,eAAe,CAAC,mBAAmB,CAAC;MACpC,MAAMW,UAAU,GAAG/B,GAAG,CAACU,OAAO,EAAE,OAAO,GAAGO,IAAI,CAACe,IAAI,CAAC;;MAEpD;MACA,MAAMC,QAAQ,GAAG,MAAMhC,WAAW,CAAC8B,UAAU,EAAEd,IAAI,CAAC;MACpDiB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;;MAE7C;MACA,MAAMC,WAAW,GAAG,MAAMlC,cAAc,CAAC+B,QAAQ,CAACjC,GAAG,CAAC;;MAEtD;MACA,MAAMqC,OAAO,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACrD5B,IAAI,CAAC6B,KAAK,CAACxB,IAAI,EAAE;UACfyB,QAAQ,EAAGC,OAAO,IAAKJ,OAAO,CAACI,OAAO,CAACC,IAAI,CAAC;UAC5CC,KAAK,EAAGA,KAAK,IAAKL,MAAM,CAACK,KAAK,CAAC;UAC/BC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAMC,kBAAkB,GAAG5C,UAAU,CAACQ,EAAE,EAAE,kBAAkB,CAAC;MAC7D,MAAMqC,YAAY,GAAG,MAAM1C,OAAO,CAACyC,kBAAkB,CAAC;MACtDC,YAAY,CAACC,OAAO,CAAC,MAAOC,GAAG,IAAK;QAClC,MAAM7C,SAAS,CAAC6C,GAAG,CAAClD,GAAG,CAAC;MAC1B,CAAC,CAAC;;MAEF;MACA,KAAK,MAAMmD,GAAG,IAAId,OAAO,EAAE;QACzB,MAAMjC,MAAM,CAACD,UAAU,CAACQ,EAAE,EAAE,kBAAkB,CAAC,EAAEwC,GAAG,CAAC;MACvD;;MAEA;MACA,MAAM/C,MAAM,CAACD,UAAU,CAACQ,EAAE,EAAE,WAAW,CAAC,EAAE;QACxCyC,QAAQ,EAAEnC,IAAI,CAACe,IAAI;QACnBqB,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC;QACtBlB,WAAW,EAAEA;MACf,CAAC,CAAC;MAEFhB,eAAe,CAAC,2CAA2C,CAAC;IAC9D,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CzB,eAAe,CAAC,yCAAyC,CAAC;IAC5D;EACF,CAAC;EAED,oBACEN,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAI;IAAe;MAAAH,QAAA,EAAAI,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5C,OAAA;MAAO6C,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAElC,gBAAiB;MAACmC,MAAM,EAAC;IAAM;MAAAT,QAAA,EAAAI,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D5C,OAAA;MAAQgD,OAAO,EAAEhC,YAAa;MAACiC,QAAQ,EAAE,CAAC1C,eAAgB;MAAAkC,QAAA,EAAC;IAAU;MAAAH,QAAA,EAAAI,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7EvC,YAAY,iBAAIL,OAAA;MAAAyC,QAAA,EAAIpC;IAAY;MAAAiC,QAAA,EAAAI,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAN,QAAA,EAAAI,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC1C,EAAA,CApFID,UAAU;AAAAiD,EAAA,GAAVjD,UAAU;AAsFhB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}