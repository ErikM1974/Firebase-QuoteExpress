{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport axios from 'axios';\nimport AsyncSelect from 'react-select/async';\nimport debounce from 'lodash/debounce';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'https://c3eku948.caspio.com/rest/v2/views/Heroku/records';\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nexport default function EmbroideryCalculator() {\n  _s();\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [colors, setColors] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const abortController = React.useRef(null);\n  useEffect(() => {\n    console.log('Client ID:', process.env.REACT_APP_CASPIO_CLIENT_ID.substring(0, 5) + '...');\n    console.log('Client Secret:', process.env.REACT_APP_CASPIO_CLIENT_SECRET.substring(0, 5) + '...');\n  }, []);\n  const refreshToken = useCallback(async () => {\n    try {\n      console.log('Refreshing token...');\n      const response = await axios.post('https://c3eku948.caspio.com/oauth/token', new URLSearchParams({\n        grant_type: 'client_credentials',\n        client_id: process.env.REACT_APP_CASPIO_CLIENT_ID,\n        client_secret: process.env.REACT_APP_CASPIO_CLIENT_SECRET\n      }).toString(), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const newAccessToken = response.data.access_token;\n      const expiresIn = response.data.expires_in || 3600;\n      localStorage.setItem('caspioAccessToken', newAccessToken);\n      console.log('Token refreshed successfully');\n      return {\n        newAccessToken,\n        expiresIn\n      };\n    } catch (error) {\n      console.error('Failed to refresh access token:', error);\n      throw error;\n    }\n  }, []);\n  const getAccessToken = useCallback(async () => {\n    let accessToken = localStorage.getItem('caspioAccessToken');\n    if (!accessToken) {\n      console.log('No token found, refreshing...');\n      const {\n        newAccessToken\n      } = await refreshToken();\n      accessToken = newAccessToken;\n    }\n    return accessToken;\n  }, [refreshToken]);\n  const fetchProductDetails = useCallback(async styleNo => {\n    try {\n      var _response$data, _response$data$Result;\n      console.log(`Fetching product details for style: ${styleNo}`);\n      const accessToken = await getAccessToken();\n      const response = await axios.get(`${API_BASE_URL}?q={\"STYLE_No\":\"${styleNo}\"}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log('Product details response:', response.data);\n      if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$Result = _response$data.Result) === null || _response$data$Result === void 0 ? void 0 : _response$data$Result.length) > 0) {\n        const products = response.data.Result;\n        const colorMap = {};\n        const productData = {};\n        products.forEach(product => {\n          const key = `${product.STYLE_No}-${product.COLOR_NAME}`;\n          if (!productData[key]) {\n            productData[key] = {\n              PRODUCT_TITLE: product.PRODUCT_NAME || `${product.STYLE_No} - ${product.COLOR_NAME}`,\n              STYLE_No: product.STYLE_No,\n              COLOR_NAME: product.COLOR_NAME,\n              sizes: {},\n              prices: {\n                Price_2_5: product.Price_2_5,\n                Price_6_11: product.Price_6_11,\n                Price_12_23: product.Price_12_23,\n                Price_24_47: product.Price_24_47,\n                Price_48_71: product.Price_48_71,\n                Price_72_plus: product.Price_72\n              }\n            };\n          }\n          productData[key].sizes[product.SIZE] = {\n            ...product,\n            Surcharge: parseFloat(product.Surcharge) || 0,\n            SizeOrder: parseInt(product.SizeOrder) || 999\n          };\n          if (!colorMap[product.STYLE_No]) {\n            colorMap[product.STYLE_No] = new Set();\n          }\n          colorMap[product.STYLE_No].add(product.COLOR_NAME);\n        });\n        console.log('Processed product data:', productData);\n        console.log('Color map:', colorMap);\n        setProductDatabase(prevState => ({\n          ...prevState,\n          ...productData\n        }));\n        setColors(prevColors => ({\n          ...prevColors,\n          [styleNo]: Array.from(colorMap[styleNo] || []).sort()\n        }));\n      } else {\n        console.log('No product details found for the given style');\n        throw new Error('No product details returned from the server');\n      }\n    } catch (err) {\n      console.error('Failed to load product details:', err);\n      setErrorMessage('Failed to load product details. Please try again later.');\n    }\n  }, [getAccessToken]);\n  const loadStyles = useCallback(debounce(async inputValue => {\n    console.log('Loading styles for input:', inputValue);\n    if (abortController.current) {\n      abortController.current.abort();\n    }\n    abortController.current = new AbortController();\n    try {\n      var _response$data2, _response$data2$Resul;\n      const accessToken = await getAccessToken();\n      const query = `q={\"STYLE_No\":{\"ilike\":\"%${inputValue}%\"}}&q.select=STYLE_No&q.distinct=true&q.sort=STYLE_No&q.limit=100`;\n      console.log('API request URL:', `${API_BASE_URL}?${query}`);\n      const response = await axios.get(`${API_BASE_URL}?${query}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        },\n        signal: abortController.current.signal\n      });\n      console.log('API response:', response.data);\n      if (((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$Resul = _response$data2.Result) === null || _response$data2$Resul === void 0 ? void 0 : _response$data2$Resul.length) > 0) {\n        const styleOptions = response.data.Result.filter(item => item.STYLE_No && typeof item.STYLE_No === 'string').map(item => ({\n          value: item.STYLE_No,\n          label: item.STYLE_No\n        }));\n\n        // Remove duplicates based on value (STYLE_No)\n        const uniqueOptions = Array.from(new Map(styleOptions.map(item => [item.value, item])).values());\n        console.log('Unique style options:', uniqueOptions);\n        return uniqueOptions;\n      } else {\n        console.log('No styles found');\n        return [];\n      }\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Request canceled', err.message);\n      } else {\n        console.error('Error loading styles:', err);\n        setErrorMessage('Failed to load styles. Please try again.');\n      }\n      return [];\n    }\n  }, 300), [getAccessToken]);\n  const getAvailableSizes = useCallback(order => {\n    const key = `${order.STYLE_No}-${order.COLOR_NAME}`;\n    const product = productDatabase[key];\n    if (!product) return {\n      mainSizes: [],\n      otherSizes: []\n    };\n    const availableSizes = Object.keys(product.sizes);\n    const mainSizes = [];\n    const otherSizes = [];\n    availableSizes.forEach(size => {\n      if (MAIN_SIZES.includes(size)) {\n        mainSizes.push(size);\n      } else {\n        otherSizes.push(size);\n      }\n    });\n    return {\n      mainSizes,\n      otherSizes\n    };\n  }, [productDatabase]);\n  const calculateLineQuantity = useCallback(order => {\n    return Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n  }, []);\n  const updateOrder = useCallback((index, field, value) => {\n    console.log(`Updating order ${index}, field: ${field}, value:`, value);\n    setOrders(prevOrders => {\n      const newOrders = [...prevOrders];\n      newOrders[index] = {\n        ...newOrders[index],\n        [field]: value,\n        error: null\n      };\n      if (field === 'STYLE_No') {\n        newOrders[index].COLOR_NAME = '';\n        newOrders[index].quantities = {};\n        if (value && !colors[value]) {\n          // Fetch product details if not already in the database\n          fetchProductDetails(value);\n        }\n      } else if (field === 'COLOR_NAME') {\n        newOrders[index].quantities = {};\n      }\n      console.log('Updated orders:', newOrders);\n      return newOrders;\n    });\n  }, [colors, fetchProductDetails]);\n  const getPriceForQuantity = useCallback((product, totalQuantity) => {\n    if (!product) return 0;\n    const {\n      prices\n    } = product;\n    if (totalQuantity >= 72) return parseFloat(prices.Price_72_plus) || 0;\n    if (totalQuantity >= 48) return parseFloat(prices.Price_48_71) || 0;\n    if (totalQuantity >= 24) return parseFloat(prices.Price_24_47) || 0;\n    if (totalQuantity >= 12) return parseFloat(prices.Price_12_23) || 0;\n    if (totalQuantity >= 6) return parseFloat(prices.Price_6_11) || 0;\n    return parseFloat(prices.Price_2_5) || 0;\n  }, []);\n  const totals = useMemo(() => {\n    const totalQuantity = orders.reduce((acc, order) => {\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n    }, 0);\n    const totalPrice = orders.reduce((acc, order) => {\n      const key = `${order.STYLE_No}-${order.COLOR_NAME}`;\n      const product = productDatabase[key];\n      if (!product) return acc;\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n        if (!qty) return sum;\n        const sizeProduct = product.sizes[size];\n        const basePrice = getPriceForQuantity(product, totalQuantity);\n        const surcharge = sizeProduct && sizeProduct.Surcharge ? parseFloat(sizeProduct.Surcharge) || 0 : 0;\n        return sum + (basePrice + surcharge) * qty;\n      }, 0);\n      return acc + orderPrice;\n    }, 0);\n    console.log('Calculated totals:', {\n      quantity: totalQuantity,\n      price: totalPrice\n    });\n    return {\n      quantity: totalQuantity,\n      price: totalPrice\n    };\n  }, [orders, productDatabase, getPriceForQuantity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Style No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Other Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Line Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Row Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map((order, index) => {\n          var _colors$order$STYLE_N;\n          const {\n            mainSizes,\n            otherSizes\n          } = getAvailableSizes(order);\n          const totalQuantity = totals.quantity;\n          const key = `${order.STYLE_No}-${order.COLOR_NAME}`;\n          const product = productDatabase[key];\n          const lineQuantity = calculateLineQuantity(order);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                cacheOptions: true,\n                loadOptions: loadStyles,\n                defaultOptions: true,\n                onChange: selectedOption => {\n                  const value = selectedOption ? selectedOption.value : '';\n                  updateOrder(index, 'STYLE_No', value);\n                },\n                value: order.STYLE_No ? {\n                  value: order.STYLE_No,\n                  label: order.STYLE_No\n                } : null,\n                placeholder: \"Enter or select style\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: order.COLOR_NAME,\n                onChange: e => updateOrder(index, 'COLOR_NAME', e.target.value),\n                disabled: !order.STYLE_No,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this), (_colors$order$STYLE_N = colors[order.STYLE_No]) === null || _colors$order$STYLE_N === void 0 ? void 0 : _colors$order$STYLE_N.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: color,\n                  children: color\n                }, color, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (product === null || product === void 0 ? void 0 : product.PRODUCT_TITLE) || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: order.quantities[size] || '',\n                onChange: e => updateOrder(index, 'quantities', {\n                  ...order.quantities,\n                  [size]: e.target.value\n                }),\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: otherSizes.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [size, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: e.target.value\n                  }),\n                  min: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)]\n              }, size, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: lineQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", (calculateLineQuantity(order) * (product ? getPriceForQuantity(product, totalQuantity) : 0)).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setOrders(orders.filter((_, i) => i !== index)),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOrders([...orders, {\n        STYLE_No: '',\n        COLOR_NAME: '',\n        quantities: {},\n        error: null\n      }]),\n      children: \"Add Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Submit order:', orders),\n      children: \"Submit Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"e00hRwk2oKGf+AILmHb8Ufzx7M0=\");\n_c = EmbroideryCalculator;\nvar _c;\n$RefreshReg$(_c, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","axios","AsyncSelect","debounce","jsxDEV","_jsxDEV","API_BASE_URL","MAIN_SIZES","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","colors","setColors","errorMessage","setErrorMessage","abortController","useRef","console","log","process","env","REACT_APP_CASPIO_CLIENT_ID","substring","REACT_APP_CASPIO_CLIENT_SECRET","refreshToken","response","post","URLSearchParams","grant_type","client_id","client_secret","toString","headers","newAccessToken","data","access_token","expiresIn","expires_in","localStorage","setItem","getAccessToken","accessToken","getItem","fetchProductDetails","styleNo","_response$data","_response$data$Result","get","Authorization","Result","length","products","colorMap","productData","forEach","product","key","PRODUCT_TITLE","PRODUCT_NAME","sizes","prices","Price_2_5","Price_6_11","Price_12_23","Price_24_47","Price_48_71","Price_72_plus","Price_72","SIZE","Surcharge","parseFloat","SizeOrder","parseInt","Set","add","prevState","prevColors","Array","from","sort","Error","err","loadStyles","inputValue","current","abort","AbortController","_response$data2","_response$data2$Resul","query","signal","styleOptions","filter","item","map","value","label","uniqueOptions","Map","values","isCancel","message","getAvailableSizes","order","mainSizes","otherSizes","availableSizes","Object","keys","size","includes","push","calculateLineQuantity","reduce","sum","qty","updateOrder","index","field","prevOrders","newOrders","getPriceForQuantity","totalQuantity","totals","acc","totalPrice","orderPrice","entries","sizeProduct","basePrice","surcharge","quantity","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","_colors$order$STYLE_N","lineQuantity","cacheOptions","loadOptions","defaultOptions","onChange","selectedOption","placeholder","e","target","disabled","color","type","min","toFixed","onClick","_","i","_c","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AsyncSelect from 'react-select/async';\r\nimport debounce from 'lodash/debounce';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst API_BASE_URL = 'https://c3eku948.caspio.com/rest/v2/views/Heroku/records';\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const abortController = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Client ID:', process.env.REACT_APP_CASPIO_CLIENT_ID.substring(0, 5) + '...');\r\n    console.log('Client Secret:', process.env.REACT_APP_CASPIO_CLIENT_SECRET.substring(0, 5) + '...');\r\n  }, []);\r\n\r\n  const refreshToken = useCallback(async () => {\r\n    try {\r\n      console.log('Refreshing token...');\r\n      const response = await axios.post(\r\n        'https://c3eku948.caspio.com/oauth/token',\r\n        new URLSearchParams({\r\n          grant_type: 'client_credentials',\r\n          client_id: process.env.REACT_APP_CASPIO_CLIENT_ID,\r\n          client_secret: process.env.REACT_APP_CASPIO_CLIENT_SECRET,\r\n        }).toString(),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n        }\r\n      );\r\n\r\n      const newAccessToken = response.data.access_token;\r\n      const expiresIn = response.data.expires_in || 3600;\r\n\r\n      localStorage.setItem('caspioAccessToken', newAccessToken);\r\n      console.log('Token refreshed successfully');\r\n\r\n      return { newAccessToken, expiresIn };\r\n    } catch (error) {\r\n      console.error('Failed to refresh access token:', error);\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  const getAccessToken = useCallback(async () => {\r\n    let accessToken = localStorage.getItem('caspioAccessToken');\r\n\r\n    if (!accessToken) {\r\n      console.log('No token found, refreshing...');\r\n      const { newAccessToken } = await refreshToken();\r\n      accessToken = newAccessToken;\r\n    }\r\n\r\n    return accessToken;\r\n  }, [refreshToken]);\r\n\r\n  const fetchProductDetails = useCallback(async (styleNo) => {\r\n    try {\r\n      console.log(`Fetching product details for style: ${styleNo}`);\r\n      const accessToken = await getAccessToken();\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}?q={\"STYLE_No\":\"${styleNo}\"}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log('Product details response:', response.data);\r\n\r\n      if (response.data?.Result?.length > 0) {\r\n        const products = response.data.Result;\r\n        const colorMap = {};\r\n        const productData = {};\r\n\r\n        products.forEach((product) => {\r\n          const key = `${product.STYLE_No}-${product.COLOR_NAME}`;\r\n          if (!productData[key]) {\r\n            productData[key] = {\r\n              PRODUCT_TITLE: product.PRODUCT_NAME || `${product.STYLE_No} - ${product.COLOR_NAME}`,\r\n              STYLE_No: product.STYLE_No,\r\n              COLOR_NAME: product.COLOR_NAME,\r\n              sizes: {},\r\n              prices: {\r\n                Price_2_5: product.Price_2_5,\r\n                Price_6_11: product.Price_6_11,\r\n                Price_12_23: product.Price_12_23,\r\n                Price_24_47: product.Price_24_47,\r\n                Price_48_71: product.Price_48_71,\r\n                Price_72_plus: product.Price_72,\r\n              },\r\n            };\r\n          }\r\n          productData[key].sizes[product.SIZE] = {\r\n            ...product,\r\n            Surcharge: parseFloat(product.Surcharge) || 0,\r\n            SizeOrder: parseInt(product.SizeOrder) || 999,\r\n          };\r\n\r\n          if (!colorMap[product.STYLE_No]) {\r\n            colorMap[product.STYLE_No] = new Set();\r\n          }\r\n          colorMap[product.STYLE_No].add(product.COLOR_NAME);\r\n        });\r\n\r\n        console.log('Processed product data:', productData);\r\n        console.log('Color map:', colorMap);\r\n\r\n        setProductDatabase((prevState) => ({ ...prevState, ...productData }));\r\n        setColors((prevColors) => ({\r\n          ...prevColors,\r\n          [styleNo]: Array.from(colorMap[styleNo] || []).sort(),\r\n        }));\r\n      } else {\r\n        console.log('No product details found for the given style');\r\n        throw new Error('No product details returned from the server');\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load product details:', err);\r\n      setErrorMessage('Failed to load product details. Please try again later.');\r\n    }\r\n  }, [getAccessToken]);\r\n\r\n  const loadStyles = useCallback(\r\n    debounce(async (inputValue) => {\r\n      console.log('Loading styles for input:', inputValue);\r\n      if (abortController.current) {\r\n        abortController.current.abort();\r\n      }\r\n      abortController.current = new AbortController();\r\n\r\n      try {\r\n        const accessToken = await getAccessToken();\r\n        const query = `q={\"STYLE_No\":{\"ilike\":\"%${inputValue}%\"}}&q.select=STYLE_No&q.distinct=true&q.sort=STYLE_No&q.limit=100`;\r\n        console.log('API request URL:', `${API_BASE_URL}?${query}`);\r\n        const response = await axios.get(`${API_BASE_URL}?${query}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          signal: abortController.current.signal,\r\n        });\r\n\r\n        console.log('API response:', response.data);\r\n\r\n        if (response.data?.Result?.length > 0) {\r\n          const styleOptions = response.data.Result\r\n            .filter((item) => item.STYLE_No && typeof item.STYLE_No === 'string')\r\n            .map((item) => ({\r\n              value: item.STYLE_No,\r\n              label: item.STYLE_No,\r\n            }));\r\n\r\n          // Remove duplicates based on value (STYLE_No)\r\n          const uniqueOptions = Array.from(\r\n            new Map(styleOptions.map((item) => [item.value, item])).values()\r\n          );\r\n\r\n          console.log('Unique style options:', uniqueOptions);\r\n          return uniqueOptions;\r\n        } else {\r\n          console.log('No styles found');\r\n          return [];\r\n        }\r\n      } catch (err) {\r\n        if (axios.isCancel(err)) {\r\n          console.log('Request canceled', err.message);\r\n        } else {\r\n          console.error('Error loading styles:', err);\r\n          setErrorMessage('Failed to load styles. Please try again.');\r\n        }\r\n        return [];\r\n      }\r\n    }, 300),\r\n    [getAccessToken]\r\n  );\r\n\r\n  const getAvailableSizes = useCallback((order) => {\r\n    const key = `${order.STYLE_No}-${order.COLOR_NAME}`;\r\n    const product = productDatabase[key];\r\n    if (!product) return { mainSizes: [], otherSizes: [] };\r\n\r\n    const availableSizes = Object.keys(product.sizes);\r\n    const mainSizes = [];\r\n    const otherSizes = [];\r\n\r\n    availableSizes.forEach((size) => {\r\n      if (MAIN_SIZES.includes(size)) {\r\n        mainSizes.push(size);\r\n      } else {\r\n        otherSizes.push(size);\r\n      }\r\n    });\r\n\r\n    return { mainSizes, otherSizes };\r\n  }, [productDatabase]);\r\n\r\n  const calculateLineQuantity = useCallback((order) => {\r\n    return Object.values(order.quantities).reduce(\r\n      (sum, qty) => sum + (qty || 0),\r\n      0\r\n    );\r\n  }, []);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      console.log(`Updating order ${index}, field: ${field}, value:`, value);\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n          if (value && !colors[value]) {\r\n            // Fetch product details if not already in the database\r\n            fetchProductDetails(value);\r\n          }\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        console.log('Updated orders:', newOrders);\r\n        return newOrders;\r\n      });\r\n    },\r\n    [colors, fetchProductDetails]\r\n  );\r\n\r\n  const getPriceForQuantity = useCallback((product, totalQuantity) => {\r\n    if (!product) return 0;\r\n\r\n    const { prices } = product;\r\n\r\n    if (totalQuantity >= 72) return parseFloat(prices.Price_72_plus) || 0;\r\n    if (totalQuantity >= 48) return parseFloat(prices.Price_48_71) || 0;\r\n    if (totalQuantity >= 24) return parseFloat(prices.Price_24_47) || 0;\r\n    if (totalQuantity >= 12) return parseFloat(prices.Price_12_23) || 0;\r\n    if (totalQuantity >= 6) return parseFloat(prices.Price_6_11) || 0;\r\n    return parseFloat(prices.Price_2_5) || 0;\r\n  }, []);\r\n\r\n  const totals = useMemo(() => {\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return (\r\n        acc +\r\n        Object.values(order.quantities).reduce(\r\n          (sum, qty) => sum + (qty || 0),\r\n          0\r\n        )\r\n      );\r\n    }, 0);\r\n\r\n    const totalPrice = orders.reduce((acc, order) => {\r\n      const key = `${order.STYLE_No}-${order.COLOR_NAME}`;\r\n      const product = productDatabase[key];\r\n      if (!product) return acc;\r\n\r\n      const orderPrice = Object.entries(order.quantities).reduce(\r\n        (sum, [size, qty]) => {\r\n          if (!qty) return sum;\r\n          const sizeProduct = product.sizes[size];\r\n          const basePrice = getPriceForQuantity(product, totalQuantity);\r\n          const surcharge =\r\n            sizeProduct && sizeProduct.Surcharge\r\n              ? parseFloat(sizeProduct.Surcharge) || 0\r\n              : 0;\r\n          return sum + (basePrice + surcharge) * qty;\r\n        },\r\n        0\r\n      );\r\n\r\n      return acc + orderPrice;\r\n    }, 0);\r\n\r\n    console.log('Calculated totals:', { quantity: totalQuantity, price: totalPrice });\r\n    return { quantity: totalQuantity, price: totalPrice };\r\n  }, [orders, productDatabase, getPriceForQuantity]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Style No</th>\r\n            <th>Color Name</th>\r\n            <th>Product Title</th>\r\n            {MAIN_SIZES.map((size) => (\r\n              <th key={size}>{size}</th>\r\n            ))}\r\n            <th>Other Sizes</th>\r\n            <th>Line Qty</th>\r\n            <th>Row Total</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order, index) => {\r\n            const { mainSizes, otherSizes } = getAvailableSizes(order);\r\n            const totalQuantity = totals.quantity;\r\n            const key = `${order.STYLE_No}-${order.COLOR_NAME}`;\r\n            const product = productDatabase[key];\r\n            const lineQuantity = calculateLineQuantity(order);\r\n\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <AsyncSelect\r\n                    cacheOptions\r\n                    loadOptions={loadStyles}\r\n                    defaultOptions\r\n                    onChange={(selectedOption) => {\r\n                      const value = selectedOption ? selectedOption.value : '';\r\n                      updateOrder(index, 'STYLE_No', value);\r\n                    }}\r\n                    value={\r\n                      order.STYLE_No\r\n                        ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                        : null\r\n                    }\r\n                    placeholder=\"Enter or select style\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={order.COLOR_NAME}\r\n                    onChange={(e) => updateOrder(index, 'COLOR_NAME', e.target.value)}\r\n                    disabled={!order.STYLE_No}\r\n                  >\r\n                    <option value=\"\">Select Color</option>\r\n                    {colors[order.STYLE_No]?.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>{product?.PRODUCT_TITLE || ''}</td>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <td key={size}>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={order.quantities[size] || ''}\r\n                      onChange={(e) => updateOrder(index, 'quantities', { ...order.quantities, [size]: e.target.value })}\r\n                      min=\"0\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  {otherSizes.map((size) => (\r\n                    <div key={size}>\r\n                      <span>{size}: </span>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) => updateOrder(index, 'quantities', { ...order.quantities, [size]: e.target.value })}\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n                <td>{lineQuantity}</td>\r\n                <td>${(calculateLineQuantity(order) * (product ? getPriceForQuantity(product, totalQuantity) : 0)).toFixed(2)}</td>\r\n                <td>\r\n                  <button onClick={() => setOrders(orders.filter((_, i) => i !== index))}>\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={() => setOrders([...orders, { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null }])}>\r\n        Add Line\r\n      </button>\r\n      <button onClick={() => console.log('Submit order:', orders)}>\r\n        Submit Order\r\n      </button>\r\n      <div>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}