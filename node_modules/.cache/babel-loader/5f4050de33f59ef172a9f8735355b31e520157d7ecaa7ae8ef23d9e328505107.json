{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { db } from '../firebase';\nimport { collection, getDoc, getDocs, query, limit, orderBy, startAt, endAt, doc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmbroideryCalculator() {\n  _s();\n  const [orders, setOrders] = useState([{\n    styleNo: '',\n    colorName: '',\n    productTitle: '',\n    productData: null,\n    quantities: {},\n    otherQuantity: 0\n  }]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const MAIN_SIZES = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL'];\n  useEffect(() => {\n    console.log('Orders updated:', orders);\n  }, [orders]);\n  const loadStyleOptions = async inputValue => {\n    try {\n      const searchTerm = inputValue.toUpperCase();\n      console.log('Searching for styles with input:', searchTerm);\n      const stylesRef = collection(db, 'styles');\n      const styleQuery = query(stylesRef, orderBy('styleNo'), startAt(searchTerm), endAt(searchTerm + '\\uf8ff'), limit(20));\n      const querySnapshot = await getDocs(styleQuery);\n      console.log('Query snapshot size:', querySnapshot.size);\n      const styles = [];\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        const styleNo = data.styleNo;\n        console.log('Document ID:', doc.id, 'Data:', data);\n        if (styleNo && data.productTitle) {\n          styles.push({\n            label: `${styleNo} - ${data.productTitle}`,\n            value: doc.id\n          });\n        }\n      });\n      console.log('Styles:', styles);\n      return styles;\n    } catch (err) {\n      console.error('Error loading styles:', err);\n      setErrorMessage('Error loading styles. Please try again.');\n      return [];\n    }\n  };\n  const updateOrder = (index, field, value) => {\n    setOrders(prevOrders => {\n      const updatedOrders = [...prevOrders];\n      updatedOrders[index] = {\n        ...updatedOrders[index],\n        [field]: value\n      };\n      return updatedOrders;\n    });\n  };\n  const calculateLineTotal = order => {\n    const product = order.productData;\n    if (!product) return 0;\n    const quantities = order.quantities;\n    const totalQuantity = Object.values(quantities).reduce((sum, qty) => sum + (parseInt(qty) || 0), 0) + (parseInt(order.otherQuantity) || 0);\n    const basePriceRanges = product.basePrice;\n    let basePrice = 0;\n    const quantityRanges = Object.keys(basePriceRanges);\n    for (const range of quantityRanges) {\n      const [minStr, maxStr] = range.split('_');\n      const min = parseInt(minStr);\n      const max = maxStr === 'plus' ? Infinity : parseInt(maxStr);\n      if (totalQuantity >= min && totalQuantity <= max) {\n        basePrice = parseFloat(basePriceRanges[range]);\n        break;\n      }\n    }\n    if (basePrice === 0) {\n      return 0;\n    }\n    let lineTotal = 0;\n    for (const size in quantities) {\n      const qty = parseInt(quantities[size]) || 0;\n      if (qty > 0) {\n        let sizeUpcharge = 0;\n        if (product.sizeUpcharges && product.sizeUpcharges[size]) {\n          sizeUpcharge = parseFloat(product.sizeUpcharges[size]);\n        }\n        const price = basePrice + sizeUpcharge;\n        lineTotal += price * qty;\n      }\n    }\n\n    // Handle 'Other' quantity\n    const otherQty = parseInt(order.otherQuantity) || 0;\n    if (otherQty > 0) {\n      lineTotal += basePrice * otherQty;\n    }\n    return lineTotal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-green-600 p-4 bg-green-100\",\n        children: \"Embroidery Order Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-green-500 text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-left\",\n                style: {\n                  width: '200px'\n                },\n                children: \"Style No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-left\",\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-left\",\n                children: \"Product Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-center\",\n                children: size\n              }, size, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-center\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-center\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-center\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 text-center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders.map((order, index) => {\n              const product = order.productData;\n              console.log('Order at index', index, ':', order);\n              console.log('Product data for style', order.styleNo, ':', product);\n              const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (parseInt(qty) || 0), 0) + (parseInt(order.otherQuantity) || 0);\n              const lineTotal = calculateLineTotal(order).toFixed(2);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: index % 2 === 0 ? 'bg-gray-50' : 'bg-white',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  style: {\n                    width: '200px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                    cacheOptions: true,\n                    loadOptions: loadStyleOptions,\n                    onChange: selectedOption => {\n                      const docId = selectedOption ? selectedOption.value : '';\n                      console.log('Selected style:', docId);\n                      updateOrder(index, 'styleNo', docId);\n                      updateOrder(index, 'colorName', '');\n                      updateOrder(index, 'productTitle', '');\n                      updateOrder(index, 'productData', null);\n                      const fetchProductData = async () => {\n                        setIsLoading(true);\n                        try {\n                          const docRef = doc(db, 'styles', docId);\n                          const docSnap = await getDoc(docRef);\n                          if (docSnap.exists()) {\n                            const data = docSnap.data();\n                            console.log('Fetched product data:', data);\n                            updateOrder(index, 'productTitle', data.productTitle || '');\n                            updateOrder(index, 'productData', data);\n                          } else {\n                            console.log('No product data found for style:', docId);\n                          }\n                        } catch (error) {\n                          console.error('Error fetching product data:', error);\n                          setErrorMessage('Failed to fetch product data. Please try again.');\n                        } finally {\n                          setIsLoading(false);\n                        }\n                      };\n                      fetchProductData();\n                    },\n                    value: order.styleNo ? {\n                      value: order.styleNo,\n                      label: `${order.styleNo} - ${order.productTitle}`\n                    } : null,\n                    placeholder: \"Enter style number\",\n                    isDisabled: isLoading,\n                    styles: {\n                      control: provided => ({\n                        ...provided,\n                        minWidth: '200px'\n                      }),\n                      menu: provided => ({\n                        ...provided,\n                        zIndex: 9999\n                      })\n                    },\n                    onInputChange: input => console.log('Style input changed:', input)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: product && Array.isArray(product.colors) && product.colors.length > 0 ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"w-full p-1 border rounded\",\n                    value: order.colorName || '',\n                    onChange: e => {\n                      const value = e.target.value;\n                      updateOrder(index, 'colorName', value);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Color\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 27\n                    }, this), product.colors.map((color, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: color,\n                      children: color\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"w-full p-1 border rounded\",\n                    disabled: true,\n                    children: /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: product ? 'No Colors Available' : 'Select Style First'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2\",\n                  children: order.productTitle || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    className: \"w-16 p-1 border rounded\",\n                    value: order.quantities[size] || '',\n                    onChange: e => {\n                      const value = e.target.value;\n                      setOrders(prevOrders => {\n                        const updatedOrders = [...prevOrders];\n                        const updatedQuantities = {\n                          ...updatedOrders[index].quantities,\n                          [size]: value\n                        };\n                        updatedOrders[index] = {\n                          ...updatedOrders[index],\n                          quantities: updatedQuantities\n                        };\n                        return updatedOrders;\n                      });\n                    },\n                    disabled: !product\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this)\n                }, size, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    className: \"w-16 p-1 border rounded\",\n                    value: order.otherQuantity || '',\n                    onChange: e => {\n                      const value = e.target.value;\n                      updateOrder(index, 'otherQuantity', value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2 text-center\",\n                  children: lineQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2 text-center\",\n                  children: [\"$\", lineTotal]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"bg-red-500 text-white px-2 py-1 rounded\",\n                    onClick: () => {\n                      setOrders(prevOrders => prevOrders.filter((_, i) => i !== index));\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this)]\n              }, order.styleNo || index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white px-4 py-2 rounded\",\n          onClick: () => {\n            setOrders([...orders, {\n              styleNo: '',\n              colorName: '',\n              productTitle: '',\n              productData: null,\n              quantities: {},\n              otherQuantity: 0\n            }]);\n          },\n          children: \"Add Line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: [\"Order Total: $\", orders.reduce((total, order) => total + parseFloat(calculateLineTotal(order)), 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"bUnnjgohm0mqBwg66XG+NvA7iPY=\");\n_c = EmbroideryCalculator;\nvar _c;\n$RefreshReg$(_c, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useEffect","AsyncSelect","db","collection","getDoc","getDocs","query","limit","orderBy","startAt","endAt","doc","jsxDEV","_jsxDEV","EmbroideryCalculator","_s","orders","setOrders","styleNo","colorName","productTitle","productData","quantities","otherQuantity","errorMessage","setErrorMessage","isLoading","setIsLoading","MAIN_SIZES","console","log","loadStyleOptions","inputValue","searchTerm","toUpperCase","stylesRef","styleQuery","querySnapshot","size","styles","forEach","data","id","push","label","value","err","error","updateOrder","index","field","prevOrders","updatedOrders","calculateLineTotal","order","product","totalQuantity","Object","values","reduce","sum","qty","parseInt","basePriceRanges","basePrice","quantityRanges","keys","range","minStr","maxStr","split","min","max","Infinity","parseFloat","lineTotal","sizeUpcharge","sizeUpcharges","price","otherQty","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","style","width","map","lineQuantity","toFixed","cacheOptions","loadOptions","onChange","selectedOption","docId","fetchProductData","docRef","docSnap","exists","placeholder","isDisabled","control","provided","minWidth","menu","zIndex","onInputChange","input","Array","isArray","colors","length","e","target","color","idx","disabled","type","updatedQuantities","onClick","filter","_","i","total","_c","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport {\r\n  collection,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  limit,\r\n  orderBy,\r\n  startAt,\r\n  endAt,\r\n  doc,\r\n} from 'firebase/firestore';\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      styleNo: '',\r\n      colorName: '',\r\n      productTitle: '',\r\n      productData: null,\r\n      quantities: {},\r\n      otherQuantity: 0,\r\n    },\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const MAIN_SIZES = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL'];\r\n\r\n  useEffect(() => {\r\n    console.log('Orders updated:', orders);\r\n  }, [orders]);\r\n\r\n  const loadStyleOptions = async (inputValue) => {\r\n    try {\r\n      const searchTerm = inputValue.toUpperCase();\r\n      console.log('Searching for styles with input:', searchTerm);\r\n\r\n      const stylesRef = collection(db, 'styles');\r\n\r\n      const styleQuery = query(\r\n        stylesRef,\r\n        orderBy('styleNo'),\r\n        startAt(searchTerm),\r\n        endAt(searchTerm + '\\uf8ff'),\r\n        limit(20)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(styleQuery);\r\n      console.log('Query snapshot size:', querySnapshot.size);\r\n\r\n      const styles = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        const styleNo = data.styleNo;\r\n        console.log('Document ID:', doc.id, 'Data:', data);\r\n        if (styleNo && data.productTitle) {\r\n          styles.push({ label: `${styleNo} - ${data.productTitle}`, value: doc.id });\r\n        }\r\n      });\r\n\r\n      console.log('Styles:', styles);\r\n      return styles;\r\n    } catch (err) {\r\n      console.error('Error loading styles:', err);\r\n      setErrorMessage('Error loading styles. Please try again.');\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const updateOrder = (index, field, value) => {\r\n    setOrders((prevOrders) => {\r\n      const updatedOrders = [...prevOrders];\r\n      updatedOrders[index] = {\r\n        ...updatedOrders[index],\r\n        [field]: value,\r\n      };\r\n      return updatedOrders;\r\n    });\r\n  };\r\n\r\n  const calculateLineTotal = (order) => {\r\n    const product = order.productData;\r\n    if (!product) return 0;\r\n\r\n    const quantities = order.quantities;\r\n    const totalQuantity =\r\n      Object.values(quantities).reduce(\r\n        (sum, qty) => sum + (parseInt(qty) || 0),\r\n        0\r\n      ) + (parseInt(order.otherQuantity) || 0);\r\n\r\n    const basePriceRanges = product.basePrice;\r\n\r\n    let basePrice = 0;\r\n    const quantityRanges = Object.keys(basePriceRanges);\r\n    for (const range of quantityRanges) {\r\n      const [minStr, maxStr] = range.split('_');\r\n      const min = parseInt(minStr);\r\n      const max = maxStr === 'plus' ? Infinity : parseInt(maxStr);\r\n\r\n      if (totalQuantity >= min && totalQuantity <= max) {\r\n        basePrice = parseFloat(basePriceRanges[range]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (basePrice === 0) {\r\n      return 0;\r\n    }\r\n\r\n    let lineTotal = 0;\r\n    for (const size in quantities) {\r\n      const qty = parseInt(quantities[size]) || 0;\r\n      if (qty > 0) {\r\n        let sizeUpcharge = 0;\r\n        if (product.sizeUpcharges && product.sizeUpcharges[size]) {\r\n          sizeUpcharge = parseFloat(product.sizeUpcharges[size]);\r\n        }\r\n        const price = basePrice + sizeUpcharge;\r\n        lineTotal += price * qty;\r\n      }\r\n    }\r\n\r\n    // Handle 'Other' quantity\r\n    const otherQty = parseInt(order.otherQuantity) || 0;\r\n    if (otherQty > 0) {\r\n      lineTotal += basePrice * otherQty;\r\n    }\r\n\r\n    return lineTotal;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-4\">\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        <h1 className=\"text-2xl font-bold text-green-600 p-4 bg-green-100\">\r\n          Embroidery Order Form\r\n        </h1>\r\n        {errorMessage && (\r\n          <div\r\n            className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\"\r\n            role=\"alert\"\r\n          >\r\n            <p className=\"font-bold\">Error</p>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        {isLoading && <div>Loading...</div>}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-sm\">\r\n            <thead className=\"bg-green-500 text-white\">\r\n              <tr>\r\n                <th className=\"p-2 text-left\" style={{ width: '200px' }}>\r\n                  Style No\r\n                </th>\r\n                <th className=\"p-2 text-left\">Color</th>\r\n                <th className=\"p-2 text-left\">Product Title</th>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <th key={size} className=\"p-2 text-center\">\r\n                    {size}\r\n                  </th>\r\n                ))}\r\n                <th className=\"p-2 text-center\">Other</th>\r\n                <th className=\"p-2 text-center\">Qty</th>\r\n                <th className=\"p-2 text-center\">Total</th>\r\n                <th className=\"p-2 text-center\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => {\r\n                const product = order.productData;\r\n\r\n                console.log('Order at index', index, ':', order);\r\n                console.log('Product data for style', order.styleNo, ':', product);\r\n\r\n                const lineQuantity =\r\n                  Object.values(order.quantities).reduce(\r\n                    (sum, qty) => sum + (parseInt(qty) || 0),\r\n                    0\r\n                  ) + (parseInt(order.otherQuantity) || 0);\r\n\r\n                const lineTotal = calculateLineTotal(order).toFixed(2);\r\n\r\n                return (\r\n                  <tr\r\n                    key={order.styleNo || index}\r\n                    className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}\r\n                  >\r\n                    <td className=\"p-2\" style={{ width: '200px' }}>\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        loadOptions={loadStyleOptions}\r\n                        onChange={(selectedOption) => {\r\n                          const docId = selectedOption ? selectedOption.value : '';\r\n                          console.log('Selected style:', docId);\r\n                          updateOrder(index, 'styleNo', docId);\r\n                          updateOrder(index, 'colorName', '');\r\n                          updateOrder(index, 'productTitle', '');\r\n                          updateOrder(index, 'productData', null);\r\n\r\n                          const fetchProductData = async () => {\r\n                            setIsLoading(true);\r\n                            try {\r\n                              const docRef = doc(db, 'styles', docId);\r\n                              const docSnap = await getDoc(docRef);\r\n                              if (docSnap.exists()) {\r\n                                const data = docSnap.data();\r\n                                console.log('Fetched product data:', data);\r\n                                updateOrder(index, 'productTitle', data.productTitle || '');\r\n                                updateOrder(index, 'productData', data);\r\n                              } else {\r\n                                console.log('No product data found for style:', docId);\r\n                              }\r\n                            } catch (error) {\r\n                              console.error('Error fetching product data:', error);\r\n                              setErrorMessage(\r\n                                'Failed to fetch product data. Please try again.'\r\n                              );\r\n                            } finally {\r\n                              setIsLoading(false);\r\n                            }\r\n                          };\r\n                          fetchProductData();\r\n                        }}\r\n                        value={\r\n                          order.styleNo\r\n                            ? {\r\n                                value: order.styleNo,\r\n                                label: `${order.styleNo} - ${order.productTitle}`,\r\n                              }\r\n                            : null\r\n                        }\r\n                        placeholder=\"Enter style number\"\r\n                        isDisabled={isLoading}\r\n                        styles={{\r\n                          control: (provided) => ({ ...provided, minWidth: '200px' }),\r\n                          menu: (provided) => ({ ...provided, zIndex: 9999 }),\r\n                        }}\r\n                        onInputChange={(input) =>\r\n                          console.log('Style input changed:', input)\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td className=\"p-2\">\r\n                      {product && Array.isArray(product.colors) && product.colors.length > 0 ? (\r\n                        <select\r\n                          className=\"w-full p-1 border rounded\"\r\n                          value={order.colorName || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            updateOrder(index, 'colorName', value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Color</option>\r\n                          {product.colors.map((color, idx) => (\r\n                            <option key={idx} value={color}>\r\n                              {color}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        <select className=\"w-full p-1 border rounded\" disabled>\r\n                          <option value=\"\">\r\n                            {product ? 'No Colors Available' : 'Select Style First'}\r\n                          </option>\r\n                        </select>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"p-2\">{order.productTitle || ''}</td>\r\n                    {MAIN_SIZES.map((size) => (\r\n                      <td key={size} className=\"p-2 text-center\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-16 p-1 border rounded\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            setOrders((prevOrders) => {\r\n                              const updatedOrders = [...prevOrders];\r\n                              const updatedQuantities = {\r\n                                ...updatedOrders[index].quantities,\r\n                                [size]: value,\r\n                              };\r\n                              updatedOrders[index] = {\r\n                                ...updatedOrders[index],\r\n                                quantities: updatedQuantities,\r\n                              };\r\n                              return updatedOrders;\r\n                            });\r\n                          }}\r\n                          disabled={!product}\r\n                        />\r\n                      </td>\r\n                    ))}\r\n                    <td className=\"p-2 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        className=\"w-16 p-1 border rounded\"\r\n                        value={order.otherQuantity || ''}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          updateOrder(index, 'otherQuantity', value);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td className=\"p-2 text-center\">{lineQuantity}</td>\r\n                    <td className=\"p-2 text-center\">${lineTotal}</td>\r\n                    <td className=\"p-2 text-center\">\r\n                      <button\r\n                        className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                        onClick={() => {\r\n                          setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"p-4\">\r\n          <button\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n            onClick={() => {\r\n              setOrders([\r\n                ...orders,\r\n                {\r\n                  styleNo: '',\r\n                  colorName: '',\r\n                  productTitle: '',\r\n                  productData: null,\r\n                  quantities: {},\r\n                  otherQuantity: 0,\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Add Line\r\n          </button>\r\n        </div>\r\n        <div className=\"p-4 bg-gray-100\">\r\n          <h2 className=\"text-xl font-bold\">\r\n            Order Total: $\r\n            {orders\r\n              .reduce((total, order) => total + parseFloat(calculateLineTotal(order)), 0)\r\n              .toFixed(2)}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,EAAE,QAAQ,aAAa;AAChC,SACEC,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,OAAO,EACPC,KAAK,EACLC,GAAG,QACE,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,CACnC;IACEmB,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,CAAC,CAAC;IACdC,aAAa,EAAE;EACjB,CAAC,CACF,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM6B,UAAU,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAE1E5B,SAAS,CAAC,MAAM;IACd6B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEd,MAAM,CAAC;EACxC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMe,gBAAgB,GAAG,MAAOC,UAAU,IAAK;IAC7C,IAAI;MACF,MAAMC,UAAU,GAAGD,UAAU,CAACE,WAAW,CAAC,CAAC;MAC3CL,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEG,UAAU,CAAC;MAE3D,MAAME,SAAS,GAAGhC,UAAU,CAACD,EAAE,EAAE,QAAQ,CAAC;MAE1C,MAAMkC,UAAU,GAAG9B,KAAK,CACtB6B,SAAS,EACT3B,OAAO,CAAC,SAAS,CAAC,EAClBC,OAAO,CAACwB,UAAU,CAAC,EACnBvB,KAAK,CAACuB,UAAU,GAAG,QAAQ,CAAC,EAC5B1B,KAAK,CAAC,EAAE,CACV,CAAC;MAED,MAAM8B,aAAa,GAAG,MAAMhC,OAAO,CAAC+B,UAAU,CAAC;MAC/CP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,aAAa,CAACC,IAAI,CAAC;MAEvD,MAAMC,MAAM,GAAG,EAAE;MACjBF,aAAa,CAACG,OAAO,CAAE7B,GAAG,IAAK;QAC7B,MAAM8B,IAAI,GAAG9B,GAAG,CAAC8B,IAAI,CAAC,CAAC;QACvB,MAAMvB,OAAO,GAAGuB,IAAI,CAACvB,OAAO;QAC5BW,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEnB,GAAG,CAAC+B,EAAE,EAAE,OAAO,EAAED,IAAI,CAAC;QAClD,IAAIvB,OAAO,IAAIuB,IAAI,CAACrB,YAAY,EAAE;UAChCmB,MAAM,CAACI,IAAI,CAAC;YAAEC,KAAK,EAAE,GAAG1B,OAAO,MAAMuB,IAAI,CAACrB,YAAY,EAAE;YAAEyB,KAAK,EAAElC,GAAG,CAAC+B;UAAG,CAAC,CAAC;QAC5E;MACF,CAAC,CAAC;MAEFb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAES,MAAM,CAAC;MAC9B,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZjB,OAAO,CAACkB,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC;MAC3CrB,eAAe,CAAC,yCAAyC,CAAC;MAC1D,OAAO,EAAE;IACX;EACF,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEL,KAAK,KAAK;IAC3C5B,SAAS,CAAEkC,UAAU,IAAK;MACxB,MAAMC,aAAa,GAAG,CAAC,GAAGD,UAAU,CAAC;MACrCC,aAAa,CAACH,KAAK,CAAC,GAAG;QACrB,GAAGG,aAAa,CAACH,KAAK,CAAC;QACvB,CAACC,KAAK,GAAGL;MACX,CAAC;MACD,OAAOO,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,OAAO,GAAGD,KAAK,CAACjC,WAAW;IACjC,IAAI,CAACkC,OAAO,EAAE,OAAO,CAAC;IAEtB,MAAMjC,UAAU,GAAGgC,KAAK,CAAChC,UAAU;IACnC,MAAMkC,aAAa,GACjBC,MAAM,CAACC,MAAM,CAACpC,UAAU,CAAC,CAACqC,MAAM,CAC9B,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIE,QAAQ,CAACD,GAAG,CAAC,IAAI,CAAC,CAAC,EACxC,CACF,CAAC,IAAIC,QAAQ,CAACR,KAAK,CAAC/B,aAAa,CAAC,IAAI,CAAC,CAAC;IAE1C,MAAMwC,eAAe,GAAGR,OAAO,CAACS,SAAS;IAEzC,IAAIA,SAAS,GAAG,CAAC;IACjB,MAAMC,cAAc,GAAGR,MAAM,CAACS,IAAI,CAACH,eAAe,CAAC;IACnD,KAAK,MAAMI,KAAK,IAAIF,cAAc,EAAE;MAClC,MAAM,CAACG,MAAM,EAAEC,MAAM,CAAC,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;MACzC,MAAMC,GAAG,GAAGT,QAAQ,CAACM,MAAM,CAAC;MAC5B,MAAMI,GAAG,GAAGH,MAAM,KAAK,MAAM,GAAGI,QAAQ,GAAGX,QAAQ,CAACO,MAAM,CAAC;MAE3D,IAAIb,aAAa,IAAIe,GAAG,IAAIf,aAAa,IAAIgB,GAAG,EAAE;QAChDR,SAAS,GAAGU,UAAU,CAACX,eAAe,CAACI,KAAK,CAAC,CAAC;QAC9C;MACF;IACF;IAEA,IAAIH,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,CAAC;IACV;IAEA,IAAIW,SAAS,GAAG,CAAC;IACjB,KAAK,MAAMrC,IAAI,IAAIhB,UAAU,EAAE;MAC7B,MAAMuC,GAAG,GAAGC,QAAQ,CAACxC,UAAU,CAACgB,IAAI,CAAC,CAAC,IAAI,CAAC;MAC3C,IAAIuB,GAAG,GAAG,CAAC,EAAE;QACX,IAAIe,YAAY,GAAG,CAAC;QACpB,IAAIrB,OAAO,CAACsB,aAAa,IAAItB,OAAO,CAACsB,aAAa,CAACvC,IAAI,CAAC,EAAE;UACxDsC,YAAY,GAAGF,UAAU,CAACnB,OAAO,CAACsB,aAAa,CAACvC,IAAI,CAAC,CAAC;QACxD;QACA,MAAMwC,KAAK,GAAGd,SAAS,GAAGY,YAAY;QACtCD,SAAS,IAAIG,KAAK,GAAGjB,GAAG;MAC1B;IACF;;IAEA;IACA,MAAMkB,QAAQ,GAAGjB,QAAQ,CAACR,KAAK,CAAC/B,aAAa,CAAC,IAAI,CAAC;IACnD,IAAIwD,QAAQ,GAAG,CAAC,EAAE;MAChBJ,SAAS,IAAIX,SAAS,GAAGe,QAAQ;IACnC;IAEA,OAAOJ,SAAS;EAClB,CAAC;EAED,oBACE9D,OAAA;IAAKmE,SAAS,EAAC,8BAA8B;IAAAC,QAAA,eAC3CpE,OAAA;MAAKmE,SAAS,EAAC,iEAAiE;MAAAC,QAAA,gBAC9EpE,OAAA;QAAImE,SAAS,EAAC,oDAAoD;QAAAC,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJ7D,YAAY,iBACXX,OAAA;QACEmE,SAAS,EAAC,4DAA4D;QACtEM,IAAI,EAAC,OAAO;QAAAL,QAAA,gBAEZpE,OAAA;UAAGmE,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClCxE,OAAA;UAAAoE,QAAA,EAAIzD;QAAY;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACN,EACA3D,SAAS,iBAAIb,OAAA;QAAAoE,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnCxE,OAAA;QAAKmE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BpE,OAAA;UAAOmE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC/BpE,OAAA;YAAOmE,SAAS,EAAC,yBAAyB;YAAAC,QAAA,eACxCpE,OAAA;cAAAoE,QAAA,gBACEpE,OAAA;gBAAImE,SAAS,EAAC,eAAe;gBAACO,KAAK,EAAE;kBAAEC,KAAK,EAAE;gBAAQ,CAAE;gBAAAP,QAAA,EAAC;cAEzD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLxE,OAAA;gBAAImE,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxCxE,OAAA;gBAAImE,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC/CzD,UAAU,CAAC6D,GAAG,CAAEnD,IAAI,iBACnBzB,OAAA;gBAAemE,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EACvC3C;cAAI,GADEA,IAAI;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACL,CAAC,eACFxE,OAAA;gBAAImE,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1CxE,OAAA;gBAAImE,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxCxE,OAAA;gBAAImE,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1CxE,OAAA;gBAAImE,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRxE,OAAA;YAAAoE,QAAA,EACGjE,MAAM,CAACyE,GAAG,CAAC,CAACnC,KAAK,EAAEL,KAAK,KAAK;cAC5B,MAAMM,OAAO,GAAGD,KAAK,CAACjC,WAAW;cAEjCQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEmB,KAAK,EAAE,GAAG,EAAEK,KAAK,CAAC;cAChDzB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEwB,KAAK,CAACpC,OAAO,EAAE,GAAG,EAAEqC,OAAO,CAAC;cAElE,MAAMmC,YAAY,GAChBjC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAChC,UAAU,CAAC,CAACqC,MAAM,CACpC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIE,QAAQ,CAACD,GAAG,CAAC,IAAI,CAAC,CAAC,EACxC,CACF,CAAC,IAAIC,QAAQ,CAACR,KAAK,CAAC/B,aAAa,CAAC,IAAI,CAAC,CAAC;cAE1C,MAAMoD,SAAS,GAAGtB,kBAAkB,CAACC,KAAK,CAAC,CAACqC,OAAO,CAAC,CAAC,CAAC;cAEtD,oBACE9E,OAAA;gBAEEmE,SAAS,EAAE/B,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,UAAW;gBAAAgC,QAAA,gBAEvDpE,OAAA;kBAAImE,SAAS,EAAC,KAAK;kBAACO,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAE;kBAAAP,QAAA,eAC5CpE,OAAA,CAACZ,WAAW;oBACV2F,YAAY;oBACZC,WAAW,EAAE9D,gBAAiB;oBAC9B+D,QAAQ,EAAGC,cAAc,IAAK;sBAC5B,MAAMC,KAAK,GAAGD,cAAc,GAAGA,cAAc,CAAClD,KAAK,GAAG,EAAE;sBACxDhB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEkE,KAAK,CAAC;sBACrChD,WAAW,CAACC,KAAK,EAAE,SAAS,EAAE+C,KAAK,CAAC;sBACpChD,WAAW,CAACC,KAAK,EAAE,WAAW,EAAE,EAAE,CAAC;sBACnCD,WAAW,CAACC,KAAK,EAAE,cAAc,EAAE,EAAE,CAAC;sBACtCD,WAAW,CAACC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC;sBAEvC,MAAMgD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;wBACnCtE,YAAY,CAAC,IAAI,CAAC;wBAClB,IAAI;0BACF,MAAMuE,MAAM,GAAGvF,GAAG,CAACT,EAAE,EAAE,QAAQ,EAAE8F,KAAK,CAAC;0BACvC,MAAMG,OAAO,GAAG,MAAM/F,MAAM,CAAC8F,MAAM,CAAC;0BACpC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;4BACpB,MAAM3D,IAAI,GAAG0D,OAAO,CAAC1D,IAAI,CAAC,CAAC;4BAC3BZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEW,IAAI,CAAC;4BAC1CO,WAAW,CAACC,KAAK,EAAE,cAAc,EAAER,IAAI,CAACrB,YAAY,IAAI,EAAE,CAAC;4BAC3D4B,WAAW,CAACC,KAAK,EAAE,aAAa,EAAER,IAAI,CAAC;0BACzC,CAAC,MAAM;4BACLZ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEkE,KAAK,CAAC;0BACxD;wBACF,CAAC,CAAC,OAAOjD,KAAK,EAAE;0BACdlB,OAAO,CAACkB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;0BACpDtB,eAAe,CACb,iDACF,CAAC;wBACH,CAAC,SAAS;0BACRE,YAAY,CAAC,KAAK,CAAC;wBACrB;sBACF,CAAC;sBACDsE,gBAAgB,CAAC,CAAC;oBACpB,CAAE;oBACFpD,KAAK,EACHS,KAAK,CAACpC,OAAO,GACT;sBACE2B,KAAK,EAAES,KAAK,CAACpC,OAAO;sBACpB0B,KAAK,EAAE,GAAGU,KAAK,CAACpC,OAAO,MAAMoC,KAAK,CAAClC,YAAY;oBACjD,CAAC,GACD,IACL;oBACDiF,WAAW,EAAC,oBAAoB;oBAChCC,UAAU,EAAE5E,SAAU;oBACtBa,MAAM,EAAE;sBACNgE,OAAO,EAAGC,QAAQ,KAAM;wBAAE,GAAGA,QAAQ;wBAAEC,QAAQ,EAAE;sBAAQ,CAAC,CAAC;sBAC3DC,IAAI,EAAGF,QAAQ,KAAM;wBAAE,GAAGA,QAAQ;wBAAEG,MAAM,EAAE;sBAAK,CAAC;oBACpD,CAAE;oBACFC,aAAa,EAAGC,KAAK,IACnBhF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE+E,KAAK;kBAC1C;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLxE,OAAA;kBAAImE,SAAS,EAAC,KAAK;kBAAAC,QAAA,EAChB1B,OAAO,IAAIuD,KAAK,CAACC,OAAO,CAACxD,OAAO,CAACyD,MAAM,CAAC,IAAIzD,OAAO,CAACyD,MAAM,CAACC,MAAM,GAAG,CAAC,gBACpEpG,OAAA;oBACEmE,SAAS,EAAC,2BAA2B;oBACrCnC,KAAK,EAAES,KAAK,CAACnC,SAAS,IAAI,EAAG;oBAC7B2E,QAAQ,EAAGoB,CAAC,IAAK;sBACf,MAAMrE,KAAK,GAAGqE,CAAC,CAACC,MAAM,CAACtE,KAAK;sBAC5BG,WAAW,CAACC,KAAK,EAAE,WAAW,EAAEJ,KAAK,CAAC;oBACxC,CAAE;oBAAAoC,QAAA,gBAEFpE,OAAA;sBAAQgC,KAAK,EAAC,EAAE;sBAAAoC,QAAA,EAAC;oBAAY;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,EACrC9B,OAAO,CAACyD,MAAM,CAACvB,GAAG,CAAC,CAAC2B,KAAK,EAAEC,GAAG,kBAC7BxG,OAAA;sBAAkBgC,KAAK,EAAEuE,KAAM;sBAAAnC,QAAA,EAC5BmC;oBAAK,GADKC,GAAG;sBAAAnC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAER,CACT,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC,gBAETxE,OAAA;oBAAQmE,SAAS,EAAC,2BAA2B;oBAACsC,QAAQ;oBAAArC,QAAA,eACpDpE,OAAA;sBAAQgC,KAAK,EAAC,EAAE;sBAAAoC,QAAA,EACb1B,OAAO,GAAG,qBAAqB,GAAG;oBAAoB;sBAAA2B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjD;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBACT;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACLxE,OAAA;kBAAImE,SAAS,EAAC,KAAK;kBAAAC,QAAA,EAAE3B,KAAK,CAAClC,YAAY,IAAI;gBAAE;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAClDzD,UAAU,CAAC6D,GAAG,CAAEnD,IAAI,iBACnBzB,OAAA;kBAAemE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,eACxCpE,OAAA;oBACE0G,IAAI,EAAC,QAAQ;oBACbhD,GAAG,EAAC,GAAG;oBACPS,SAAS,EAAC,yBAAyB;oBACnCnC,KAAK,EAAES,KAAK,CAAChC,UAAU,CAACgB,IAAI,CAAC,IAAI,EAAG;oBACpCwD,QAAQ,EAAGoB,CAAC,IAAK;sBACf,MAAMrE,KAAK,GAAGqE,CAAC,CAACC,MAAM,CAACtE,KAAK;sBAC5B5B,SAAS,CAAEkC,UAAU,IAAK;wBACxB,MAAMC,aAAa,GAAG,CAAC,GAAGD,UAAU,CAAC;wBACrC,MAAMqE,iBAAiB,GAAG;0BACxB,GAAGpE,aAAa,CAACH,KAAK,CAAC,CAAC3B,UAAU;0BAClC,CAACgB,IAAI,GAAGO;wBACV,CAAC;wBACDO,aAAa,CAACH,KAAK,CAAC,GAAG;0BACrB,GAAGG,aAAa,CAACH,KAAK,CAAC;0BACvB3B,UAAU,EAAEkG;wBACd,CAAC;wBACD,OAAOpE,aAAa;sBACtB,CAAC,CAAC;oBACJ,CAAE;oBACFkE,QAAQ,EAAE,CAAC/D;kBAAQ;oBAAA2B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpB;gBAAC,GAtBK/C,IAAI;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAuBT,CACL,CAAC,eACFxE,OAAA;kBAAImE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,eAC7BpE,OAAA;oBACE0G,IAAI,EAAC,QAAQ;oBACbhD,GAAG,EAAC,GAAG;oBACPS,SAAS,EAAC,yBAAyB;oBACnCnC,KAAK,EAAES,KAAK,CAAC/B,aAAa,IAAI,EAAG;oBACjCuE,QAAQ,EAAGoB,CAAC,IAAK;sBACf,MAAMrE,KAAK,GAAGqE,CAAC,CAACC,MAAM,CAACtE,KAAK;sBAC5BG,WAAW,CAACC,KAAK,EAAE,eAAe,EAAEJ,KAAK,CAAC;oBAC5C;kBAAE;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLxE,OAAA;kBAAImE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAAES;gBAAY;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACnDxE,OAAA;kBAAImE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,GAAC,GAAC,EAACN,SAAS;gBAAA;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACjDxE,OAAA;kBAAImE,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,eAC7BpE,OAAA;oBACEmE,SAAS,EAAC,yCAAyC;oBACnDyC,OAAO,EAAEA,CAAA,KAAM;sBACbxG,SAAS,CAAEkC,UAAU,IAAKA,UAAU,CAACuE,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK3E,KAAK,CAAC,CAAC;oBACrE,CAAE;oBAAAgC,QAAA,EACH;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACP,CAAC;cAAA,GArIA/B,KAAK,CAACpC,OAAO,IAAI+B,KAAK;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAsIzB,CAAC;YAET,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNxE,OAAA;QAAKmE,SAAS,EAAC,KAAK;QAAAC,QAAA,eAClBpE,OAAA;UACEmE,SAAS,EAAC,2CAA2C;UACrDyC,OAAO,EAAEA,CAAA,KAAM;YACbxG,SAAS,CAAC,CACR,GAAGD,MAAM,EACT;cACEE,OAAO,EAAE,EAAE;cACXC,SAAS,EAAE,EAAE;cACbC,YAAY,EAAE,EAAE;cAChBC,WAAW,EAAE,IAAI;cACjBC,UAAU,EAAE,CAAC,CAAC;cACdC,aAAa,EAAE;YACjB,CAAC,CACF,CAAC;UACJ,CAAE;UAAA0D,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNxE,OAAA;QAAKmE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BpE,OAAA;UAAImE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAAC,gBAEhC,EAACjE,MAAM,CACJ2C,MAAM,CAAC,CAACkE,KAAK,EAAEvE,KAAK,KAAKuE,KAAK,GAAGnD,UAAU,CAACrB,kBAAkB,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAC1EqC,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtE,EAAA,CAxVuBD,oBAAoB;AAAAgH,EAAA,GAApBhH,oBAAoB;AAAA,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}