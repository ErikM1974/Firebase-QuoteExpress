{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erik\\\\Downloads\\\\embroidered-order-form\\\\src\\\\components\\\\EmbroideryCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport { db } from '../firebase';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport './EmbroideryCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = LoadingSpinner;\nconst getPriceForQuantity = (product, totalQuantity) => {\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\n  return parseFloat(product.Price_2_5) || 0;\n};\nexport default function EmbroideryCalculator() {\n  _s();\n  const [productDatabase, setProductDatabase] = useState({});\n  const [orders, setOrders] = useState([{\n    STYLE_No: '',\n    COLOR_NAME: '',\n    quantities: {},\n    error: null\n  }]);\n  const [styles, setStyles] = useState([]);\n  const [colors, setColors] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchAllStyles = useCallback(async () => {\n    console.log('Fetching all styles...');\n    setIsLoading(true);\n    try {\n      const stylesQuery = query(collection(db, 'embroidery_orders'));\n      console.log('Executing query...');\n      const querySnapshot = await getDocs(stylesQuery);\n      console.log('Query executed. Number of documents:', querySnapshot.size);\n      const stylesData = {};\n      const styleSet = new Set();\n      querySnapshot.forEach(doc => {\n        const data = doc.data();\n        console.log('Document data:', data);\n        if (data.STYLE_No) {\n          styleSet.add(data.STYLE_No);\n          if (!stylesData[data.STYLE_No]) {\n            stylesData[data.STYLE_No] = data;\n          }\n        }\n      });\n      console.log('Unique styles found:', styleSet.size);\n      setStyles(Array.from(styleSet));\n      setProductDatabase(stylesData);\n      console.log('Fetched styles:', stylesData);\n    } catch (err) {\n      console.error('Error fetching styles:', err);\n      setErrorMessage('Failed to load styles. Please try again.');\n    } finally {\n      setIsLoading(false);\n      console.log('Finished fetching styles.');\n    }\n  }, []);\n  useEffect(() => {\n    fetchAllStyles();\n  }, [fetchAllStyles]);\n  const fetchColors = useCallback(async styleNo => {\n    if (!styleNo) return;\n    setIsLoading(true);\n    try {\n      console.log(`Fetching colors for style: ${styleNo}`);\n      const colorsQuery = query(collection(db, 'embroidery_orders'), where('STYLE_No', '==', styleNo));\n      const querySnapshot = await getDocs(colorsQuery);\n      const colorSet = new Set();\n      const productDetails = {};\n      querySnapshot.forEach(doc => {\n        const item = doc.data();\n        if (item.COLOR_NAME) colorSet.add(item.COLOR_NAME);\n        productDetails[item.COLOR_NAME] = item;\n      });\n      setColors(prevColors => ({\n        ...prevColors,\n        [styleNo]: Array.from(colorSet)\n      }));\n      setProductDatabase(prevDatabase => ({\n        ...prevDatabase,\n        [styleNo]: {\n          ...prevDatabase[styleNo],\n          colors: productDetails\n        }\n      }));\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\n    } catch (err) {\n      console.error('Error fetching colors:', err);\n      setErrorMessage('Failed to load color options. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const updateOrder = useCallback((index, field, value) => {\n    console.log(`Updating order ${index}, field: ${field}, value:`, value);\n    setOrders(prevOrders => {\n      const newOrders = [...prevOrders];\n      newOrders[index] = {\n        ...newOrders[index],\n        [field]: value,\n        error: null\n      };\n      if (field === 'STYLE_No') {\n        newOrders[index].COLOR_NAME = '';\n        newOrders[index].quantities = {};\n        if (value && !colors[value]) {\n          fetchColors(value);\n        }\n      } else if (field === 'COLOR_NAME') {\n        newOrders[index].quantities = {};\n      }\n      console.log('Updated orders:', newOrders);\n      return newOrders;\n    });\n  }, [colors, fetchColors]);\n  const calculateOrderTotals = useCallback(() => {\n    console.log('Calculating order totals...');\n    const totalQuantity = orders.reduce((acc, order) => {\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n    }, 0);\n    const totals = orders.reduce((acc, order) => {\n      var _productDatabase$key, _productDatabase$key$;\n      const key = order.STYLE_No;\n      const product = (_productDatabase$key = productDatabase[key]) === null || _productDatabase$key === void 0 ? void 0 : (_productDatabase$key$ = _productDatabase$key.colors) === null || _productDatabase$key$ === void 0 ? void 0 : _productDatabase$key$[order.COLOR_NAME];\n      if (!product) return acc;\n      const basePrice = getPriceForQuantity(product, totalQuantity);\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n        if (!qty) return sum;\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n        return sum + (basePrice + surcharge) * qty;\n      }, 0);\n      console.log(`Order ${order.STYLE_No}, color ${order.COLOR_NAME}, quantity ${totalQuantity}, price ${orderPrice}`);\n      return {\n        quantity: acc.quantity + totalQuantity,\n        price: acc.price + orderPrice\n      };\n    }, {\n      quantity: 0,\n      price: 0\n    });\n    console.log('Total quantity:', totals.quantity, 'Total price:', totals.price);\n    return totals;\n  }, [orders, productDatabase]);\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embroidery-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Embroidery Order Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Style No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Color Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Other Sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Line Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Row Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map((order, index) => {\n          var _productDatabase$orde, _productDatabase$orde2, _colors$order$STYLE_N;\n          const product = (_productDatabase$orde = productDatabase[order.STYLE_No]) === null || _productDatabase$orde === void 0 ? void 0 : (_productDatabase$orde2 = _productDatabase$orde.colors) === null || _productDatabase$orde2 === void 0 ? void 0 : _productDatabase$orde2[order.COLOR_NAME];\n          const availableSizes = product ? Object.keys(product).filter(key => key.startsWith('SIZE_') && !MAIN_SIZES.includes(key.replace('SIZE_', ''))).map(key => key.replace('SIZE_', '')).sort((a, b) => ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'].indexOf(a) - ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'].indexOf(b)) : [];\n          const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                cacheOptions: true,\n                loadOptions: async inputValue => {\n                  console.log('Loading styles with input:', inputValue);\n                  const filteredStyles = styles.filter(style => style.toLowerCase().includes(inputValue.toLowerCase()));\n                  return filteredStyles.map(style => ({\n                    label: style,\n                    value: style\n                  }));\n                },\n                defaultOptions: styles.map(style => ({\n                  label: style,\n                  value: style\n                })),\n                onChange: selectedOption => {\n                  const value = selectedOption ? selectedOption.value : '';\n                  updateOrder(index, 'STYLE_No', value);\n                },\n                value: order.STYLE_No ? {\n                  value: order.STYLE_No,\n                  label: order.STYLE_No\n                } : null,\n                placeholder: \"Enter or select style\",\n                isDisabled: isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: order.COLOR_NAME,\n                onChange: e => updateOrder(index, 'COLOR_NAME', e.target.value),\n                disabled: !order.STYLE_No || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this), (_colors$order$STYLE_N = colors[order.STYLE_No]) === null || _colors$order$STYLE_N === void 0 ? void 0 : _colors$order$STYLE_N.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: color,\n                  children: color\n                }, color, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (product === null || product === void 0 ? void 0 : product.PRODUCT_TITLE) || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), MAIN_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: LARGE_SIZES.includes(size) ? 'highlight-large-size' : '',\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: parseInt(e.target.value) || 0\n                  }),\n                  min: \"0\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"price-info\",\n                  children: product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: availableSizes.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [size, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: order.quantities[size] || '',\n                  onChange: e => updateOrder(index, 'quantities', {\n                    ...order.quantities,\n                    [size]: parseInt(e.target.value) || 0\n                  }),\n                  min: \"0\",\n                  disabled: isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this)]\n              }, size, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: lineQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product ? `$${Object.entries(order.quantities).reduce((sum, [size, qty]) => {\n                const price = getPriceForQuantity(product, totals.quantity);\n                const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\n                return sum + (price + surcharge) * (qty || 0);\n              }, 0).toFixed(2)}` : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setOrders(prevOrders => prevOrders.filter((_, i) => i !== index));\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setOrders(prevOrders => [...prevOrders, {\n          STYLE_No: '',\n          COLOR_NAME: '',\n          quantities: {},\n          error: null\n        }]);\n      },\n      children: \"Add Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Quantity: \", totals.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", totals.price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(EmbroideryCalculator, \"s1Fs13Gi52BFCZmVQZRSAndPyeY=\");\n_c2 = EmbroideryCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"EmbroideryCalculator\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","AsyncSelect","db","collection","getDocs","query","where","jsxDEV","_jsxDEV","MAIN_SIZES","LARGE_SIZES","LoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","getPriceForQuantity","product","totalQuantity","parseFloat","Price_72_plus","Price_48_71","Price_24_47","Price_12_23","Price_6_11","Price_2_5","EmbroideryCalculator","_s","productDatabase","setProductDatabase","orders","setOrders","STYLE_No","COLOR_NAME","quantities","error","styles","setStyles","colors","setColors","errorMessage","setErrorMessage","isLoading","setIsLoading","fetchAllStyles","console","log","stylesQuery","querySnapshot","size","stylesData","styleSet","Set","forEach","doc","data","add","Array","from","err","fetchColors","styleNo","colorsQuery","colorSet","productDetails","item","prevColors","prevDatabase","updateOrder","index","field","value","prevOrders","newOrders","calculateOrderTotals","reduce","acc","order","Object","values","sum","qty","totals","_productDatabase$key","_productDatabase$key$","key","basePrice","orderPrice","entries","surcharge","includes","Surcharge","quantity","price","role","map","_productDatabase$orde","_productDatabase$orde2","_colors$order$STYLE_N","availableSizes","keys","filter","startsWith","replace","sort","a","b","indexOf","lineQuantity","cacheOptions","loadOptions","inputValue","filteredStyles","style","toLowerCase","label","defaultOptions","onChange","selectedOption","placeholder","isDisabled","e","target","disabled","color","PRODUCT_TITLE","type","parseInt","min","toFixed","onClick","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst MAIN_SIZES = ['S', 'M', 'L', 'XL', '2XL', '3XL'];\r\nconst LARGE_SIZES = ['2XL', '3XL', '4XL'];\r\n\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nconst getPriceForQuantity = (product, totalQuantity) => {\r\n  if (totalQuantity >= 72) return parseFloat(product.Price_72_plus) || 0;\r\n  if (totalQuantity >= 48) return parseFloat(product.Price_48_71) || 0;\r\n  if (totalQuantity >= 24) return parseFloat(product.Price_24_47) || 0;\r\n  if (totalQuantity >= 12) return parseFloat(product.Price_12_23) || 0;\r\n  if (totalQuantity >= 6) return parseFloat(product.Price_6_11) || 0;\r\n  return parseFloat(product.Price_2_5) || 0;\r\n};\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [productDatabase, setProductDatabase] = useState({});\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      STYLE_No: '',\r\n      COLOR_NAME: '',\r\n      quantities: {},\r\n      error: null,\r\n    },\r\n  ]);\r\n  const [styles, setStyles] = useState([]);\r\n  const [colors, setColors] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchAllStyles = useCallback(async () => {\r\n    console.log('Fetching all styles...');\r\n    setIsLoading(true);\r\n    try {\r\n      const stylesQuery = query(collection(db, 'embroidery_orders'));\r\n      console.log('Executing query...');\r\n      const querySnapshot = await getDocs(stylesQuery);\r\n      console.log('Query executed. Number of documents:', querySnapshot.size);\r\n      \r\n      const stylesData = {};\r\n      const styleSet = new Set();\r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        console.log('Document data:', data);\r\n        if (data.STYLE_No) {\r\n          styleSet.add(data.STYLE_No);\r\n          if (!stylesData[data.STYLE_No]) {\r\n            stylesData[data.STYLE_No] = data;\r\n          }\r\n        }\r\n      });\r\n\r\n      console.log('Unique styles found:', styleSet.size);\r\n      setStyles(Array.from(styleSet));\r\n      setProductDatabase(stylesData);\r\n      console.log('Fetched styles:', stylesData);\r\n    } catch (err) {\r\n      console.error('Error fetching styles:', err);\r\n      setErrorMessage('Failed to load styles. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      console.log('Finished fetching styles.');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchAllStyles();\r\n  }, [fetchAllStyles]);\r\n\r\n  const fetchColors = useCallback(async (styleNo) => {\r\n    if (!styleNo) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(`Fetching colors for style: ${styleNo}`);\r\n      const colorsQuery = query(collection(db, 'embroidery_orders'), where('STYLE_No', '==', styleNo));\r\n      const querySnapshot = await getDocs(colorsQuery);\r\n\r\n      const colorSet = new Set();\r\n      const productDetails = {};\r\n      querySnapshot.forEach((doc) => {\r\n        const item = doc.data();\r\n        if (item.COLOR_NAME) colorSet.add(item.COLOR_NAME);\r\n        productDetails[item.COLOR_NAME] = item;\r\n      });\r\n\r\n      setColors((prevColors) => ({\r\n        ...prevColors,\r\n        [styleNo]: Array.from(colorSet),\r\n      }));\r\n\r\n      setProductDatabase((prevDatabase) => ({\r\n        ...prevDatabase,\r\n        [styleNo]: {\r\n          ...prevDatabase[styleNo],\r\n          colors: productDetails,\r\n        },\r\n      }));\r\n\r\n      console.log('Fetched colors for style:', styleNo, Array.from(colorSet));\r\n    } catch (err) {\r\n      console.error('Error fetching colors:', err);\r\n      setErrorMessage('Failed to load color options. Please try again later.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const updateOrder = useCallback(\r\n    (index, field, value) => {\r\n      console.log(`Updating order ${index}, field: ${field}, value:`, value);\r\n      setOrders((prevOrders) => {\r\n        const newOrders = [...prevOrders];\r\n        newOrders[index] = {\r\n          ...newOrders[index],\r\n          [field]: value,\r\n          error: null,\r\n        };\r\n\r\n        if (field === 'STYLE_No') {\r\n          newOrders[index].COLOR_NAME = '';\r\n          newOrders[index].quantities = {};\r\n          if (value && !colors[value]) {\r\n            fetchColors(value);\r\n          }\r\n        } else if (field === 'COLOR_NAME') {\r\n          newOrders[index].quantities = {};\r\n        }\r\n\r\n        console.log('Updated orders:', newOrders);\r\n        return newOrders;\r\n      });\r\n    },\r\n    [colors, fetchColors]\r\n  );\r\n\r\n  const calculateOrderTotals = useCallback(() => {\r\n    console.log('Calculating order totals...');\r\n    const totalQuantity = orders.reduce((acc, order) => {\r\n      return acc + Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n    }, 0);\r\n\r\n    const totals = orders.reduce((acc, order) => {\r\n      const key = order.STYLE_No;\r\n      const product = productDatabase[key]?.colors?.[order.COLOR_NAME];\r\n      if (!product) return acc;\r\n\r\n      const basePrice = getPriceForQuantity(product, totalQuantity);\r\n\r\n      const orderPrice = Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n        if (!qty) return sum;\r\n        const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n        return sum + (basePrice + surcharge) * qty;\r\n      }, 0);\r\n\r\n      console.log(`Order ${order.STYLE_No}, color ${order.COLOR_NAME}, quantity ${totalQuantity}, price ${orderPrice}`);\r\n      return {\r\n        quantity: acc.quantity + totalQuantity,\r\n        price: acc.price + orderPrice,\r\n      };\r\n    }, { quantity: 0, price: 0 });\r\n\r\n    console.log('Total quantity:', totals.quantity, 'Total price:', totals.price);\r\n    return totals;\r\n  }, [orders, productDatabase]);\r\n\r\n  const totals = useMemo(() => calculateOrderTotals(), [calculateOrderTotals]);\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h1>Embroidery Order Form</h1>\r\n      {errorMessage && (\r\n        <div className=\"error-message\" role=\"alert\">\r\n          <strong>Error: </strong>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n      )}\r\n      {isLoading && <LoadingSpinner />}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Style No</th>\r\n            <th>Color Name</th>\r\n            <th>Product Title</th>\r\n            {MAIN_SIZES.map((size) => (\r\n              <th key={size}>{size}</th>\r\n            ))}\r\n            <th>Other Sizes</th>\r\n            <th>Line Qty</th>\r\n            <th>Row Total</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map((order, index) => {\r\n            const product = productDatabase[order.STYLE_No]?.colors?.[order.COLOR_NAME];\r\n            const availableSizes = product ? Object.keys(product)\r\n              .filter((key) => key.startsWith('SIZE_') && !MAIN_SIZES.includes(key.replace('SIZE_', '')))\r\n              .map(key => key.replace('SIZE_', ''))\r\n              .sort((a, b) => ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'].indexOf(a) - ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL', '6XL'].indexOf(b))\r\n              : [];\r\n            const lineQuantity = Object.values(order.quantities).reduce((sum, qty) => sum + (qty || 0), 0);\r\n\r\n            return (\r\n              <tr key={index}>\r\n                <td>\r\n                  <AsyncSelect\r\n                    cacheOptions\r\n                    loadOptions={async (inputValue) => {\r\n                      console.log('Loading styles with input:', inputValue);\r\n                      const filteredStyles = styles.filter((style) =>\r\n                        style.toLowerCase().includes(inputValue.toLowerCase())\r\n                      );\r\n                      return filteredStyles.map((style) => ({ label: style, value: style }));\r\n                    }}\r\n                    defaultOptions={styles.map((style) => ({ label: style, value: style }))}\r\n                    onChange={(selectedOption) => {\r\n                      const value = selectedOption ? selectedOption.value : '';\r\n                      updateOrder(index, 'STYLE_No', value);\r\n                    }}\r\n                    value={\r\n                      order.STYLE_No\r\n                        ? { value: order.STYLE_No, label: order.STYLE_No }\r\n                        : null\r\n                    }\r\n                    placeholder=\"Enter or select style\"\r\n                    isDisabled={isLoading}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    value={order.COLOR_NAME}\r\n                    onChange={(e) => updateOrder(index, 'COLOR_NAME', e.target.value)}\r\n                    disabled={!order.STYLE_No || isLoading}\r\n                  >\r\n                    <option value=\"\">Select Color</option>\r\n                    {colors[order.STYLE_No]?.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>{product?.PRODUCT_TITLE || ''}</td>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <td key={size} className={LARGE_SIZES.includes(size) ? 'highlight-large-size' : ''}>\r\n                    <div>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) =>\r\n                          updateOrder(index, 'quantities', {\r\n                            ...order.quantities,\r\n                            [size]: parseInt(e.target.value) || 0,\r\n                          })\r\n                        }\r\n                        min=\"0\"\r\n                        disabled={isLoading}\r\n                      />\r\n                      <div className=\"price-info\">\r\n                        {product ? `$${(getPriceForQuantity(product, totals.quantity) + (LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0)).toFixed(2)}` : ''}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  {availableSizes.map((size) => (\r\n                    <div key={size}>\r\n                      <span>{size}: </span>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={order.quantities[size] || ''}\r\n                        onChange={(e) =>\r\n                          updateOrder(index, 'quantities', {\r\n                            ...order.quantities,\r\n                            [size]: parseInt(e.target.value) || 0,\r\n                          })\r\n                        }\r\n                        min=\"0\"\r\n                        disabled={isLoading}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n                <td>{lineQuantity}</td>\r\n                <td>\r\n                  {product\r\n                    ? `$${(\r\n                        Object.entries(order.quantities).reduce((sum, [size, qty]) => {\r\n                          const price = getPriceForQuantity(product, totals.quantity);\r\n                          const surcharge = LARGE_SIZES.includes(size) ? parseFloat(product.Surcharge) || 0 : 0;\r\n                          return sum + (price + surcharge) * (qty || 0);\r\n                        }, 0)\r\n                      ).toFixed(2)}`\r\n                    : ''}\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => {\r\n                    setOrders((prevOrders) => prevOrders.filter((_, i) => i !== index));\r\n                  }}>\r\n                    Remove\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <button\r\n        onClick={() => {\r\n          setOrders((prevOrders) => [\r\n            ...prevOrders,\r\n            { STYLE_No: '', COLOR_NAME: '', quantities: {}, error: null },\r\n          ]);\r\n        }}\r\n      >\r\n        Add Order\r\n      </button>\r\n      <div className=\"order-summary\">\r\n        <h2>Order Summary</h2>\r\n        <p>Total Quantity: {totals.quantity}</p>\r\n        <p>Total Price: ${totals.price.toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}