{"ast":null,"code":"import React,{useState,useEffect}from'react';import{db}from'../firebase';import{collection,getDocs}from'firebase/firestore';import'./EmbroideryCalculator.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmbroideryCalculator=()=>{const[products,setProducts]=useState([]);const[selectedProduct,setSelectedProduct]=useState('');const[selectedColor,setSelectedColor]=useState('');const[selectedSize,setSelectedSize]=useState('');const[quantity,setQuantity]=useState(1);const[price,setPrice]=useState(0);useEffect(()=>{const fetchProducts=async()=>{const querySnapshot=await getDocs(collection(db,'embroidery_orders'));const productList=querySnapshot.docs.map(doc=>doc.data());setProducts(productList);};fetchProducts();},[]);const handleProductChange=e=>{setSelectedProduct(e.target.value);setSelectedColor('');setSelectedSize('');setPrice(0);};const handleColorChange=e=>{setSelectedColor(e.target.value);setPrice(0);};const handleSizeChange=e=>{setSelectedSize(e.target.value);calculatePrice(quantity,e.target.value);};const handleQuantityChange=e=>{const newQuantity=parseInt(e.target.value);setQuantity(newQuantity);calculatePrice(newQuantity,selectedSize);};const calculatePrice=(qty,size)=>{const product=products.find(p=>p.PRODUCT_TITLE===selectedProduct&&p.COLOR_NAME===selectedColor&&p.SIZE===size);if(product){let priceKey;if(qty>=72)priceKey='Price_72_plus';else if(qty>=48)priceKey='Price_48_71';else if(qty>=24)priceKey='Price_24_47';else if(qty>=12)priceKey='Price_12_23';else if(qty>=6)priceKey='Price_6_11';else priceKey='Price_2_5';const basePrice=parseFloat(product[priceKey]);const surcharge=parseFloat(product.Surcharge)||0;setPrice((basePrice+surcharge)*qty);}};const getUniqueProducts=()=>{const uniqueProducts=[...new Set(products.map(product=>product.PRODUCT_TITLE))];return uniqueProducts.sort();};const getUniqueColors=()=>{const productColors=products.filter(product=>product.PRODUCT_TITLE===selectedProduct).map(product=>product.COLOR_NAME);return[...new Set(productColors)].sort();};const getUniqueSizes=()=>{const productSizes=products.filter(product=>product.PRODUCT_TITLE===selectedProduct&&product.COLOR_NAME===selectedColor).map(product=>product.SIZE);return[...new Set(productSizes)].sort();};return/*#__PURE__*/_jsxs(\"div\",{className:\"embroidery-calculator\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Embroidery Price Calculator\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Product:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedProduct,onChange:handleProductChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a product\"}),getUniqueProducts().map(product=>/*#__PURE__*/_jsx(\"option\",{value:product,children:product},product))]})]}),selectedProduct&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Color:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedColor,onChange:handleColorChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a color\"}),getUniqueColors().map(color=>/*#__PURE__*/_jsx(\"option\",{value:color,children:color},color))]})]}),selectedColor&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Size:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedSize,onChange:handleSizeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a size\"}),getUniqueSizes().map(size=>/*#__PURE__*/_jsx(\"option\",{value:size,children:size},size))]})]}),selectedSize&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Quantity:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:quantity,onChange:handleQuantityChange})]}),price>0&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Total Price: $\",price.toFixed(2)]})})]});};export default EmbroideryCalculator;","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","jsx","_jsx","jsxs","_jsxs","EmbroideryCalculator","products","setProducts","selectedProduct","setSelectedProduct","selectedColor","setSelectedColor","selectedSize","setSelectedSize","quantity","setQuantity","price","setPrice","fetchProducts","querySnapshot","productList","docs","map","doc","data","handleProductChange","e","target","value","handleColorChange","handleSizeChange","calculatePrice","handleQuantityChange","newQuantity","parseInt","qty","size","product","find","p","PRODUCT_TITLE","COLOR_NAME","SIZE","priceKey","basePrice","parseFloat","surcharge","Surcharge","getUniqueProducts","uniqueProducts","Set","sort","getUniqueColors","productColors","filter","getUniqueSizes","productSizes","className","children","onChange","color","type","min","toFixed"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport './EmbroideryCalculator.css';\r\n\r\nconst EmbroideryCalculator = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [selectedColor, setSelectedColor] = useState('');\r\n  const [selectedSize, setSelectedSize] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const querySnapshot = await getDocs(collection(db, 'embroidery_orders'));\r\n      const productList = querySnapshot.docs.map(doc => doc.data());\r\n      setProducts(productList);\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleProductChange = (e) => {\r\n    setSelectedProduct(e.target.value);\r\n    setSelectedColor('');\r\n    setSelectedSize('');\r\n    setPrice(0);\r\n  };\r\n\r\n  const handleColorChange = (e) => {\r\n    setSelectedColor(e.target.value);\r\n    setPrice(0);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    setSelectedSize(e.target.value);\r\n    calculatePrice(quantity, e.target.value);\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const newQuantity = parseInt(e.target.value);\r\n    setQuantity(newQuantity);\r\n    calculatePrice(newQuantity, selectedSize);\r\n  };\r\n\r\n  const calculatePrice = (qty, size) => {\r\n    const product = products.find(\r\n      (p) => p.PRODUCT_TITLE === selectedProduct && p.COLOR_NAME === selectedColor && p.SIZE === size\r\n    );\r\n\r\n    if (product) {\r\n      let priceKey;\r\n      if (qty >= 72) priceKey = 'Price_72_plus';\r\n      else if (qty >= 48) priceKey = 'Price_48_71';\r\n      else if (qty >= 24) priceKey = 'Price_24_47';\r\n      else if (qty >= 12) priceKey = 'Price_12_23';\r\n      else if (qty >= 6) priceKey = 'Price_6_11';\r\n      else priceKey = 'Price_2_5';\r\n\r\n      const basePrice = parseFloat(product[priceKey]);\r\n      const surcharge = parseFloat(product.Surcharge) || 0;\r\n      setPrice((basePrice + surcharge) * qty);\r\n    }\r\n  };\r\n\r\n  const getUniqueProducts = () => {\r\n    const uniqueProducts = [...new Set(products.map((product) => product.PRODUCT_TITLE))];\r\n    return uniqueProducts.sort();\r\n  };\r\n\r\n  const getUniqueColors = () => {\r\n    const productColors = products\r\n      .filter((product) => product.PRODUCT_TITLE === selectedProduct)\r\n      .map((product) => product.COLOR_NAME);\r\n    return [...new Set(productColors)].sort();\r\n  };\r\n\r\n  const getUniqueSizes = () => {\r\n    const productSizes = products\r\n      .filter(\r\n        (product) =>\r\n          product.PRODUCT_TITLE === selectedProduct && product.COLOR_NAME === selectedColor\r\n      )\r\n      .map((product) => product.SIZE);\r\n    return [...new Set(productSizes)].sort();\r\n  };\r\n\r\n  return (\r\n    <div className=\"embroidery-calculator\">\r\n      <h2>Embroidery Price Calculator</h2>\r\n      <div>\r\n        <label>Product:</label>\r\n        <select value={selectedProduct} onChange={handleProductChange}>\r\n          <option value=\"\">Select a product</option>\r\n          {getUniqueProducts().map((product) => (\r\n            <option key={product} value={product}>\r\n              {product}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {selectedProduct && (\r\n        <div>\r\n          <label>Color:</label>\r\n          <select value={selectedColor} onChange={handleColorChange}>\r\n            <option value=\"\">Select a color</option>\r\n            {getUniqueColors().map((color) => (\r\n              <option key={color} value={color}>\r\n                {color}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n      {selectedColor && (\r\n        <div>\r\n          <label>Size:</label>\r\n          <select value={selectedSize} onChange={handleSizeChange}>\r\n            <option value=\"\">Select a size</option>\r\n            {getUniqueSizes().map((size) => (\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n      {selectedSize && (\r\n        <div>\r\n          <label>Quantity:</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            value={quantity}\r\n            onChange={handleQuantityChange}\r\n          />\r\n        </div>\r\n      )}\r\n      {price > 0 && (\r\n        <div>\r\n          <h3>Total Price: ${price.toFixed(2)}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmbroideryCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}