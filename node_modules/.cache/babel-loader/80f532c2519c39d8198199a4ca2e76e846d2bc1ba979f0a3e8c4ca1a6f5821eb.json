{"ast":null,"code":"import React,{useState,useEffect}from'react';import AsyncSelect from'react-select/async';import{db}from'../firebase';import{collection,getDoc,getDocs,query,limit,where,orderBy,doc}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EmbroideryCalculator(){const[orders,setOrders]=useState([{styleNo:'',colorName:'',productTitle:'',productData:null,quantities:{},otherQuantity:0,lineTotal:0}]);const[errorMessage,setErrorMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const MAIN_SIZES=['XS','S','M','L','XL','2XL','3XL','4XL','5XL'];// Utility function to convert colors to array\nconst getColorsArray=colors=>{if(Array.isArray(colors)){return colors;}else if(colors&&typeof colors==='object'){return Object.values(colors);}else{return[];}};// Load style options for the AsyncSelect component\nconst loadStyleOptions=async inputValue=>{// ... existing loadStyleOptions code ...\n};// Function to update order fields\nconst updateOrder=(index,field,value)=>{setOrders(prevOrders=>{const updatedOrders=[...prevOrders];updatedOrders[index]={...updatedOrders[index],[field]:value};return updatedOrders;});};// Function to calculate line total\nconst calculateLineTotal=order=>{// ... existing calculateLineTotal code ...\n};return/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 min-h-screen p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-green-600 p-4 bg-green-100\",children:\"Embroidery Order Form\"}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\",role:\"alert\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold\",children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:errorMessage})]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-green-500 text-white\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",style:{width:'200px'},children:\"Style No\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Color\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-left\",children:\"Product Title\"}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:size},size)),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Other\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 text-center\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map((order,index)=>{const product=order.productData;console.log('Order at index',index,':',order);console.log('Product data for style',order.styleNo,':',product);const lineQuantity=Object.values(order.quantities).reduce((sum,qty)=>sum+(parseInt(qty)||0),0);const lineTotal=calculateLineTotal(order).toFixed(2);return/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-gray-50':'bg-white',children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",style:{width:'200px'},children:/*#__PURE__*/_jsx(AsyncSelect,{cacheOptions:true,loadOptions:loadStyleOptions,onChange:selectedOption=>{const value=selectedOption?selectedOption.value:'';console.log('Selected style:',value);updateOrder(index,'styleNo',value);updateOrder(index,'colorName','');updateOrder(index,'productTitle','');updateOrder(index,'productData',null);// Reset product data\n// Fetch product data when styleNo is selected\nconst fetchProductData=async()=>{setIsLoading(true);try{const docRef=doc(db,'styles',value);const docSnap=await getDoc(docRef);if(docSnap.exists()){const data=docSnap.data();console.log('Fetched product data:',data);console.log('Type of data.colors:',typeof data.colors);console.log('Is data.colors an array?',Array.isArray(data.colors));updateOrder(index,'productTitle',data.productTitle||'');updateOrder(index,'productData',data);// Store product data in order\n}else{console.log('No product data found for style:',value);}}catch(error){console.error('Error fetching product data:',error);setErrorMessage('Failed to fetch product data. Please try again.');}finally{setIsLoading(false);}};fetchProductData();},value:order.styleNo?{value:order.styleNo,label:order.styleNo}:null,placeholder:\"Enter style number\",isDisabled:isLoading,styles:{control:provided=>({...provided,minWidth:'200px'}),menu:provided=>({...provided,zIndex:9999})},onInputChange:input=>console.log('Style input changed:',input)})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:product&&product.colors?/*#__PURE__*/_jsxs(\"select\",{className:\"w-full p-1 border rounded\",value:order.colorName||'',onChange:e=>{const value=e.target.value;updateOrder(index,'colorName',value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Color\"}),getColorsArray(product.colors).map((color,idx)=>/*#__PURE__*/_jsx(\"option\",{value:color,children:color},idx))]}):/*#__PURE__*/_jsx(\"select\",{className:\"w-full p-1 border rounded\",disabled:true,children:/*#__PURE__*/_jsx(\"option\",{value:\"\",children:product?'No Colors Available':'Select Style First'})})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2\",children:order.productTitle||''}),MAIN_SIZES.map(size=>/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",className:\"w-16 p-1 border rounded\",value:order.quantities[size]||'',onChange:e=>{const value=e.target.value;const updatedOrders=[...orders];updatedOrders[index].quantities[size]=value;setOrders(updatedOrders);},disabled:!product})},size)),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",className:\"w-16 p-1 border rounded\",value:order.otherQuantity||'',onChange:e=>{const value=e.target.value;const updatedOrders=[...orders];updatedOrders[index].otherQuantity=value;setOrders(updatedOrders);}})}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:lineQuantity}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:lineTotal}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 text-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-red-500 text-white px-2 py-1 rounded\",onClick:()=>{const updatedOrders=[...orders];updatedOrders.splice(index,1);setOrders(updatedOrders);},children:\"Remove\"})})]},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white px-4 py-2 rounded\",onClick:()=>{setOrders([...orders,{styleNo:'',colorName:'',productTitle:'',productData:null,quantities:{},otherQuantity:0,lineTotal:0}]);},children:\"Add Line\"})})]})});}","map":{"version":3,"names":["React","useState","useEffect","AsyncSelect","db","collection","getDoc","getDocs","query","limit","where","orderBy","doc","jsx","_jsx","jsxs","_jsxs","EmbroideryCalculator","orders","setOrders","styleNo","colorName","productTitle","productData","quantities","otherQuantity","lineTotal","errorMessage","setErrorMessage","isLoading","setIsLoading","MAIN_SIZES","getColorsArray","colors","Array","isArray","Object","values","loadStyleOptions","inputValue","updateOrder","index","field","value","prevOrders","updatedOrders","calculateLineTotal","order","className","children","role","style","width","map","size","product","console","log","lineQuantity","reduce","sum","qty","parseInt","toFixed","cacheOptions","loadOptions","onChange","selectedOption","fetchProductData","docRef","docSnap","exists","data","error","label","placeholder","isDisabled","styles","control","provided","minWidth","menu","zIndex","onInputChange","input","e","target","color","idx","disabled","type","min","onClick","splice"],"sources":["C:/Users/erik/Downloads/embroidered-order-form/src/components/EmbroideryCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { db } from '../firebase';\r\nimport {\r\n  collection,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  limit,\r\n  where,\r\n  orderBy,\r\n  doc,\r\n} from 'firebase/firestore';\r\n\r\nexport default function EmbroideryCalculator() {\r\n  const [orders, setOrders] = useState([\r\n    {\r\n      styleNo: '',\r\n      colorName: '',\r\n      productTitle: '',\r\n      productData: null,\r\n      quantities: {},\r\n      otherQuantity: 0,\r\n      lineTotal: 0,\r\n    },\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const MAIN_SIZES = ['XS', 'S', 'M', 'L', 'XL', '2XL', '3XL', '4XL', '5XL'];\r\n\r\n  // Utility function to convert colors to array\r\n  const getColorsArray = (colors) => {\r\n    if (Array.isArray(colors)) {\r\n      return colors;\r\n    } else if (colors && typeof colors === 'object') {\r\n      return Object.values(colors);\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Load style options for the AsyncSelect component\r\n  const loadStyleOptions = async (inputValue) => {\r\n    // ... existing loadStyleOptions code ...\r\n  };\r\n\r\n  // Function to update order fields\r\n  const updateOrder = (index, field, value) => {\r\n    setOrders((prevOrders) => {\r\n      const updatedOrders = [...prevOrders];\r\n      updatedOrders[index] = {\r\n        ...updatedOrders[index],\r\n        [field]: value,\r\n      };\r\n      return updatedOrders;\r\n    });\r\n  };\r\n\r\n  // Function to calculate line total\r\n  const calculateLineTotal = (order) => {\r\n    // ... existing calculateLineTotal code ...\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-4\">\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\r\n        <h1 className=\"text-2xl font-bold text-green-600 p-4 bg-green-100\">\r\n          Embroidery Order Form\r\n        </h1>\r\n        {errorMessage && (\r\n          <div\r\n            className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-3 mb-4\"\r\n            role=\"alert\"\r\n          >\r\n            <p className=\"font-bold\">Error</p>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        {isLoading && <div>Loading...</div>}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-sm\">\r\n            <thead className=\"bg-green-500 text-white\">\r\n              <tr>\r\n                <th className=\"p-2 text-left\" style={{ width: '200px' }}>\r\n                  Style No\r\n                </th>\r\n                <th className=\"p-2 text-left\">Color</th>\r\n                <th className=\"p-2 text-left\">Product Title</th>\r\n                {MAIN_SIZES.map((size) => (\r\n                  <th key={size} className=\"p-2 text-center\">\r\n                    {size}\r\n                  </th>\r\n                ))}\r\n                <th className=\"p-2 text-center\">Other</th>\r\n                <th className=\"p-2 text-center\">Qty</th>\r\n                <th className=\"p-2 text-center\">Total</th>\r\n                <th className=\"p-2 text-center\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => {\r\n                const product = order.productData;\r\n\r\n                console.log('Order at index', index, ':', order);\r\n                console.log('Product data for style', order.styleNo, ':', product);\r\n\r\n                const lineQuantity = Object.values(order.quantities).reduce(\r\n                  (sum, qty) => sum + (parseInt(qty) || 0),\r\n                  0\r\n                );\r\n\r\n                const lineTotal = calculateLineTotal(order).toFixed(2);\r\n\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}\r\n                  >\r\n                    {/* Style No */}\r\n                    <td className=\"p-2\" style={{ width: '200px' }}>\r\n                      <AsyncSelect\r\n                        cacheOptions\r\n                        loadOptions={loadStyleOptions}\r\n                        onChange={(selectedOption) => {\r\n                          const value = selectedOption ? selectedOption.value : '';\r\n                          console.log('Selected style:', value);\r\n                          updateOrder(index, 'styleNo', value);\r\n                          updateOrder(index, 'colorName', '');\r\n                          updateOrder(index, 'productTitle', '');\r\n                          updateOrder(index, 'productData', null); // Reset product data\r\n\r\n                          // Fetch product data when styleNo is selected\r\n                          const fetchProductData = async () => {\r\n                            setIsLoading(true);\r\n                            try {\r\n                              const docRef = doc(db, 'styles', value);\r\n                              const docSnap = await getDoc(docRef);\r\n                              if (docSnap.exists()) {\r\n                                const data = docSnap.data();\r\n                                console.log('Fetched product data:', data);\r\n                                console.log('Type of data.colors:', typeof data.colors);\r\n                                console.log('Is data.colors an array?', Array.isArray(data.colors));\r\n                                updateOrder(index, 'productTitle', data.productTitle || '');\r\n                                updateOrder(index, 'productData', data); // Store product data in order\r\n                              } else {\r\n                                console.log('No product data found for style:', value);\r\n                              }\r\n                            } catch (error) {\r\n                              console.error('Error fetching product data:', error);\r\n                              setErrorMessage(\r\n                                'Failed to fetch product data. Please try again.'\r\n                              );\r\n                            } finally {\r\n                              setIsLoading(false);\r\n                            }\r\n                          };\r\n                          fetchProductData();\r\n                        }}\r\n                        value={\r\n                          order.styleNo\r\n                            ? { value: order.styleNo, label: order.styleNo }\r\n                            : null\r\n                        }\r\n                        placeholder=\"Enter style number\"\r\n                        isDisabled={isLoading}\r\n                        styles={{\r\n                          control: (provided) => ({ ...provided, minWidth: '200px' }),\r\n                          menu: (provided) => ({ ...provided, zIndex: 9999 }),\r\n                        }}\r\n                        onInputChange={(input) =>\r\n                          console.log('Style input changed:', input)\r\n                        }\r\n                      />\r\n                    </td>\r\n                    {/* Color selection */}\r\n                    <td className=\"p-2\">\r\n                      {product && product.colors ? (\r\n                        <select\r\n                          className=\"w-full p-1 border rounded\"\r\n                          value={order.colorName || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            updateOrder(index, 'colorName', value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Color</option>\r\n                          {getColorsArray(product.colors).map((color, idx) => (\r\n                            <option key={idx} value={color}>\r\n                              {color}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        <select className=\"w-full p-1 border rounded\" disabled>\r\n                          <option value=\"\">\r\n                            {product ? 'No Colors Available' : 'Select Style First'}\r\n                          </option>\r\n                        </select>\r\n                      )}\r\n                    </td>\r\n                    {/* Product Title */}\r\n                    <td className=\"p-2\">{order.productTitle || ''}</td>\r\n                    {/* Sizes */}\r\n                    {MAIN_SIZES.map((size) => (\r\n                      <td key={size} className=\"p-2 text-center\">\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          className=\"w-16 p-1 border rounded\"\r\n                          value={order.quantities[size] || ''}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            const updatedOrders = [...orders];\r\n                            updatedOrders[index].quantities[size] = value;\r\n                            setOrders(updatedOrders);\r\n                          }}\r\n                          disabled={!product}\r\n                        />\r\n                      </td>\r\n                    ))}\r\n                    {/* Other quantity */}\r\n                    <td className=\"p-2 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        className=\"w-16 p-1 border rounded\"\r\n                        value={order.otherQuantity || ''}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          const updatedOrders = [...orders];\r\n                          updatedOrders[index].otherQuantity = value;\r\n                          setOrders(updatedOrders);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    {/* Quantity total */}\r\n                    <td className=\"p-2 text-center\">{lineQuantity}</td>\r\n                    {/* Line total */}\r\n                    <td className=\"p-2 text-center\">{lineTotal}</td>\r\n                    {/* Actions */}\r\n                    <td className=\"p-2 text-center\">\r\n                      <button\r\n                        className=\"bg-red-500 text-white px-2 py-1 rounded\"\r\n                        onClick={() => {\r\n                          const updatedOrders = [...orders];\r\n                          updatedOrders.splice(index, 1);\r\n                          setOrders(updatedOrders);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* Add Line Button */}\r\n        <div className=\"p-4\">\r\n          <button\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded\"\r\n            onClick={() => {\r\n              setOrders([\r\n                ...orders,\r\n                {\r\n                  styleNo: '',\r\n                  colorName: '',\r\n                  productTitle: '',\r\n                  productData: null,\r\n                  quantities: {},\r\n                  otherQuantity: 0,\r\n                  lineTotal: 0,\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Add Line\r\n          </button>\r\n        </div>\r\n        {/* Submit Button or Other Components */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}